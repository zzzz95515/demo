package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * A collection of power system resources (within a given substation) including 
 * conducting equipment, protection relays, measurements, and telemetry.  
 * A bay typically represents a physical grouping related to modularization 
 * of equipment.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "bay")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class Bay extends EquipmentContainer {
	/**
	 * Indicates the presence/absence of energy measurements.
	 */
	@Column(name="bayEnergyMeasFlag", nullable = true)
	private Boolean bayEnergyMeasFlag;
	/**
	 * Indicates the presence/absence of active/reactive power measurements.
	 */
	@Column(name="bayPowerMeasFlag", nullable = true)
	private Boolean bayPowerMeasFlag;
	/**
	 * Breaker configuration. 
	 */
	@Enumerated(EnumType.STRING)
	@Column(name = "breakerConfiguration")
	private BreakerConfiguration breakerConfiguration;
	/**
	 * Bus bar configuration.
	 */
	@Enumerated(EnumType.STRING)
	@Column(name = "busBarConfiguration")
	private BusbarConfiguration busBarConfiguration;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "substation_mrid")
	@JoinColumn(name = "substation_projectid")
	@JoinColumn(name = "substation_synthesizedschemenumber")
	@JoinColumn(name = "substation_schemascenarionumber")
	private Substation Substation;
	/**
	 * The bays within this voltage level.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "voltagelevel_mrid")
	@JoinColumn(name = "voltagelevel_projectid")
	@JoinColumn(name = "voltagelevel_synthesizedschemenumber")
	@JoinColumn(name = "voltagelevel_schemascenarionumber")
	private VoltageLevel VoltageLevel;

	public Boolean getBayEnergyMeasFlag(){
		return this.bayEnergyMeasFlag;
	}

	@FieldSetter(fieldName = "Bay.bayEnergyMeasFlag", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setBayEnergyMeasFlag(Boolean bayEnergyMeasFlag){
		this.bayEnergyMeasFlag = bayEnergyMeasFlag;
	}

	public Boolean getBayPowerMeasFlag(){
		return this.bayPowerMeasFlag;
	}

	@FieldSetter(fieldName = "Bay.bayPowerMeasFlag", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setBayPowerMeasFlag(Boolean bayPowerMeasFlag){
		this.bayPowerMeasFlag = bayPowerMeasFlag;
	}

	public BreakerConfiguration getBreakerConfiguration(){
		return this.breakerConfiguration;
	}

	@FieldSetter(fieldName = "Bay.breakerConfiguration", fieldTypeStereotype = "Enumeration", fieldStereotype = "none")
	public void setBreakerConfiguration(BreakerConfiguration breakerConfiguration){
		this.breakerConfiguration = breakerConfiguration;
	}

	public BusbarConfiguration getBusBarConfiguration(){
		return this.busBarConfiguration;
	}

	@FieldSetter(fieldName = "Bay.busBarConfiguration", fieldTypeStereotype = "Enumeration", fieldStereotype = "none")
	public void setBusBarConfiguration(BusbarConfiguration busBarConfiguration){
		this.busBarConfiguration = busBarConfiguration;
	}

	public Substation getSubstation(){
		return this.Substation;
	}

	@AssociationSetter(fieldName = "Bay.Substation", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.Substation", cardinality = "one")
	public void setSubstation(Substation Substation){
		this.Substation = Substation;
	}

	public VoltageLevel getVoltageLevel(){
		return this.VoltageLevel;
	}

	@AssociationSetter(fieldName = "Bay.VoltageLevel", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.VoltageLevel", cardinality = "one")
	public void setVoltageLevel(VoltageLevel VoltageLevel){
		this.VoltageLevel = VoltageLevel;
	}

	public Bay(){

	}

}
