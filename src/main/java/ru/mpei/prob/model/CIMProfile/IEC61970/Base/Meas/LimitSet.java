package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Meas;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * Specifies a set of Limits that are associated with a Measurement. A Measurement 
 * may have several LimitSets corresponding to seasonal or other changing 
 * conditions. The condition is captured in the name and description attributes. 
 * The same LimitSet may be used for several Measurements. In particular percentage 
 * limits are used this way.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:53 MSK 2020
 */

@Entity
@Table(name = "limitset")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class LimitSet extends IdentifiedObject {
	/**
	 * Tells if the limit values are in percentage of normalValue or the specified 
	 * Unit for Measurements and Controls.
	 */
	@Column(name="isPercentageLimits", nullable = true)
	private Boolean isPercentageLimits;


	public Boolean getIsPercentageLimits(){
		return this.isPercentageLimits;
	}

	@FieldSetter(fieldName = "LimitSet.isPercentageLimits", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setIsPercentageLimits(Boolean isPercentageLimits){
		this.isPercentageLimits = isPercentageLimits;
	}

	public LimitSet(){

	}

}
