package ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChanger;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * State variable for transformer tap step.     This class is to be used for 
 * taps of LTC (load tap changing) transformers, not fixed tap transformers.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:54 MSK 2020
 */

@Entity
@Table(name = "svtapstep")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class SvTapStep extends StateVariable {
	/**
	 * The floating point tap position.   This is not the tap ratio, but rather 
	 * the tap step position as defined by the related tap changer model and normally 
	 * is constrained to be within the range of minimum and maximum tap positions.
	 */
	@Column(name="position", nullable = true)
	private Float position;

	/**
	 * The tap step state associated with the tap changer.
	 */
	@OneToOne(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "SvTapStep")
	private TapChanger TapChanger;

	public Float getPosition(){
		return this.position;
	}

	@FieldSetter(fieldName = "SvTapStep.position", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPosition(Float position){
		this.position = position;
	}

	@JsonIgnore
	public TapChanger getTapChanger(){
		return this.TapChanger;
	}

	@AssociationSetter(fieldName = "SvTapStep.TapChanger", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Wires.TapChanger", cardinality = "one")
	public void setTapChanger(TapChanger TapChanger){
		this.TapChanger = TapChanger;
	}

	public SvTapStep(){

	}

}
