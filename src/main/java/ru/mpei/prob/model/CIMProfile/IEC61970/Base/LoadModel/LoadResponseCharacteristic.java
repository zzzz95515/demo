package ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EnergyConsumer;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * Models the characteristic response of the load demand due to changes in 
 * system conditions such as voltage and frequency. This is not related to 
 * demand response.If LoadResponseCharacteristic.exponentModel is True, the 
 * voltage exponents are specified and used as to calculate:Active power component 
 * = Pnominal * (Voltage/cim:BaseVoltage.nominalVoltage) ** cim:LoadResponseCharacteristic.pVoltageExponentReactive 
 * power component = Qnominal * (Voltage/cim:BaseVoltage.nominalVoltage)** 
 * cim:LoadResponseCharacteristic.qVoltageExponentWhere  * means "multiply" 
 * and ** is "raised to power of".
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:53 MSK 2020
 */

@Entity
@Table(name = "loadresponsecharacteristic")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class LoadResponseCharacteristic extends IdentifiedObject {
	/**
	 * Indicates the exponential voltage dependency model is to be used.   If 
	 * false, the coefficient model is to be used.The exponential voltage dependency 
	 * model consist of the attributes- pVoltageExponent- qVoltageExponent.The 
	 * coefficient model consist of the attributes- pConstantImpedance- pConstantCurrent- 
	 * pConstantPower- qConstantImpedance- qConstantCurrent- qConstantPower.The 
	 * sum of pConstantImpedance, pConstantCurrent and pConstantPower shall equal 
	 * 1.The sum of qConstantImpedance, qConstantCurrent and qConstantPower shall 
	 * equal 1.
	 */
	@Column(name="exponentModel", nullable = true)
	private Boolean exponentModel;
	/**
	 * Portion of active power load modeled as constant current.
	 */
	@Column(name="pConstantCurrent", nullable = true)
	private Float pConstantCurrent;
	/**
	 * Portion of active power load modeled as constant impedance.
	 */
	@Column(name="pConstantImpedance", nullable = true)
	private Float pConstantImpedance;
	/**
	 * Portion of active power load modeled as constant power.
	 */
	@Column(name="pConstantPower", nullable = true)
	private Float pConstantPower;
	/**
	 * Exponent of per unit frequency effecting active power.
	 */
	@Column(name="pFrequencyExponent", nullable = true)
	private Float pFrequencyExponent;
	/**
	 * Exponent of per unit voltage effecting real power.
	 */
	@Column(name="pVoltageExponent", nullable = true)
	private Float pVoltageExponent;
	/**
	 * Portion of reactive power load modeled as constant current.
	 */
	@Column(name="qConstantCurrent", nullable = true)
	private Float qConstantCurrent;
	/**
	 * Portion of reactive power load modeled as constant impedance.
	 */
	@Column(name="qConstantImpedance", nullable = true)
	private Float qConstantImpedance;
	/**
	 * Portion of reactive power load modeled as constant power.
	 */
	@Column(name="qConstantPower", nullable = true)
	private Float qConstantPower;
	/**
	 * Exponent of per unit frequency effecting reactive power.
	 */
	@Column(name="qFrequencyExponent", nullable = true)
	private Float qFrequencyExponent;
	/**
	 * Exponent of per unit voltage effecting reactive power.
	 */
	@Column(name="qVoltageExponent", nullable = true)
	private Float qVoltageExponent;

	/**
	 * The load response characteristic of this load.  If missing, this load is 
	 * assumed to be constant power.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "LoadResponse")
	private List<EnergyConsumer> EnergyConsumer;

	public Boolean getExponentModel(){
		return this.exponentModel;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.exponentModel", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setExponentModel(Boolean exponentModel){
		this.exponentModel = exponentModel;
	}

	public Float getPConstantCurrent(){
		return this.pConstantCurrent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.pConstantCurrent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPConstantCurrent(Float pConstantCurrent){
		this.pConstantCurrent = pConstantCurrent;
	}

	public Float getPConstantImpedance(){
		return this.pConstantImpedance;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.pConstantImpedance", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPConstantImpedance(Float pConstantImpedance){
		this.pConstantImpedance = pConstantImpedance;
	}

	public Float getPConstantPower(){
		return this.pConstantPower;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.pConstantPower", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPConstantPower(Float pConstantPower){
		this.pConstantPower = pConstantPower;
	}

	public Float getPFrequencyExponent(){
		return this.pFrequencyExponent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.pFrequencyExponent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPFrequencyExponent(Float pFrequencyExponent){
		this.pFrequencyExponent = pFrequencyExponent;
	}

	public Float getPVoltageExponent(){
		return this.pVoltageExponent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.pVoltageExponent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPVoltageExponent(Float pVoltageExponent){
		this.pVoltageExponent = pVoltageExponent;
	}

	public Float getQConstantCurrent(){
		return this.qConstantCurrent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.qConstantCurrent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setQConstantCurrent(Float qConstantCurrent){
		this.qConstantCurrent = qConstantCurrent;
	}

	public Float getQConstantImpedance(){
		return this.qConstantImpedance;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.qConstantImpedance", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setQConstantImpedance(Float qConstantImpedance){
		this.qConstantImpedance = qConstantImpedance;
	}

	public Float getQConstantPower(){
		return this.qConstantPower;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.qConstantPower", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setQConstantPower(Float qConstantPower){
		this.qConstantPower = qConstantPower;
	}

	public Float getQFrequencyExponent(){
		return this.qFrequencyExponent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.qFrequencyExponent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setQFrequencyExponent(Float qFrequencyExponent){
		this.qFrequencyExponent = qFrequencyExponent;
	}

	public Float getQVoltageExponent(){
		return this.qVoltageExponent;
	}

	@FieldSetter(fieldName = "LoadResponseCharacteristic.qVoltageExponent", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setQVoltageExponent(Float qVoltageExponent){
		this.qVoltageExponent = qVoltageExponent;
	}

	@JsonIgnore
	public List<EnergyConsumer> getEnergyConsumer(){
		return this.EnergyConsumer;
	}

	@AssociationSetter(fieldName = "LoadResponseCharacteristic.EnergyConsumer", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Wires.EnergyConsumer", cardinality = "many")
	public void setEnergyConsumer(List<EnergyConsumer> EnergyConsumer){
		this.EnergyConsumer = EnergyConsumer;
	}

	public LoadResponseCharacteristic(){

	}

}
