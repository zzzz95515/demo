package ru.mpei.prob.model.CIMProfile.NTI.Sequences;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Voltage;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * Последовательности напряжений
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Embeddable
@JsonInclude(JsonInclude.Include.NON_NULL)
public class VoltageSequences {
	/**
	 * Обратная последовательность
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="negative_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="negative_unit")),
		@AttributeOverride(name="value", column=@Column(name="negative_value")),
	})
	private Voltage negative;
	/**
	 * Прямая последовательность
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="positive_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="positive_unit")),
		@AttributeOverride(name="value", column=@Column(name="positive_value")),
	})
	private Voltage positive;
	/**
	 * Нулевая последовательность
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="zero_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="zero_unit")),
		@AttributeOverride(name="value", column=@Column(name="zero_value")),
	})
	private Voltage zero;


	public Voltage getNegative(){
		return this.negative;
	}

	@FieldSetter(fieldName = "VoltageSequences.negative", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "nti")
	public void setNegative(Voltage negative){
		this.negative = negative;
	}

	public Voltage getPositive(){
		return this.positive;
	}

	@FieldSetter(fieldName = "VoltageSequences.positive", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "nti")
	public void setPositive(Voltage positive){
		this.positive = positive;
	}

	public Voltage getZero(){
		return this.zero;
	}

	@FieldSetter(fieldName = "VoltageSequences.zero", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "nti")
	public void setZero(Voltage zero){
		this.zero = zero;
	}

	public VoltageSequences(){

	}

}
