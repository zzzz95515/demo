package ru.mpei.prob.model.CIMProfile;

public class ExportMethods {
	
	private String baseURI;	
	private String rdfXmlBody = "";
	

	public ExportMethods(String baseURI) {
		this.baseURI = baseURI;
	}

	public String getRdfXmlBody(){
		return this.rdfXmlBody;
	}
	
    // The CIM exporter methods generated by JavaBeansGenerator
	public void selectAndApplyExportMethod(Object object){
		switch (((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject) object).getClassName()){
			case CapexOpexCalculationResult: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.CapexOpexCalculationResult) object); break;
			case ChargeController: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.ChargeController) object); break;
			case Cluster: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.Cluster) object); break;
			case ConsumersCluster: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.ConsumersCluster) object); break;
			case ConsumersVoltageCluster: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.ConsumersVoltageCluster) object); break;
			case ScenarioPossibility: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.ScenarioPossibility) object); break;
			case BatteryBankCell: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.EnergyStorageSystems.BatteryBankCell) object); break;
			case BatteryEnergyStorageSystem: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.NTI.EnergyStorageSystems.BatteryEnergyStorageSystem) object); break;
			case Asset: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Assets.Asset) object); break;
			case CoordinateSystem: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Common.CoordinateSystem) object); break;
			case Location: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Common.Location) object); break;
			case OrganisationRole: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Common.OrganisationRole) object); break;
			case Customer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Customers.Customer) object); break;
			case Outage: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61968.Operations.Outage) object); break;
			case IEC61970CIMVersion: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.IEC61970CIMVersion) object); break;
			case AuxiliaryEquipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.AuxiliaryEquipment) object); break;
			case CurrentTransformer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.CurrentTransformer) object); break;
			case PotentialTransformer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.PotentialTransformer) object); break;
			case Sensor: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.Sensor) object); break;
			case SurgeArrester: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.SurgeArrester) object); break;
			case ACDCTerminal: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ACDCTerminal) object); break;
			case BaseVoltage: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.BaseVoltage) object); break;
			case Bay: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Bay) object); break;
			case ConductingEquipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConductingEquipment) object); break;
			case ConnectivityNode: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConnectivityNode) object); break;
			case ConnectivityNodeContainer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConnectivityNodeContainer) object); break;
			case Curve: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Curve) object); break;
			case CurveData: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.CurveData) object); break;
			case Equipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Equipment) object); break;
			case EquipmentContainer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.EquipmentContainer) object); break;
			case GeographicalRegion: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.GeographicalRegion) object); break;
			case IdentifiedObject: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject) object); break;
			case Name: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Name) object); break;
			case NameType: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.NameType) object); break;
			case PowerSystemResource: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.PowerSystemResource) object); break;
			case ReportingGroup: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ReportingGroup) object); break;
			case SubGeographicalRegion: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.SubGeographicalRegion) object); break;
			case Substation: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Substation) object); break;
			case Terminal: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Terminal) object); break;
			case VoltageLevel: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.VoltageLevel) object); break;
			case ACDCConverter: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.ACDCConverter) object); break;
			case ACDCConverterDCTerminal: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.ACDCConverterDCTerminal) object); break;
			case CsConverter: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.CsConverter) object); break;
			case DCBaseTerminal: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBaseTerminal) object); break;
			case DCBreaker: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBreaker) object); break;
			case DCBusbar: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBusbar) object); break;
			case DCChopper: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCChopper) object); break;
			case DCConductingEquipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCConductingEquipment) object); break;
			case DCConverterUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCConverterUnit) object); break;
			case DCDisconnector: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCDisconnector) object); break;
			case DCEquipmentContainer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCEquipmentContainer) object); break;
			case DCGround: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCGround) object); break;
			case DCLine: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCLine) object); break;
			case DCLineSegment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCLineSegment) object); break;
			case DCNode: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCNode) object); break;
			case DCSeriesDevice: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCSeriesDevice) object); break;
			case DCShunt: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCShunt) object); break;
			case DCSwitch: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCSwitch) object); break;
			case DCTerminal: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCTerminal) object); break;
			case DCTopologicalIsland: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCTopologicalIsland) object); break;
			case PerLengthDCLineParameter: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.PerLengthDCLineParameter) object); break;
			case VsCapabilityCurve: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.VsCapabilityCurve) object); break;
			case VsConverter: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.VsConverter) object); break;
			case Diagram: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.Diagram) object); break;
			case DiagramObject: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObject) object); break;
			case DiagramObjectGluePoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectGluePoint) object); break;
			case DiagramObjectPoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectPoint) object); break;
			case DiagramObjectStyle: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectStyle) object); break;
			case DiagramStyle: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramStyle) object); break;
			case TextDiagramObject: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.TextDiagramObject) object); break;
			case VisibilityLayer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.VisibilityLayer) object); break;
			case EquivalentBranch: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentBranch) object); break;
			case EquivalentEquipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentEquipment) object); break;
			case EquivalentInjection: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentInjection) object); break;
			case EquivalentNetwork: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentNetwork) object); break;
			case EquivalentShunt: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentShunt) object); break;
			case EquipmentFault: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.EquipmentFault) object); break;
			case Fault: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.Fault) object); break;
			case FaultCauseType: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.FaultCauseType) object); break;
			case LineFault: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.LineFault) object); break;
			case FossilFuel: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.FossilFuel) object); break;
			case GeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.GeneratingUnit) object); break;
			case HydroGeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroGeneratingUnit) object); break;
			case HydroPowerPlant: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroPowerPlant) object); break;
			case HydroPump: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroPump) object); break;
			case NuclearGeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.NuclearGeneratingUnit) object); break;
			case SolarGeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.SolarGeneratingUnit) object); break;
			case ThermalGeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.ThermalGeneratingUnit) object); break;
			case WindGeneratingUnit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.WindGeneratingUnit) object); break;
			case ConformLoad: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.ConformLoad) object); break;
			case ConformLoadGroup: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.ConformLoadGroup) object); break;
			case EnergyArea: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.EnergyArea) object); break;
			case LoadGroup: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.LoadGroup) object); break;
			case LoadResponseCharacteristic: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.LoadResponseCharacteristic) object); break;
			case NonConformLoad: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.NonConformLoad) object); break;
			case NonConformLoadGroup: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.NonConformLoadGroup) object); break;
			case StationSupply: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.StationSupply) object); break;
			case Limit: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Meas.Limit) object); break;
			case LimitSet: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Meas.LimitSet) object); break;
            case DistanceRelay: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.DistanceRelay) object); break;
			case CurrentRelay: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.CurrentRelay) object); break;
			case ProtectionEquipment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.ProtectionEquipment) object); break;
			case RecloseSequence: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.RecloseSequence) object); break;
			case CILO: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.CILO) object); break;
			case Common_LN: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.Common_LN) object); break;
			case CSWI: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.CSWI) object); break;
			case PDIF: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIF) object); break;
			case PDIS: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIS) object); break;
			case PDIS_Settings: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIS_Settings) object); break;
			case StateVariable: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.StateVariable) object); break;
			case SvInjection: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvInjection) object); break;
			case SvPowerFlow: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvPowerFlow) object); break;
			case SvShuntCompensatorSections: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvShuntCompensatorSections) object); break;
			case SvStatus: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvStatus) object); break;
			case SvTapStep: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvTapStep) object); break;
			case SvVoltage: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvVoltage) object); break;
			case BusNameMarker: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.BusNameMarker) object); break;
			case DCTopologicalNode: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.DCTopologicalNode) object); break;
			case TopologicalIsland: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalIsland) object); break;
			case TopologicalNode: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode) object); break;
			case ACLineSegment: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ACLineSegment) object); break;
			case AsynchronousMachine: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.AsynchronousMachine) object); break;
			case Breaker: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Breaker) object); break;
			case BusbarSection: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.BusbarSection) object); break;
			case Conductor: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Conductor) object); break;
			case Connector: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Connector) object); break;
			case Disconnector: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Disconnector) object); break;
			case EarthFaultCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EarthFaultCompensator) object); break;
			case EnergyConsumer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EnergyConsumer) object); break;
			case EnergySource: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EnergySource) object); break;
			case ExternalNetworkInjection: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ExternalNetworkInjection) object); break;
			case GroundDisconnector: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.GroundDisconnector) object); break;
			case Junction: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Junction) object); break;
			case Line: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Line) object); break;
			case LinearShuntCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.LinearShuntCompensator) object); break;
			case LoadBreakSwitch: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.LoadBreakSwitch) object); break;
			case NonlinearShuntCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.NonlinearShuntCompensator) object); break;
			case NonlinearShuntCompensatorPoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.NonlinearShuntCompensatorPoint) object); break;
			case PerLengthLineParameter: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PerLengthLineParameter) object); break;
			case PetersenCoil: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PetersenCoil) object); break;
			case PhaseTapChanger: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChanger) object); break;
			case PhaseTapChangerAsymmetrical: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerAsymmetrical) object); break;
			case PhaseTapChangerLinear: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerLinear) object); break;
			case PhaseTapChangerNonLinear: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerNonLinear) object); break;
			case PhaseTapChangerSymmetrical: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerSymmetrical) object); break;
			case PhaseTapChangerTable: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTable) object); break;
			case PhaseTapChangerTablePoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTablePoint) object); break;
			case PhaseTapChangerTabular: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTabular) object); break;
			case PowerTransformer: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PowerTransformer) object); break;
			case PowerTransformerEnd: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PowerTransformerEnd) object); break;
			case ProtectedSwitch: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ProtectedSwitch) object); break;
			case RatioTapChanger: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChanger) object); break;
			case RatioTapChangerTable: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChangerTable) object); break;
			case RatioTapChangerTablePoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChangerTablePoint) object); break;
			case ReactiveCapabilityCurve: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ReactiveCapabilityCurve) object); break;
			case Recloser: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Recloser) object); break;
			case RegulatingCondEq: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RegulatingCondEq) object); break;
			case RegulatingControl: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RegulatingControl) object); break;
			case RotatingMachine: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RotatingMachine) object); break;
			case SeriesCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.SeriesCompensator) object); break;
			case ShuntCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ShuntCompensator) object); break;
			case ShuntCompensatorPhase: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ShuntCompensatorPhase) object); break;
			case StaticVarCompensator: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.StaticVarCompensator) object); break;
			case Switch: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Switch) object); break;
			case SynchronousMachine: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.SynchronousMachine) object); break;
			case TapChanger: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChanger) object); break;
			case TapChangerControl: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChangerControl) object); break;
			case TapChangerTablePoint: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChangerTablePoint) object); break;
			case TransformerEnd: this.rdfXmlBody += this.createResource((ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TransformerEnd) object); break;
		}
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.CapexOpexCalculationResult capexopexcalculationresult){
		String rdfXmlResource = "";
		if (capexopexcalculationresult.getMRID() != null){
			rdfXmlResource = "\t<cim:CapexOpexCalculationResult rdf:ID = \"_" + capexopexcalculationresult.getMRID() + "\">\n";
		}
		if (capexopexcalculationresult.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += capexopexcalculationresult.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (capexopexcalculationresult.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += capexopexcalculationresult.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (capexopexcalculationresult.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += capexopexcalculationresult.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (capexopexcalculationresult.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += capexopexcalculationresult.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (capexopexcalculationresult.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += capexopexcalculationresult.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (capexopexcalculationresult.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + capexopexcalculationresult.getRpnCondition() + "\"/>\n";
		}
		if (capexopexcalculationresult.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += capexopexcalculationresult.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (capexopexcalculationresult.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + capexopexcalculationresult.getSchemeType() + "\"/>\n";
		}
		if (capexopexcalculationresult.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + capexopexcalculationresult.getSeasonType() + "\"/>\n";
		}
		if (capexopexcalculationresult.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + capexopexcalculationresult.getSubtaskNumber() + "\"/>\n";
		}
		if (capexopexcalculationresult.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += capexopexcalculationresult.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (capexopexcalculationresult.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += capexopexcalculationresult.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (capexopexcalculationresult.getCapex() != null){
			rdfXmlResource += "\t\t<nti:CapexOpexCalculationResult.capex>";
			rdfXmlResource += capexopexcalculationresult.getCapex().getValue().toString();
			rdfXmlResource += "</nti:CapexOpexCalculationResult.capex>\n";
		}
		if (capexopexcalculationresult.getOpex() != null){
			rdfXmlResource += "\t\t<nti:CapexOpexCalculationResult.opex>";
			rdfXmlResource += capexopexcalculationresult.getOpex().getValue().toString();
			rdfXmlResource += "</nti:CapexOpexCalculationResult.opex>\n";
		}
		if (capexopexcalculationresult.getMRID() != null){
			rdfXmlResource += "\t</cim:CapexOpexCalculationResult>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.ChargeController chargecontroller){
		String rdfXmlResource = "";
		if (chargecontroller.getMRID() != null){
			rdfXmlResource = "\t<cim:ChargeController rdf:ID = \"_" + chargecontroller.getMRID() + "\">\n";
		}
		if (chargecontroller.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + chargecontroller.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (chargecontroller.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + chargecontroller.getAssets().getMRID() + "\"/>\n";
		}
		if (chargecontroller.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + chargecontroller.getLocation().getMRID() + "\"/>\n";
		}
		if (chargecontroller.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += chargecontroller.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (chargecontroller.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += chargecontroller.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (chargecontroller.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += chargecontroller.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (chargecontroller.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += chargecontroller.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (chargecontroller.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += chargecontroller.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (chargecontroller.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += chargecontroller.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (chargecontroller.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += chargecontroller.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (chargecontroller.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += chargecontroller.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (chargecontroller.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += chargecontroller.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (chargecontroller.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += chargecontroller.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (chargecontroller.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += chargecontroller.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (chargecontroller.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += chargecontroller.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (chargecontroller.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += chargecontroller.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (chargecontroller.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += chargecontroller.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (chargecontroller.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += chargecontroller.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (chargecontroller.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += chargecontroller.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (chargecontroller.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += chargecontroller.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (chargecontroller.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += chargecontroller.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (chargecontroller.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += chargecontroller.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (chargecontroller.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += chargecontroller.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (chargecontroller.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += chargecontroller.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (chargecontroller.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += chargecontroller.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (chargecontroller.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += chargecontroller.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (chargecontroller.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += chargecontroller.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (chargecontroller.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + chargecontroller.getRpnCondition() + "\"/>\n";
		}
		if (chargecontroller.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += chargecontroller.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (chargecontroller.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + chargecontroller.getSchemeType() + "\"/>\n";
		}
		if (chargecontroller.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + chargecontroller.getSeasonType() + "\"/>\n";
		}
		if (chargecontroller.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + chargecontroller.getSubtaskNumber() + "\"/>\n";
		}
		if (chargecontroller.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += chargecontroller.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (chargecontroller.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += chargecontroller.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (chargecontroller.getMRID() != null){
			rdfXmlResource += "\t</cim:ChargeController>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.Cluster cluster){
		String rdfXmlResource = "";
		if (cluster.getMRID() != null){
			rdfXmlResource = "\t<cim:Cluster rdf:ID = \"_" + cluster.getMRID() + "\">\n";
		}
		if (cluster.getMaxBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:Cluster.MaxBaseVoltage rdf:resource=\"#_" + cluster.getMaxBaseVoltage().getMRID() + "\"/>\n";
		}
		if (cluster.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += cluster.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (cluster.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += cluster.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (cluster.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += cluster.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (cluster.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += cluster.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (cluster.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += cluster.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (cluster.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + cluster.getRpnCondition() + "\"/>\n";
		}
		if (cluster.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += cluster.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (cluster.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + cluster.getSchemeType() + "\"/>\n";
		}
		if (cluster.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + cluster.getSeasonType() + "\"/>\n";
		}
		if (cluster.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + cluster.getSubtaskNumber() + "\"/>\n";
		}
		if (cluster.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += cluster.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (cluster.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += cluster.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (cluster.getMRID() != null){
			rdfXmlResource += "\t</cim:Cluster>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.ConsumersCluster consumerscluster){
		String rdfXmlResource = "";
		if (consumerscluster.getMRID() != null){
			rdfXmlResource = "\t<cim:ConsumersCluster rdf:ID = \"_" + consumerscluster.getMRID() + "\">\n";
		}
		if (consumerscluster.getMaxBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:Cluster.MaxBaseVoltage rdf:resource=\"#_" + consumerscluster.getMaxBaseVoltage().getMRID() + "\"/>\n";
		}
		if (consumerscluster.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += consumerscluster.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (consumerscluster.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += consumerscluster.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (consumerscluster.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += consumerscluster.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (consumerscluster.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += consumerscluster.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (consumerscluster.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += consumerscluster.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (consumerscluster.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + consumerscluster.getRpnCondition() + "\"/>\n";
		}
		if (consumerscluster.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += consumerscluster.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (consumerscluster.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + consumerscluster.getSchemeType() + "\"/>\n";
		}
		if (consumerscluster.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + consumerscluster.getSeasonType() + "\"/>\n";
		}
		if (consumerscluster.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + consumerscluster.getSubtaskNumber() + "\"/>\n";
		}
		if (consumerscluster.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += consumerscluster.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (consumerscluster.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += consumerscluster.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (consumerscluster.getMRID() != null){
			rdfXmlResource += "\t</cim:ConsumersCluster>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.ConsumersVoltageCluster consumersvoltagecluster){
		String rdfXmlResource = "";
		if (consumersvoltagecluster.getMRID() != null){
			rdfXmlResource = "\t<cim:ConsumersVoltageCluster rdf:ID = \"_" + consumersvoltagecluster.getMRID() + "\">\n";
		}
		if (consumersvoltagecluster.getMaxBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:Cluster.MaxBaseVoltage rdf:resource=\"#_" + consumersvoltagecluster.getMaxBaseVoltage().getMRID() + "\"/>\n";
		}
		if (consumersvoltagecluster.getConsumersCluster() != null){
			rdfXmlResource += "\t\t<cim:ConsumersVoltageCluster.ConsumersCluster rdf:resource=\"#_" + consumersvoltagecluster.getConsumersCluster().getMRID() + "\"/>\n";
		}
		if (consumersvoltagecluster.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += consumersvoltagecluster.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (consumersvoltagecluster.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += consumersvoltagecluster.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (consumersvoltagecluster.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += consumersvoltagecluster.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (consumersvoltagecluster.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += consumersvoltagecluster.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (consumersvoltagecluster.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += consumersvoltagecluster.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (consumersvoltagecluster.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + consumersvoltagecluster.getRpnCondition() + "\"/>\n";
		}
		if (consumersvoltagecluster.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += consumersvoltagecluster.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (consumersvoltagecluster.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + consumersvoltagecluster.getSchemeType() + "\"/>\n";
		}
		if (consumersvoltagecluster.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + consumersvoltagecluster.getSeasonType() + "\"/>\n";
		}
		if (consumersvoltagecluster.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + consumersvoltagecluster.getSubtaskNumber() + "\"/>\n";
		}
		if (consumersvoltagecluster.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += consumersvoltagecluster.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (consumersvoltagecluster.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += consumersvoltagecluster.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (consumersvoltagecluster.getMRID() != null){
			rdfXmlResource += "\t</cim:ConsumersVoltageCluster>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.ScenarioPossibility scenariopossibility){
		String rdfXmlResource = "";
		if (scenariopossibility.getMRID() != null){
			rdfXmlResource = "\t<cim:ScenarioPossibility rdf:ID = \"_" + scenariopossibility.getMRID() + "\">\n";
		}
		if (scenariopossibility.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += scenariopossibility.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (scenariopossibility.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += scenariopossibility.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (scenariopossibility.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += scenariopossibility.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (scenariopossibility.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += scenariopossibility.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (scenariopossibility.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += scenariopossibility.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (scenariopossibility.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + scenariopossibility.getRpnCondition() + "\"/>\n";
		}
		if (scenariopossibility.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += scenariopossibility.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (scenariopossibility.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + scenariopossibility.getSchemeType() + "\"/>\n";
		}
		if (scenariopossibility.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + scenariopossibility.getSeasonType() + "\"/>\n";
		}
		if (scenariopossibility.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + scenariopossibility.getSubtaskNumber() + "\"/>\n";
		}
		if (scenariopossibility.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += scenariopossibility.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (scenariopossibility.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += scenariopossibility.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (scenariopossibility.getScenarioPossibility() != null){
			rdfXmlResource += "\t\t<nti:ScenarioPossibility.scenarioPossibility>";
			rdfXmlResource += scenariopossibility.getScenarioPossibility().toString();
			rdfXmlResource += "</nti:ScenarioPossibility.scenarioPossibility>\n";
		}
		if (scenariopossibility.getMRID() != null){
			rdfXmlResource += "\t</cim:ScenarioPossibility>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.EnergyStorageSystems.BatteryBankCell batterybankcell){
		String rdfXmlResource = "";
		if (batterybankcell.getMRID() != null){
			rdfXmlResource = "\t<cim:BatteryBankCell rdf:ID = \"_" + batterybankcell.getMRID() + "\">\n";
		}
		if (batterybankcell.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + batterybankcell.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (batterybankcell.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + batterybankcell.getAssets().getMRID() + "\"/>\n";
		}
		if (batterybankcell.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + batterybankcell.getLocation().getMRID() + "\"/>\n";
		}
		if (batterybankcell.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += batterybankcell.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (batterybankcell.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += batterybankcell.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (batterybankcell.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += batterybankcell.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (batterybankcell.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += batterybankcell.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (batterybankcell.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += batterybankcell.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (batterybankcell.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += batterybankcell.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (batterybankcell.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += batterybankcell.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (batterybankcell.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += batterybankcell.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (batterybankcell.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += batterybankcell.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (batterybankcell.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += batterybankcell.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (batterybankcell.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += batterybankcell.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (batterybankcell.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += batterybankcell.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (batterybankcell.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += batterybankcell.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (batterybankcell.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += batterybankcell.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (batterybankcell.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += batterybankcell.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (batterybankcell.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += batterybankcell.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (batterybankcell.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += batterybankcell.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (batterybankcell.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += batterybankcell.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (batterybankcell.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += batterybankcell.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (batterybankcell.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += batterybankcell.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (batterybankcell.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += batterybankcell.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (batterybankcell.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += batterybankcell.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (batterybankcell.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += batterybankcell.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (batterybankcell.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += batterybankcell.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (batterybankcell.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + batterybankcell.getRpnCondition() + "\"/>\n";
		}
		if (batterybankcell.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += batterybankcell.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (batterybankcell.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + batterybankcell.getSchemeType() + "\"/>\n";
		}
		if (batterybankcell.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + batterybankcell.getSeasonType() + "\"/>\n";
		}
		if (batterybankcell.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + batterybankcell.getSubtaskNumber() + "\"/>\n";
		}
		if (batterybankcell.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += batterybankcell.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (batterybankcell.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += batterybankcell.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (batterybankcell.getCapacity() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.capacity>";
			rdfXmlResource += batterybankcell.getCapacity().toString();
			rdfXmlResource += "</nti:BatteryBankCell.capacity>\n";
		}
		if (batterybankcell.getElectroliteDensity() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.electroliteDensity>";
			rdfXmlResource += batterybankcell.getElectroliteDensity().toString();
			rdfXmlResource += "</nti:BatteryBankCell.electroliteDensity>\n";
		}
		if (batterybankcell.getMaxChargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.maxChargingCurrent>";
			rdfXmlResource += batterybankcell.getMaxChargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.maxChargingCurrent>\n";
		}
		if (batterybankcell.getMaxDischargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.maxDischargingCurrent>";
			rdfXmlResource += batterybankcell.getMaxDischargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.maxDischargingCurrent>\n";
		}
		if (batterybankcell.getMaxWorkingVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.maxWorkingVoltage>";
			rdfXmlResource += batterybankcell.getMaxWorkingVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.maxWorkingVoltage>\n";
		}
		if (batterybankcell.getMinWorkingVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.minWorkingVoltage>";
			rdfXmlResource += batterybankcell.getMinWorkingVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.minWorkingVoltage>\n";
		}
		if (batterybankcell.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.priceAdditional>";
			rdfXmlResource += batterybankcell.getPriceAdditional().toString();
			rdfXmlResource += "</nti:BatteryBankCell.priceAdditional>\n";
		}
		if (batterybankcell.getPriceLocation() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.priceLocation>";
			rdfXmlResource += batterybankcell.getPriceLocation().toString();
			rdfXmlResource += "</nti:BatteryBankCell.priceLocation>\n";
		}
		if (batterybankcell.getRatedChargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.ratedChargingCurrent>";
			rdfXmlResource += batterybankcell.getRatedChargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.ratedChargingCurrent>\n";
		}
		if (batterybankcell.getRatedDischargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.ratedDischargingCurrent>";
			rdfXmlResource += batterybankcell.getRatedDischargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.ratedDischargingCurrent>\n";
		}
		if (batterybankcell.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryBankCell.ratedVoltage>";
			rdfXmlResource += batterybankcell.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryBankCell.ratedVoltage>\n";
		}
		if (batterybankcell.getMRID() != null){
			rdfXmlResource += "\t</cim:BatteryBankCell>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.NTI.EnergyStorageSystems.BatteryEnergyStorageSystem batteryenergystoragesystem){
		String rdfXmlResource = "";
		if (batteryenergystoragesystem.getMRID() != null){
			rdfXmlResource = "\t<cim:BatteryEnergyStorageSystem rdf:ID = \"_" + batteryenergystoragesystem.getMRID() + "\">\n";
		}
		if (batteryenergystoragesystem.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + batteryenergystoragesystem.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + batteryenergystoragesystem.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + batteryenergystoragesystem.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + batteryenergystoragesystem.getSvStatus().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: batteryenergystoragesystem.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (batteryenergystoragesystem.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + batteryenergystoragesystem.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + batteryenergystoragesystem.getAssets().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + batteryenergystoragesystem.getLocation().getMRID() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += batteryenergystoragesystem.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (batteryenergystoragesystem.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += batteryenergystoragesystem.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (batteryenergystoragesystem.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += batteryenergystoragesystem.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (batteryenergystoragesystem.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += batteryenergystoragesystem.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (batteryenergystoragesystem.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += batteryenergystoragesystem.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (batteryenergystoragesystem.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += batteryenergystoragesystem.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (batteryenergystoragesystem.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += batteryenergystoragesystem.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (batteryenergystoragesystem.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += batteryenergystoragesystem.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (batteryenergystoragesystem.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += batteryenergystoragesystem.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (batteryenergystoragesystem.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += batteryenergystoragesystem.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (batteryenergystoragesystem.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += batteryenergystoragesystem.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (batteryenergystoragesystem.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += batteryenergystoragesystem.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (batteryenergystoragesystem.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += batteryenergystoragesystem.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (batteryenergystoragesystem.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += batteryenergystoragesystem.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (batteryenergystoragesystem.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += batteryenergystoragesystem.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (batteryenergystoragesystem.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += batteryenergystoragesystem.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (batteryenergystoragesystem.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += batteryenergystoragesystem.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (batteryenergystoragesystem.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += batteryenergystoragesystem.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (batteryenergystoragesystem.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += batteryenergystoragesystem.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (batteryenergystoragesystem.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += batteryenergystoragesystem.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (batteryenergystoragesystem.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += batteryenergystoragesystem.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (batteryenergystoragesystem.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += batteryenergystoragesystem.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (batteryenergystoragesystem.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += batteryenergystoragesystem.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (batteryenergystoragesystem.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += batteryenergystoragesystem.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (batteryenergystoragesystem.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += batteryenergystoragesystem.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (batteryenergystoragesystem.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += batteryenergystoragesystem.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (batteryenergystoragesystem.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += batteryenergystoragesystem.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (batteryenergystoragesystem.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += batteryenergystoragesystem.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (batteryenergystoragesystem.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += batteryenergystoragesystem.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (batteryenergystoragesystem.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += batteryenergystoragesystem.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (batteryenergystoragesystem.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += batteryenergystoragesystem.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (batteryenergystoragesystem.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + batteryenergystoragesystem.getRpnCondition() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += batteryenergystoragesystem.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (batteryenergystoragesystem.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + batteryenergystoragesystem.getSchemeType() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + batteryenergystoragesystem.getSeasonType() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + batteryenergystoragesystem.getSubtaskNumber() + "\"/>\n";
		}
		if (batteryenergystoragesystem.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += batteryenergystoragesystem.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (batteryenergystoragesystem.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += batteryenergystoragesystem.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (batteryenergystoragesystem.getCellsPerModuleNumber() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.cellsPerModuleNumber>";
			rdfXmlResource += batteryenergystoragesystem.getCellsPerModuleNumber().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.cellsPerModuleNumber>\n";
		}
		if (batteryenergystoragesystem.getMaxChargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.maxChargingCurrent>";
			rdfXmlResource += batteryenergystoragesystem.getMaxChargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.maxChargingCurrent>\n";
		}
		if (batteryenergystoragesystem.getMaxDischargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.maxDischargingCurrent>";
			rdfXmlResource += batteryenergystoragesystem.getMaxDischargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.maxDischargingCurrent>\n";
		}
		if (batteryenergystoragesystem.getMaxWorkingVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.maxWorkingVoltage>";
			rdfXmlResource += batteryenergystoragesystem.getMaxWorkingVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.maxWorkingVoltage>\n";
		}
		if (batteryenergystoragesystem.getMinWorkingVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.minWorkingVoltage>";
			rdfXmlResource += batteryenergystoragesystem.getMinWorkingVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.minWorkingVoltage>\n";
		}
		if (batteryenergystoragesystem.getModulesNumber() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.modulesNumber>";
			rdfXmlResource += batteryenergystoragesystem.getModulesNumber().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.modulesNumber>\n";
		}
		if (batteryenergystoragesystem.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.priceAdditional>";
			rdfXmlResource += batteryenergystoragesystem.getPriceAdditional().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.priceAdditional>\n";
		}
		if (batteryenergystoragesystem.getPriceLocation() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.priceLocation>";
			rdfXmlResource += batteryenergystoragesystem.getPriceLocation().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.priceLocation>\n";
		}
		if (batteryenergystoragesystem.getRatedChargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.ratedChargingCurrent>";
			rdfXmlResource += batteryenergystoragesystem.getRatedChargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.ratedChargingCurrent>\n";
		}
		if (batteryenergystoragesystem.getRatedDischargingCurrent() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.ratedDischargingCurrent>";
			rdfXmlResource += batteryenergystoragesystem.getRatedDischargingCurrent().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.ratedDischargingCurrent>\n";
		}
		if (batteryenergystoragesystem.getRatedP() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.ratedP>";
			rdfXmlResource += batteryenergystoragesystem.getRatedP().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.ratedP>\n";
		}
		if (batteryenergystoragesystem.getRatedStoredEnergy() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.ratedStoredEnergy>";
			rdfXmlResource += batteryenergystoragesystem.getRatedStoredEnergy().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.ratedStoredEnergy>\n";
		}
		if (batteryenergystoragesystem.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:BatteryEnergyStorageSystem.ratedVoltage>";
			rdfXmlResource += batteryenergystoragesystem.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:BatteryEnergyStorageSystem.ratedVoltage>\n";
		}
		if (batteryenergystoragesystem.getMRID() != null){
			rdfXmlResource += "\t</cim:BatteryEnergyStorageSystem>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Assets.Asset asset){
		String rdfXmlResource = "";
		if (asset.getMRID() != null){
			rdfXmlResource = "\t<cim:Asset rdf:ID = \"_" + asset.getMRID() + "\">\n";
		}
		if (asset.getLocation() != null){
			rdfXmlResource += "\t\t<cim:Asset.Location rdf:resource=\"#_" + asset.getLocation().getMRID() + "\"/>\n";
		}
		if (asset.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += asset.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (asset.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += asset.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (asset.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += asset.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (asset.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += asset.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (asset.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += asset.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (asset.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + asset.getRpnCondition() + "\"/>\n";
		}
		if (asset.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += asset.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (asset.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + asset.getSchemeType() + "\"/>\n";
		}
		if (asset.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + asset.getSeasonType() + "\"/>\n";
		}
		if (asset.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + asset.getSubtaskNumber() + "\"/>\n";
		}
		if (asset.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += asset.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (asset.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += asset.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (asset.getAcceptanceTest() != null){
			rdfXmlResource += "\t\t<cim:Asset.acceptanceTest>\n";
			rdfXmlResource += "\t\t\t<cim:AcceptanceTest>\n";
			if (asset.getAcceptanceTest().getDateTime() != null){
				rdfXmlResource += "\t\t\t\t<cim:AcceptanceTest.dateTime>";
				rdfXmlResource += asset.getAcceptanceTest().getDateTime().getYear() + "-" + asset.getAcceptanceTest().getDateTime().getMonth() + "-" + asset.getAcceptanceTest().getDateTime().getDate();
				rdfXmlResource += "</cim:AcceptanceTest.dateTime>\n";
			}
			if (asset.getAcceptanceTest().getSuccess() != null){
				rdfXmlResource += "\t\t\t\t<cim:AcceptanceTest.success>";
				rdfXmlResource += asset.getAcceptanceTest().getSuccess().toString();
				rdfXmlResource += "</cim:AcceptanceTest.success>\n";
			}
			if (asset.getAcceptanceTest().getType() != null){
				rdfXmlResource += "\t\t\t\t<cim:AcceptanceTest.type>";
				rdfXmlResource += asset.getAcceptanceTest().getType();
				rdfXmlResource += "</cim:AcceptanceTest.type>\n";
			}
			rdfXmlResource += "\t\t\t</cim:AcceptanceTest>\n";
			rdfXmlResource += "\t\t</cim:Asset.acceptanceTest>\n";
		}
		if (asset.getCritical() != null){
			rdfXmlResource += "\t\t<cim:Asset.critical>";
			rdfXmlResource += asset.getCritical().toString();
			rdfXmlResource += "</cim:Asset.critical>\n";
		}
		if (asset.getElectronicAddress() != null){
			rdfXmlResource += "\t\t<cim:Asset.electronicAddress>\n";
			rdfXmlResource += "\t\t\t<cim:ElectronicAddress>\n";
			if (asset.getElectronicAddress().getEmail1() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.email1>";
				rdfXmlResource += asset.getElectronicAddress().getEmail1();
				rdfXmlResource += "</cim:ElectronicAddress.email1>\n";
			}
			if (asset.getElectronicAddress().getEmail2() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.email2>";
				rdfXmlResource += asset.getElectronicAddress().getEmail2();
				rdfXmlResource += "</cim:ElectronicAddress.email2>\n";
			}
			if (asset.getElectronicAddress().getLan() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.lan>";
				rdfXmlResource += asset.getElectronicAddress().getLan();
				rdfXmlResource += "</cim:ElectronicAddress.lan>\n";
			}
			if (asset.getElectronicAddress().getMac() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.mac>";
				rdfXmlResource += asset.getElectronicAddress().getMac();
				rdfXmlResource += "</cim:ElectronicAddress.mac>\n";
			}
			if (asset.getElectronicAddress().getPassword() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.password>";
				rdfXmlResource += asset.getElectronicAddress().getPassword();
				rdfXmlResource += "</cim:ElectronicAddress.password>\n";
			}
			if (asset.getElectronicAddress().getRadio() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.radio>";
				rdfXmlResource += asset.getElectronicAddress().getRadio();
				rdfXmlResource += "</cim:ElectronicAddress.radio>\n";
			}
			if (asset.getElectronicAddress().getUserID() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.userID>";
				rdfXmlResource += asset.getElectronicAddress().getUserID();
				rdfXmlResource += "</cim:ElectronicAddress.userID>\n";
			}
			if (asset.getElectronicAddress().getWeb() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.web>";
				rdfXmlResource += asset.getElectronicAddress().getWeb();
				rdfXmlResource += "</cim:ElectronicAddress.web>\n";
			}
			rdfXmlResource += "\t\t\t</cim:ElectronicAddress>\n";
			rdfXmlResource += "\t\t</cim:Asset.electronicAddress>\n";
		}
		if (asset.getInitialCondition() != null){
			rdfXmlResource += "\t\t<cim:Asset.initialCondition>";
			rdfXmlResource += asset.getInitialCondition();
			rdfXmlResource += "</cim:Asset.initialCondition>\n";
		}
		if (asset.getInitialLossOfLife() != null){
			rdfXmlResource += "\t\t<cim:Asset.initialLossOfLife>";
			rdfXmlResource += asset.getInitialLossOfLife().getValue().toString();
			rdfXmlResource += "</cim:Asset.initialLossOfLife>\n";
		}
		if (asset.getLifecycle() != null){
			rdfXmlResource += "\t\t<cim:Asset.lifecycle>\n";
			rdfXmlResource += "\t\t\t<cim:LifecycleDate>\n";
			if (asset.getLifecycle().getInstallationDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.installationDate>";
				rdfXmlResource += asset.getLifecycle().getInstallationDate().getYear() + "-" + asset.getLifecycle().getInstallationDate().getMonth() + "-" + asset.getLifecycle().getInstallationDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.installationDate>\n";
			}
			if (asset.getLifecycle().getManufacturedDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.manufacturedDate>";
				rdfXmlResource += asset.getLifecycle().getManufacturedDate().getYear() + "-" + asset.getLifecycle().getManufacturedDate().getMonth() + "-" + asset.getLifecycle().getManufacturedDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.manufacturedDate>\n";
			}
			if (asset.getLifecycle().getPurchaseDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.purchaseDate>";
				rdfXmlResource += asset.getLifecycle().getPurchaseDate().getYear() + "-" + asset.getLifecycle().getPurchaseDate().getMonth() + "-" + asset.getLifecycle().getPurchaseDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.purchaseDate>\n";
			}
			if (asset.getLifecycle().getReceivedDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.receivedDate>";
				rdfXmlResource += asset.getLifecycle().getReceivedDate().getYear() + "-" + asset.getLifecycle().getReceivedDate().getMonth() + "-" + asset.getLifecycle().getReceivedDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.receivedDate>\n";
			}
			if (asset.getLifecycle().getRemovalDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.removalDate>";
				rdfXmlResource += asset.getLifecycle().getRemovalDate().getYear() + "-" + asset.getLifecycle().getRemovalDate().getMonth() + "-" + asset.getLifecycle().getRemovalDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.removalDate>\n";
			}
			if (asset.getLifecycle().getRetiredDate() != null){
				rdfXmlResource += "\t\t\t\t<cim:LifecycleDate.retiredDate>";
				rdfXmlResource += asset.getLifecycle().getRetiredDate().getYear() + "-" + asset.getLifecycle().getRetiredDate().getMonth() + "-" + asset.getLifecycle().getRetiredDate().getDate();
				rdfXmlResource += "</cim:LifecycleDate.retiredDate>\n";
			}
			rdfXmlResource += "\t\t\t</cim:LifecycleDate>\n";
			rdfXmlResource += "\t\t</cim:Asset.lifecycle>\n";
		}
		if (asset.getLotNumber() != null){
			rdfXmlResource += "\t\t<cim:Asset.lotNumber>";
			rdfXmlResource += asset.getLotNumber();
			rdfXmlResource += "</cim:Asset.lotNumber>\n";
		}
		if (asset.getPurchasePrice() != null){
			rdfXmlResource += "\t\t<cim:Asset.purchasePrice>";
			rdfXmlResource += asset.getPurchasePrice().getValue().toString();
			rdfXmlResource += "</cim:Asset.purchasePrice>\n";
		}
		if (asset.getSerialNumber() != null){
			rdfXmlResource += "\t\t<cim:Asset.serialNumber>";
			rdfXmlResource += asset.getSerialNumber();
			rdfXmlResource += "</cim:Asset.serialNumber>\n";
		}
		if (asset.getStatus() != null){
			rdfXmlResource += "\t\t<cim:Asset.status>\n";
			rdfXmlResource += "\t\t\t<cim:Status>\n";
			if (asset.getStatus().getDateTime() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.dateTime>";
				rdfXmlResource += asset.getStatus().getDateTime().getYear() + "-" + asset.getStatus().getDateTime().getMonth() + "-" + asset.getStatus().getDateTime().getDate();
				rdfXmlResource += "</cim:Status.dateTime>\n";
			}
			if (asset.getStatus().getReason() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.reason>";
				rdfXmlResource += asset.getStatus().getReason();
				rdfXmlResource += "</cim:Status.reason>\n";
			}
			if (asset.getStatus().getRemark() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.remark>";
				rdfXmlResource += asset.getStatus().getRemark();
				rdfXmlResource += "</cim:Status.remark>\n";
			}
			if (asset.getStatus().getValue() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.value>";
				rdfXmlResource += asset.getStatus().getValue();
				rdfXmlResource += "</cim:Status.value>\n";
			}
			rdfXmlResource += "\t\t\t</cim:Status>\n";
			rdfXmlResource += "\t\t</cim:Asset.status>\n";
		}
		if (asset.getType() != null){
			rdfXmlResource += "\t\t<cim:Asset.type>";
			rdfXmlResource += asset.getType();
			rdfXmlResource += "</cim:Asset.type>\n";
		}
		if (asset.getUtcNumber() != null){
			rdfXmlResource += "\t\t<cim:Asset.utcNumber>";
			rdfXmlResource += asset.getUtcNumber();
			rdfXmlResource += "</cim:Asset.utcNumber>\n";
		}
		if (asset.getMRID() != null){
			rdfXmlResource += "\t</cim:Asset>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Common.CoordinateSystem coordinatesystem){
		String rdfXmlResource = "";
		if (coordinatesystem.getMRID() != null){
			rdfXmlResource = "\t<cim:CoordinateSystem rdf:ID = \"_" + coordinatesystem.getMRID() + "\">\n";
		}
		if (coordinatesystem.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += coordinatesystem.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (coordinatesystem.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += coordinatesystem.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (coordinatesystem.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += coordinatesystem.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (coordinatesystem.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += coordinatesystem.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (coordinatesystem.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += coordinatesystem.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (coordinatesystem.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + coordinatesystem.getRpnCondition() + "\"/>\n";
		}
		if (coordinatesystem.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += coordinatesystem.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (coordinatesystem.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + coordinatesystem.getSchemeType() + "\"/>\n";
		}
		if (coordinatesystem.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + coordinatesystem.getSeasonType() + "\"/>\n";
		}
		if (coordinatesystem.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + coordinatesystem.getSubtaskNumber() + "\"/>\n";
		}
		if (coordinatesystem.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += coordinatesystem.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (coordinatesystem.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += coordinatesystem.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (coordinatesystem.getCrsUrn() != null){
			rdfXmlResource += "\t\t<cim:CoordinateSystem.crsUrn>";
			rdfXmlResource += coordinatesystem.getCrsUrn();
			rdfXmlResource += "</cim:CoordinateSystem.crsUrn>\n";
		}
		if (coordinatesystem.getMRID() != null){
			rdfXmlResource += "\t</cim:CoordinateSystem>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Common.Location location){
		String rdfXmlResource = "";
		if (location.getMRID() != null){
			rdfXmlResource = "\t<cim:Location rdf:ID = \"_" + location.getMRID() + "\">\n";
		}
		if (location.getCoordinateSystem() != null){
			rdfXmlResource += "\t\t<cim:Location.CoordinateSystem rdf:resource=\"#_" + location.getCoordinateSystem().getMRID() + "\"/>\n";
		}
		if (location.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += location.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (location.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += location.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (location.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += location.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (location.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += location.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (location.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += location.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (location.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + location.getRpnCondition() + "\"/>\n";
		}
		if (location.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += location.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (location.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + location.getSchemeType() + "\"/>\n";
		}
		if (location.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + location.getSeasonType() + "\"/>\n";
		}
		if (location.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + location.getSubtaskNumber() + "\"/>\n";
		}
		if (location.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += location.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (location.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += location.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (location.getDirection() != null){
			rdfXmlResource += "\t\t<cim:Location.direction>";
			rdfXmlResource += location.getDirection();
			rdfXmlResource += "</cim:Location.direction>\n";
		}
		if (location.getElectronicAddress() != null){
			rdfXmlResource += "\t\t<cim:Location.electronicAddress>\n";
			rdfXmlResource += "\t\t\t<cim:ElectronicAddress>\n";
			if (location.getElectronicAddress().getEmail1() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.email1>";
				rdfXmlResource += location.getElectronicAddress().getEmail1();
				rdfXmlResource += "</cim:ElectronicAddress.email1>\n";
			}
			if (location.getElectronicAddress().getEmail2() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.email2>";
				rdfXmlResource += location.getElectronicAddress().getEmail2();
				rdfXmlResource += "</cim:ElectronicAddress.email2>\n";
			}
			if (location.getElectronicAddress().getLan() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.lan>";
				rdfXmlResource += location.getElectronicAddress().getLan();
				rdfXmlResource += "</cim:ElectronicAddress.lan>\n";
			}
			if (location.getElectronicAddress().getMac() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.mac>";
				rdfXmlResource += location.getElectronicAddress().getMac();
				rdfXmlResource += "</cim:ElectronicAddress.mac>\n";
			}
			if (location.getElectronicAddress().getPassword() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.password>";
				rdfXmlResource += location.getElectronicAddress().getPassword();
				rdfXmlResource += "</cim:ElectronicAddress.password>\n";
			}
			if (location.getElectronicAddress().getRadio() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.radio>";
				rdfXmlResource += location.getElectronicAddress().getRadio();
				rdfXmlResource += "</cim:ElectronicAddress.radio>\n";
			}
			if (location.getElectronicAddress().getUserID() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.userID>";
				rdfXmlResource += location.getElectronicAddress().getUserID();
				rdfXmlResource += "</cim:ElectronicAddress.userID>\n";
			}
			if (location.getElectronicAddress().getWeb() != null){
				rdfXmlResource += "\t\t\t\t<cim:ElectronicAddress.web>";
				rdfXmlResource += location.getElectronicAddress().getWeb();
				rdfXmlResource += "</cim:ElectronicAddress.web>\n";
			}
			rdfXmlResource += "\t\t\t</cim:ElectronicAddress>\n";
			rdfXmlResource += "\t\t</cim:Location.electronicAddress>\n";
		}
		if (location.getGeoInfoReference() != null){
			rdfXmlResource += "\t\t<cim:Location.geoInfoReference>";
			rdfXmlResource += location.getGeoInfoReference();
			rdfXmlResource += "</cim:Location.geoInfoReference>\n";
		}
		if (location.getMainAddress() != null){
			rdfXmlResource += "\t\t<cim:Location.mainAddress>\n";
			rdfXmlResource += "\t\t\t<cim:StreetAddress>\n";
			if (location.getMainAddress().getStatus() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.status>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:Status>\n";
				if (location.getMainAddress().getStatus().getDateTime() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.dateTime>";
					rdfXmlResource += location.getMainAddress().getStatus().getDateTime().getYear() + "-" + location.getMainAddress().getStatus().getDateTime().getMonth() + "-" + location.getMainAddress().getStatus().getDateTime().getDate();
					rdfXmlResource += "</cim:Status.dateTime>\n";
				}
				if (location.getMainAddress().getStatus().getReason() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.reason>";
					rdfXmlResource += location.getMainAddress().getStatus().getReason();
					rdfXmlResource += "</cim:Status.reason>\n";
				}
				if (location.getMainAddress().getStatus().getRemark() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.remark>";
					rdfXmlResource += location.getMainAddress().getStatus().getRemark();
					rdfXmlResource += "</cim:Status.remark>\n";
				}
				if (location.getMainAddress().getStatus().getValue() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.value>";
					rdfXmlResource += location.getMainAddress().getStatus().getValue();
					rdfXmlResource += "</cim:Status.value>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:Status>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.status>\n";
			}
			if (location.getMainAddress().getStreetDetail() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.streetDetail>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:StreetDetail>\n";
				if (location.getMainAddress().getStreetDetail().getAddressGeneral() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.addressGeneral>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getAddressGeneral();
					rdfXmlResource += "</cim:StreetDetail.addressGeneral>\n";
				}
				if (location.getMainAddress().getStreetDetail().getBuildingName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.buildingName>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getBuildingName();
					rdfXmlResource += "</cim:StreetDetail.buildingName>\n";
				}
				if (location.getMainAddress().getStreetDetail().getCode() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.code>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getCode();
					rdfXmlResource += "</cim:StreetDetail.code>\n";
				}
				if (location.getMainAddress().getStreetDetail().getName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.name>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getName();
					rdfXmlResource += "</cim:StreetDetail.name>\n";
				}
				if (location.getMainAddress().getStreetDetail().getNumber() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.number>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getNumber();
					rdfXmlResource += "</cim:StreetDetail.number>\n";
				}
				if (location.getMainAddress().getStreetDetail().getPrefix() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.prefix>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getPrefix();
					rdfXmlResource += "</cim:StreetDetail.prefix>\n";
				}
				if (location.getMainAddress().getStreetDetail().getSuffix() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.suffix>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getSuffix();
					rdfXmlResource += "</cim:StreetDetail.suffix>\n";
				}
				if (location.getMainAddress().getStreetDetail().getSuiteNumber() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.suiteNumber>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getSuiteNumber();
					rdfXmlResource += "</cim:StreetDetail.suiteNumber>\n";
				}
				if (location.getMainAddress().getStreetDetail().getType() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.type>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getType();
					rdfXmlResource += "</cim:StreetDetail.type>\n";
				}
				if (location.getMainAddress().getStreetDetail().getWithinTownLimits() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.withinTownLimits>";
					rdfXmlResource += location.getMainAddress().getStreetDetail().getWithinTownLimits().toString();
					rdfXmlResource += "</cim:StreetDetail.withinTownLimits>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:StreetDetail>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.streetDetail>\n";
			}
			if (location.getMainAddress().getTownDetail() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.townDetail>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:TownDetail>\n";
				if (location.getMainAddress().getTownDetail().getCode() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.code>";
					rdfXmlResource += location.getMainAddress().getTownDetail().getCode();
					rdfXmlResource += "</cim:TownDetail.code>\n";
				}
				if (location.getMainAddress().getTownDetail().getCountry() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.country>";
					rdfXmlResource += location.getMainAddress().getTownDetail().getCountry();
					rdfXmlResource += "</cim:TownDetail.country>\n";
				}
				if (location.getMainAddress().getTownDetail().getName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.name>";
					rdfXmlResource += location.getMainAddress().getTownDetail().getName();
					rdfXmlResource += "</cim:TownDetail.name>\n";
				}
				if (location.getMainAddress().getTownDetail().getSection() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.section>";
					rdfXmlResource += location.getMainAddress().getTownDetail().getSection();
					rdfXmlResource += "</cim:TownDetail.section>\n";
				}
				if (location.getMainAddress().getTownDetail().getStateOrProvince() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.stateOrProvince>";
					rdfXmlResource += location.getMainAddress().getTownDetail().getStateOrProvince();
					rdfXmlResource += "</cim:TownDetail.stateOrProvince>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:TownDetail>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.townDetail>\n";
			}
			rdfXmlResource += "\t\t\t</cim:StreetAddress>\n";
			rdfXmlResource += "\t\t</cim:Location.mainAddress>\n";
		}
		if (location.getPhone1() != null){
			rdfXmlResource += "\t\t<cim:Location.phone1>\n";
			rdfXmlResource += "\t\t\t<cim:TelephoneNumber>\n";
			if (location.getPhone1().getAreaCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.areaCode>";
				rdfXmlResource += location.getPhone1().getAreaCode();
				rdfXmlResource += "</cim:TelephoneNumber.areaCode>\n";
			}
			if (location.getPhone1().getCityCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.cityCode>";
				rdfXmlResource += location.getPhone1().getCityCode();
				rdfXmlResource += "</cim:TelephoneNumber.cityCode>\n";
			}
			if (location.getPhone1().getCountryCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.countryCode>";
				rdfXmlResource += location.getPhone1().getCountryCode();
				rdfXmlResource += "</cim:TelephoneNumber.countryCode>\n";
			}
			if (location.getPhone1().getExtension() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.extension>";
				rdfXmlResource += location.getPhone1().getExtension();
				rdfXmlResource += "</cim:TelephoneNumber.extension>\n";
			}
			if (location.getPhone1().getLocalNumber() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.localNumber>";
				rdfXmlResource += location.getPhone1().getLocalNumber();
				rdfXmlResource += "</cim:TelephoneNumber.localNumber>\n";
			}
			rdfXmlResource += "\t\t\t</cim:TelephoneNumber>\n";
			rdfXmlResource += "\t\t</cim:Location.phone1>\n";
		}
		if (location.getPhone2() != null){
			rdfXmlResource += "\t\t<cim:Location.phone2>\n";
			rdfXmlResource += "\t\t\t<cim:TelephoneNumber>\n";
			if (location.getPhone2().getAreaCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.areaCode>";
				rdfXmlResource += location.getPhone2().getAreaCode();
				rdfXmlResource += "</cim:TelephoneNumber.areaCode>\n";
			}
			if (location.getPhone2().getCityCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.cityCode>";
				rdfXmlResource += location.getPhone2().getCityCode();
				rdfXmlResource += "</cim:TelephoneNumber.cityCode>\n";
			}
			if (location.getPhone2().getCountryCode() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.countryCode>";
				rdfXmlResource += location.getPhone2().getCountryCode();
				rdfXmlResource += "</cim:TelephoneNumber.countryCode>\n";
			}
			if (location.getPhone2().getExtension() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.extension>";
				rdfXmlResource += location.getPhone2().getExtension();
				rdfXmlResource += "</cim:TelephoneNumber.extension>\n";
			}
			if (location.getPhone2().getLocalNumber() != null){
				rdfXmlResource += "\t\t\t\t<cim:TelephoneNumber.localNumber>";
				rdfXmlResource += location.getPhone2().getLocalNumber();
				rdfXmlResource += "</cim:TelephoneNumber.localNumber>\n";
			}
			rdfXmlResource += "\t\t\t</cim:TelephoneNumber>\n";
			rdfXmlResource += "\t\t</cim:Location.phone2>\n";
		}
		if (location.getSecondaryAddress() != null){
			rdfXmlResource += "\t\t<cim:Location.secondaryAddress>\n";
			rdfXmlResource += "\t\t\t<cim:StreetAddress>\n";
			if (location.getSecondaryAddress().getStatus() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.status>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:Status>\n";
				if (location.getSecondaryAddress().getStatus().getDateTime() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.dateTime>";
					rdfXmlResource += location.getSecondaryAddress().getStatus().getDateTime().getYear() + "-" + location.getSecondaryAddress().getStatus().getDateTime().getMonth() + "-" + location.getSecondaryAddress().getStatus().getDateTime().getDate();
					rdfXmlResource += "</cim:Status.dateTime>\n";
				}
				if (location.getSecondaryAddress().getStatus().getReason() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.reason>";
					rdfXmlResource += location.getSecondaryAddress().getStatus().getReason();
					rdfXmlResource += "</cim:Status.reason>\n";
				}
				if (location.getSecondaryAddress().getStatus().getRemark() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.remark>";
					rdfXmlResource += location.getSecondaryAddress().getStatus().getRemark();
					rdfXmlResource += "</cim:Status.remark>\n";
				}
				if (location.getSecondaryAddress().getStatus().getValue() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:Status.value>";
					rdfXmlResource += location.getSecondaryAddress().getStatus().getValue();
					rdfXmlResource += "</cim:Status.value>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:Status>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.status>\n";
			}
			if (location.getSecondaryAddress().getStreetDetail() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.streetDetail>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:StreetDetail>\n";
				if (location.getSecondaryAddress().getStreetDetail().getAddressGeneral() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.addressGeneral>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getAddressGeneral();
					rdfXmlResource += "</cim:StreetDetail.addressGeneral>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getBuildingName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.buildingName>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getBuildingName();
					rdfXmlResource += "</cim:StreetDetail.buildingName>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getCode() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.code>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getCode();
					rdfXmlResource += "</cim:StreetDetail.code>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.name>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getName();
					rdfXmlResource += "</cim:StreetDetail.name>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getNumber() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.number>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getNumber();
					rdfXmlResource += "</cim:StreetDetail.number>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getPrefix() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.prefix>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getPrefix();
					rdfXmlResource += "</cim:StreetDetail.prefix>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getSuffix() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.suffix>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getSuffix();
					rdfXmlResource += "</cim:StreetDetail.suffix>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getSuiteNumber() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.suiteNumber>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getSuiteNumber();
					rdfXmlResource += "</cim:StreetDetail.suiteNumber>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getType() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.type>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getType();
					rdfXmlResource += "</cim:StreetDetail.type>\n";
				}
				if (location.getSecondaryAddress().getStreetDetail().getWithinTownLimits() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:StreetDetail.withinTownLimits>";
					rdfXmlResource += location.getSecondaryAddress().getStreetDetail().getWithinTownLimits().toString();
					rdfXmlResource += "</cim:StreetDetail.withinTownLimits>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:StreetDetail>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.streetDetail>\n";
			}
			if (location.getSecondaryAddress().getTownDetail() != null){
				rdfXmlResource += "\t\t\t\t<cim:StreetAddress.townDetail>\n";
				rdfXmlResource += "\t\t\t\t\t<cim:TownDetail>\n";
				if (location.getSecondaryAddress().getTownDetail().getCode() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.code>";
					rdfXmlResource += location.getSecondaryAddress().getTownDetail().getCode();
					rdfXmlResource += "</cim:TownDetail.code>\n";
				}
				if (location.getSecondaryAddress().getTownDetail().getCountry() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.country>";
					rdfXmlResource += location.getSecondaryAddress().getTownDetail().getCountry();
					rdfXmlResource += "</cim:TownDetail.country>\n";
				}
				if (location.getSecondaryAddress().getTownDetail().getName() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.name>";
					rdfXmlResource += location.getSecondaryAddress().getTownDetail().getName();
					rdfXmlResource += "</cim:TownDetail.name>\n";
				}
				if (location.getSecondaryAddress().getTownDetail().getSection() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.section>";
					rdfXmlResource += location.getSecondaryAddress().getTownDetail().getSection();
					rdfXmlResource += "</cim:TownDetail.section>\n";
				}
				if (location.getSecondaryAddress().getTownDetail().getStateOrProvince() != null){
					rdfXmlResource += "\t\t\t\t\t\t<cim:TownDetail.stateOrProvince>";
					rdfXmlResource += location.getSecondaryAddress().getTownDetail().getStateOrProvince();
					rdfXmlResource += "</cim:TownDetail.stateOrProvince>\n";
				}
				rdfXmlResource += "\t\t\t\t\t</cim:TownDetail>\n";
				rdfXmlResource += "\t\t\t\t</cim:StreetAddress.townDetail>\n";
			}
			rdfXmlResource += "\t\t\t</cim:StreetAddress>\n";
			rdfXmlResource += "\t\t</cim:Location.secondaryAddress>\n";
		}
		if (location.getStatus() != null){
			rdfXmlResource += "\t\t<cim:Location.status>\n";
			rdfXmlResource += "\t\t\t<cim:Status>\n";
			if (location.getStatus().getDateTime() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.dateTime>";
				rdfXmlResource += location.getStatus().getDateTime().getYear() + "-" + location.getStatus().getDateTime().getMonth() + "-" + location.getStatus().getDateTime().getDate();
				rdfXmlResource += "</cim:Status.dateTime>\n";
			}
			if (location.getStatus().getReason() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.reason>";
				rdfXmlResource += location.getStatus().getReason();
				rdfXmlResource += "</cim:Status.reason>\n";
			}
			if (location.getStatus().getRemark() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.remark>";
				rdfXmlResource += location.getStatus().getRemark();
				rdfXmlResource += "</cim:Status.remark>\n";
			}
			if (location.getStatus().getValue() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.value>";
				rdfXmlResource += location.getStatus().getValue();
				rdfXmlResource += "</cim:Status.value>\n";
			}
			rdfXmlResource += "\t\t\t</cim:Status>\n";
			rdfXmlResource += "\t\t</cim:Location.status>\n";
		}
		if (location.getType() != null){
			rdfXmlResource += "\t\t<cim:Location.type>";
			rdfXmlResource += location.getType();
			rdfXmlResource += "</cim:Location.type>\n";
		}
		if (location.getMRID() != null){
			rdfXmlResource += "\t</cim:Location>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Common.OrganisationRole organisationrole){
		String rdfXmlResource = "";
		if (organisationrole.getMRID() != null){
			rdfXmlResource = "\t<cim:OrganisationRole rdf:ID = \"_" + organisationrole.getMRID() + "\">\n";
		}
		if (organisationrole.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += organisationrole.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (organisationrole.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += organisationrole.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (organisationrole.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += organisationrole.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (organisationrole.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += organisationrole.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (organisationrole.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += organisationrole.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (organisationrole.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + organisationrole.getRpnCondition() + "\"/>\n";
		}
		if (organisationrole.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += organisationrole.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (organisationrole.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + organisationrole.getSchemeType() + "\"/>\n";
		}
		if (organisationrole.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + organisationrole.getSeasonType() + "\"/>\n";
		}
		if (organisationrole.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + organisationrole.getSubtaskNumber() + "\"/>\n";
		}
		if (organisationrole.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += organisationrole.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (organisationrole.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += organisationrole.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (organisationrole.getMRID() != null){
			rdfXmlResource += "\t</cim:OrganisationRole>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Customers.Customer customer){
		String rdfXmlResource = "";
		if (customer.getMRID() != null){
			rdfXmlResource = "\t<cim:Customer rdf:ID = \"_" + customer.getMRID() + "\">\n";
		}
		if (customer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += customer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (customer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += customer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (customer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += customer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (customer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += customer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (customer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += customer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (customer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + customer.getRpnCondition() + "\"/>\n";
		}
		if (customer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += customer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (customer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + customer.getSchemeType() + "\"/>\n";
		}
		if (customer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + customer.getSeasonType() + "\"/>\n";
		}
		if (customer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + customer.getSubtaskNumber() + "\"/>\n";
		}
		if (customer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += customer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (customer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += customer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (customer.getKind() != null){
			rdfXmlResource += "\t\t<cim:Customer.kind rdf:resource=\"" + this.baseURI + "#CustomerKind." + customer.getKind() + "\"/>\n";
		}
		if (customer.getLocale() != null){
			rdfXmlResource += "\t\t<cim:Customer.locale>";
			rdfXmlResource += customer.getLocale();
			rdfXmlResource += "</cim:Customer.locale>\n";
		}
		if (customer.getPriority() != null){
			rdfXmlResource += "\t\t<cim:Customer.priority>\n";
			rdfXmlResource += "\t\t\t<cim:Priority>\n";
			if (customer.getPriority().getJustification() != null){
				rdfXmlResource += "\t\t\t\t<cim:Priority.justification>";
				rdfXmlResource += customer.getPriority().getJustification();
				rdfXmlResource += "</cim:Priority.justification>\n";
			}
			if (customer.getPriority().getRank() != null){
				rdfXmlResource += "\t\t\t\t<cim:Priority.rank>";
				rdfXmlResource += customer.getPriority().getRank().toString();
				rdfXmlResource += "</cim:Priority.rank>\n";
			}
			if (customer.getPriority().getType() != null){
				rdfXmlResource += "\t\t\t\t<cim:Priority.type>";
				rdfXmlResource += customer.getPriority().getType();
				rdfXmlResource += "</cim:Priority.type>\n";
			}
			rdfXmlResource += "\t\t\t</cim:Priority>\n";
			rdfXmlResource += "\t\t</cim:Customer.priority>\n";
		}
		if (customer.getPucNumber() != null){
			rdfXmlResource += "\t\t<cim:Customer.pucNumber>";
			rdfXmlResource += customer.getPucNumber();
			rdfXmlResource += "</cim:Customer.pucNumber>\n";
		}
		if (customer.getSpecialNeed() != null){
			rdfXmlResource += "\t\t<cim:Customer.specialNeed>";
			rdfXmlResource += customer.getSpecialNeed();
			rdfXmlResource += "</cim:Customer.specialNeed>\n";
		}
		if (customer.getStatus() != null){
			rdfXmlResource += "\t\t<cim:Customer.status>\n";
			rdfXmlResource += "\t\t\t<cim:Status>\n";
			if (customer.getStatus().getDateTime() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.dateTime>";
				rdfXmlResource += customer.getStatus().getDateTime().getYear() + "-" + customer.getStatus().getDateTime().getMonth() + "-" + customer.getStatus().getDateTime().getDate();
				rdfXmlResource += "</cim:Status.dateTime>\n";
			}
			if (customer.getStatus().getReason() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.reason>";
				rdfXmlResource += customer.getStatus().getReason();
				rdfXmlResource += "</cim:Status.reason>\n";
			}
			if (customer.getStatus().getRemark() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.remark>";
				rdfXmlResource += customer.getStatus().getRemark();
				rdfXmlResource += "</cim:Status.remark>\n";
			}
			if (customer.getStatus().getValue() != null){
				rdfXmlResource += "\t\t\t\t<cim:Status.value>";
				rdfXmlResource += customer.getStatus().getValue();
				rdfXmlResource += "</cim:Status.value>\n";
			}
			rdfXmlResource += "\t\t\t</cim:Status>\n";
			rdfXmlResource += "\t\t</cim:Customer.status>\n";
		}
		if (customer.getMRID() != null){
			rdfXmlResource += "\t</cim:Customer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61968.Operations.Outage outage){
		String rdfXmlResource = "";
		if (outage.getMRID() != null){
			rdfXmlResource = "\t<cim:Outage rdf:ID = \"_" + outage.getMRID() + "\">\n";
		}
		if (outage.getMRID() != null){
			rdfXmlResource += "\t</cim:Outage>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.AuxiliaryEquipment auxiliaryequipment){
		String rdfXmlResource = "";
		if (auxiliaryequipment.getMRID() != null){
			rdfXmlResource = "\t<cim:AuxiliaryEquipment rdf:ID = \"_" + auxiliaryequipment.getMRID() + "\">\n";
		}
		if (auxiliaryequipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + auxiliaryequipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (auxiliaryequipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + auxiliaryequipment.getAssets().getMRID() + "\"/>\n";
		}
		if (auxiliaryequipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + auxiliaryequipment.getLocation().getMRID() + "\"/>\n";
		}
		if (auxiliaryequipment.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:AuxiliaryEquipment.Terminal rdf:resource=\"#_" + auxiliaryequipment.getTerminal().getMRID() + "\"/>\n";
		}
		if (auxiliaryequipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += auxiliaryequipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (auxiliaryequipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += auxiliaryequipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (auxiliaryequipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += auxiliaryequipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (auxiliaryequipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += auxiliaryequipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (auxiliaryequipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += auxiliaryequipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (auxiliaryequipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += auxiliaryequipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (auxiliaryequipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += auxiliaryequipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (auxiliaryequipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += auxiliaryequipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (auxiliaryequipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += auxiliaryequipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (auxiliaryequipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += auxiliaryequipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (auxiliaryequipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += auxiliaryequipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (auxiliaryequipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += auxiliaryequipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (auxiliaryequipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += auxiliaryequipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (auxiliaryequipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += auxiliaryequipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (auxiliaryequipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += auxiliaryequipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (auxiliaryequipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += auxiliaryequipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (auxiliaryequipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += auxiliaryequipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (auxiliaryequipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += auxiliaryequipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (auxiliaryequipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += auxiliaryequipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (auxiliaryequipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += auxiliaryequipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (auxiliaryequipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += auxiliaryequipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (auxiliaryequipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += auxiliaryequipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (auxiliaryequipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += auxiliaryequipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (auxiliaryequipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += auxiliaryequipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (auxiliaryequipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + auxiliaryequipment.getRpnCondition() + "\"/>\n";
		}
		if (auxiliaryequipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += auxiliaryequipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (auxiliaryequipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + auxiliaryequipment.getSchemeType() + "\"/>\n";
		}
		if (auxiliaryequipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + auxiliaryequipment.getSeasonType() + "\"/>\n";
		}
		if (auxiliaryequipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + auxiliaryequipment.getSubtaskNumber() + "\"/>\n";
		}
		if (auxiliaryequipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += auxiliaryequipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (auxiliaryequipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += auxiliaryequipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (auxiliaryequipment.getMRID() != null){
			rdfXmlResource += "\t</cim:AuxiliaryEquipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.CurrentTransformer currenttransformer){
		String rdfXmlResource = "";
		if (currenttransformer.getMRID() != null){
			rdfXmlResource = "\t<cim:CurrentTransformer rdf:ID = \"_" + currenttransformer.getMRID() + "\">\n";
		}
		if (currenttransformer.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:AuxiliaryEquipment.Terminal rdf:resource=\"#_" + currenttransformer.getTerminal().getMRID() + "\"/>\n";
		}
		if (currenttransformer.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + currenttransformer.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (currenttransformer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + currenttransformer.getAssets().getMRID() + "\"/>\n";
		}
		if (currenttransformer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + currenttransformer.getLocation().getMRID() + "\"/>\n";
		}
		if (currenttransformer.getProtectionEquipment() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.ProtectionEquipment rdf:resource=\"#_" + currenttransformer.getProtectionEquipment().getMRID() + "\"/>\n";
		}
		if (currenttransformer.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += currenttransformer.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (currenttransformer.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += currenttransformer.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (currenttransformer.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += currenttransformer.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (currenttransformer.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += currenttransformer.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (currenttransformer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += currenttransformer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (currenttransformer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += currenttransformer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (currenttransformer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += currenttransformer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (currenttransformer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += currenttransformer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (currenttransformer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += currenttransformer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (currenttransformer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += currenttransformer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (currenttransformer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += currenttransformer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (currenttransformer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += currenttransformer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (currenttransformer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += currenttransformer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (currenttransformer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += currenttransformer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (currenttransformer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += currenttransformer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (currenttransformer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += currenttransformer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (currenttransformer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += currenttransformer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (currenttransformer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += currenttransformer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (currenttransformer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += currenttransformer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (currenttransformer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += currenttransformer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (currenttransformer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += currenttransformer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (currenttransformer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += currenttransformer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (currenttransformer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += currenttransformer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (currenttransformer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += currenttransformer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (currenttransformer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + currenttransformer.getRpnCondition() + "\"/>\n";
		}
		if (currenttransformer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += currenttransformer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (currenttransformer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + currenttransformer.getSchemeType() + "\"/>\n";
		}
		if (currenttransformer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + currenttransformer.getSeasonType() + "\"/>\n";
		}
		if (currenttransformer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + currenttransformer.getSubtaskNumber() + "\"/>\n";
		}
		if (currenttransformer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += currenttransformer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (currenttransformer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += currenttransformer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (currenttransformer.getAccuracyClass() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.accuracyClass>";
			rdfXmlResource += currenttransformer.getAccuracyClass();
			rdfXmlResource += "</cim:CurrentTransformer.accuracyClass>\n";
		}
		if (currenttransformer.getAccuracyLimit() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.accuracyLimit>";
			rdfXmlResource += currenttransformer.getAccuracyLimit().getValue().toString();
			rdfXmlResource += "</cim:CurrentTransformer.accuracyLimit>\n";
		}
		if (currenttransformer.getCoreBurden() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.coreBurden>";
			rdfXmlResource += currenttransformer.getCoreBurden().getValue().toString();
			rdfXmlResource += "</cim:CurrentTransformer.coreBurden>\n";
		}
		if (currenttransformer.getCtClass() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.ctClass>";
			rdfXmlResource += currenttransformer.getCtClass();
			rdfXmlResource += "</cim:CurrentTransformer.ctClass>\n";
		}
		if (currenttransformer.getNominalRatio() != null){
			rdfXmlResource += "\t\t<nti:CurrentTransformer.nominalRatio>";
			rdfXmlResource += currenttransformer.getNominalRatio().toString();
			rdfXmlResource += "</nti:CurrentTransformer.nominalRatio>\n";
		}
		if (currenttransformer.getPrimaryRatedCurrent() != null){
			rdfXmlResource += "\t\t<nti:CurrentTransformer.primaryRatedCurrent>";
			rdfXmlResource += currenttransformer.getPrimaryRatedCurrent().getValue().toString();
			rdfXmlResource += "</nti:CurrentTransformer.primaryRatedCurrent>\n";
		}
		if (currenttransformer.getSecondaryRatedCurrent() != null){
			rdfXmlResource += "\t\t<nti:CurrentTransformer.secondaryRatedCurrent>";
			rdfXmlResource += currenttransformer.getSecondaryRatedCurrent().getValue().toString();
			rdfXmlResource += "</nti:CurrentTransformer.secondaryRatedCurrent>\n";
		}
		if (currenttransformer.getUsage() != null){
			rdfXmlResource += "\t\t<cim:CurrentTransformer.usage>";
			rdfXmlResource += currenttransformer.getUsage();
			rdfXmlResource += "</cim:CurrentTransformer.usage>\n";
		}
		if (currenttransformer.getWindingConnectionType() != null){
			rdfXmlResource += "\t\t<nti:CurrentTransformer.windingConnectionType rdf:resource=\"" + this.baseURI + "#WindingConnection." + currenttransformer.getWindingConnectionType() + "\"/>\n";
		}
		if (currenttransformer.getMRID() != null){
			rdfXmlResource += "\t</cim:CurrentTransformer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.PotentialTransformer potentialtransformer){
		String rdfXmlResource = "";
		if (potentialtransformer.getMRID() != null){
			rdfXmlResource = "\t<cim:PotentialTransformer rdf:ID = \"_" + potentialtransformer.getMRID() + "\">\n";
		}
		if (potentialtransformer.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:AuxiliaryEquipment.Terminal rdf:resource=\"#_" + potentialtransformer.getTerminal().getMRID() + "\"/>\n";
		}
		if (potentialtransformer.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + potentialtransformer.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (potentialtransformer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + potentialtransformer.getAssets().getMRID() + "\"/>\n";
		}
		if (potentialtransformer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + potentialtransformer.getLocation().getMRID() + "\"/>\n";
		}
		if (potentialtransformer.getProtectionEquipment() != null){
			rdfXmlResource += "\t\t<cim:PotentialTransformer.ProtectionEquipment rdf:resource=\"#_" + potentialtransformer.getProtectionEquipment().getMRID() + "\"/>\n";
		}
		if (potentialtransformer.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += potentialtransformer.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (potentialtransformer.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += potentialtransformer.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (potentialtransformer.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += potentialtransformer.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (potentialtransformer.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += potentialtransformer.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (potentialtransformer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += potentialtransformer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (potentialtransformer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += potentialtransformer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (potentialtransformer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += potentialtransformer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (potentialtransformer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += potentialtransformer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (potentialtransformer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += potentialtransformer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (potentialtransformer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += potentialtransformer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (potentialtransformer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += potentialtransformer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (potentialtransformer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += potentialtransformer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (potentialtransformer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += potentialtransformer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (potentialtransformer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += potentialtransformer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (potentialtransformer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += potentialtransformer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (potentialtransformer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += potentialtransformer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (potentialtransformer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += potentialtransformer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (potentialtransformer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += potentialtransformer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (potentialtransformer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += potentialtransformer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (potentialtransformer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += potentialtransformer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (potentialtransformer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += potentialtransformer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (potentialtransformer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += potentialtransformer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (potentialtransformer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += potentialtransformer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (potentialtransformer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += potentialtransformer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (potentialtransformer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + potentialtransformer.getRpnCondition() + "\"/>\n";
		}
		if (potentialtransformer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += potentialtransformer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (potentialtransformer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + potentialtransformer.getSchemeType() + "\"/>\n";
		}
		if (potentialtransformer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + potentialtransformer.getSeasonType() + "\"/>\n";
		}
		if (potentialtransformer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + potentialtransformer.getSubtaskNumber() + "\"/>\n";
		}
		if (potentialtransformer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += potentialtransformer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (potentialtransformer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += potentialtransformer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (potentialtransformer.getAccuracyClass() != null){
			rdfXmlResource += "\t\t<cim:PotentialTransformer.accuracyClass>";
			rdfXmlResource += potentialtransformer.getAccuracyClass();
			rdfXmlResource += "</cim:PotentialTransformer.accuracyClass>\n";
		}
		if (potentialtransformer.getNominalRatio() != null){
			rdfXmlResource += "\t\t<cim:PotentialTransformer.nominalRatio>";
			rdfXmlResource += potentialtransformer.getNominalRatio().toString();
			rdfXmlResource += "</cim:PotentialTransformer.nominalRatio>\n";
		}
		if (potentialtransformer.getPrimaryRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:PotentialTransformer.primaryRatedVoltage>";
			rdfXmlResource += potentialtransformer.getPrimaryRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:PotentialTransformer.primaryRatedVoltage>\n";
		}
		if (potentialtransformer.getPtClass() != null){
			rdfXmlResource += "\t\t<cim:PotentialTransformer.ptClass>";
			rdfXmlResource += potentialtransformer.getPtClass();
			rdfXmlResource += "</cim:PotentialTransformer.ptClass>\n";
		}
		if (potentialtransformer.getSecondaryRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:PotentialTransformer.secondaryRatedVoltage>";
			rdfXmlResource += potentialtransformer.getSecondaryRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:PotentialTransformer.secondaryRatedVoltage>\n";
		}
		if (potentialtransformer.getType() != null){
			rdfXmlResource += "\t\t<cim:PotentialTransformer.type rdf:resource=\"" + this.baseURI + "#PotentialTransformerKind." + potentialtransformer.getType() + "\"/>\n";
		}
		if (potentialtransformer.getWindingConnectionType() != null){
			rdfXmlResource += "\t\t<nti:PotentialTransformer.windingConnectionType rdf:resource=\"" + this.baseURI + "#WindingConnection." + potentialtransformer.getWindingConnectionType() + "\"/>\n";
		}
		if (potentialtransformer.getMRID() != null){
			rdfXmlResource += "\t</cim:PotentialTransformer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.Sensor sensor){
		String rdfXmlResource = "";
		if (sensor.getMRID() != null){
			rdfXmlResource = "\t<cim:Sensor rdf:ID = \"_" + sensor.getMRID() + "\">\n";
		}
		if (sensor.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:AuxiliaryEquipment.Terminal rdf:resource=\"#_" + sensor.getTerminal().getMRID() + "\"/>\n";
		}
		if (sensor.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + sensor.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (sensor.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + sensor.getAssets().getMRID() + "\"/>\n";
		}
		if (sensor.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + sensor.getLocation().getMRID() + "\"/>\n";
		}
		if (sensor.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += sensor.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (sensor.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += sensor.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (sensor.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += sensor.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (sensor.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += sensor.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (sensor.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += sensor.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (sensor.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += sensor.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (sensor.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += sensor.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (sensor.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += sensor.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (sensor.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += sensor.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (sensor.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += sensor.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (sensor.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += sensor.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (sensor.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += sensor.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (sensor.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += sensor.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (sensor.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += sensor.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (sensor.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += sensor.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (sensor.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += sensor.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (sensor.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += sensor.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (sensor.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += sensor.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (sensor.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += sensor.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (sensor.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += sensor.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (sensor.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += sensor.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (sensor.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += sensor.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (sensor.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += sensor.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (sensor.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += sensor.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (sensor.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + sensor.getRpnCondition() + "\"/>\n";
		}
		if (sensor.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += sensor.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (sensor.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + sensor.getSchemeType() + "\"/>\n";
		}
		if (sensor.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + sensor.getSeasonType() + "\"/>\n";
		}
		if (sensor.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + sensor.getSubtaskNumber() + "\"/>\n";
		}
		if (sensor.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += sensor.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (sensor.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += sensor.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (sensor.getMRID() != null){
			rdfXmlResource += "\t</cim:Sensor>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment.SurgeArrester surgearrester){
		String rdfXmlResource = "";
		if (surgearrester.getMRID() != null){
			rdfXmlResource = "\t<cim:SurgeArrester rdf:ID = \"_" + surgearrester.getMRID() + "\">\n";
		}
		if (surgearrester.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:AuxiliaryEquipment.Terminal rdf:resource=\"#_" + surgearrester.getTerminal().getMRID() + "\"/>\n";
		}
		if (surgearrester.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + surgearrester.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (surgearrester.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + surgearrester.getAssets().getMRID() + "\"/>\n";
		}
		if (surgearrester.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + surgearrester.getLocation().getMRID() + "\"/>\n";
		}
		if (surgearrester.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += surgearrester.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (surgearrester.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += surgearrester.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (surgearrester.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += surgearrester.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (surgearrester.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += surgearrester.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (surgearrester.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += surgearrester.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (surgearrester.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += surgearrester.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (surgearrester.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += surgearrester.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (surgearrester.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += surgearrester.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (surgearrester.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += surgearrester.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (surgearrester.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += surgearrester.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (surgearrester.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += surgearrester.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (surgearrester.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += surgearrester.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (surgearrester.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += surgearrester.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (surgearrester.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += surgearrester.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (surgearrester.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += surgearrester.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (surgearrester.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += surgearrester.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (surgearrester.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += surgearrester.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (surgearrester.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += surgearrester.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (surgearrester.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += surgearrester.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (surgearrester.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += surgearrester.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (surgearrester.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += surgearrester.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (surgearrester.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += surgearrester.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (surgearrester.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += surgearrester.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (surgearrester.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += surgearrester.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (surgearrester.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + surgearrester.getRpnCondition() + "\"/>\n";
		}
		if (surgearrester.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += surgearrester.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (surgearrester.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + surgearrester.getSchemeType() + "\"/>\n";
		}
		if (surgearrester.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + surgearrester.getSeasonType() + "\"/>\n";
		}
		if (surgearrester.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + surgearrester.getSubtaskNumber() + "\"/>\n";
		}
		if (surgearrester.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += surgearrester.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (surgearrester.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += surgearrester.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (surgearrester.getMRID() != null){
			rdfXmlResource += "\t</cim:SurgeArrester>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ACDCTerminal acdcterminal){
		String rdfXmlResource = "";
		if (acdcterminal.getMRID() != null){
			rdfXmlResource = "\t<cim:ACDCTerminal rdf:ID = \"_" + acdcterminal.getMRID() + "\">\n";
		}
		if (acdcterminal.getBusNameMarker() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.BusNameMarker rdf:resource=\"#_" + acdcterminal.getBusNameMarker().getMRID() + "\"/>\n";
		}
		if (acdcterminal.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += acdcterminal.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (acdcterminal.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += acdcterminal.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (acdcterminal.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += acdcterminal.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (acdcterminal.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += acdcterminal.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (acdcterminal.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += acdcterminal.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (acdcterminal.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + acdcterminal.getRpnCondition() + "\"/>\n";
		}
		if (acdcterminal.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += acdcterminal.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (acdcterminal.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + acdcterminal.getSchemeType() + "\"/>\n";
		}
		if (acdcterminal.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + acdcterminal.getSeasonType() + "\"/>\n";
		}
		if (acdcterminal.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + acdcterminal.getSubtaskNumber() + "\"/>\n";
		}
		if (acdcterminal.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += acdcterminal.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (acdcterminal.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += acdcterminal.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (acdcterminal.getConnected() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.connected>";
			rdfXmlResource += acdcterminal.getConnected().toString();
			rdfXmlResource += "</cim:ACDCTerminal.connected>\n";
		}
		if (acdcterminal.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.sequenceNumber>";
			rdfXmlResource += acdcterminal.getSequenceNumber().toString();
			rdfXmlResource += "</cim:ACDCTerminal.sequenceNumber>\n";
		}
		if (acdcterminal.getMRID() != null){
			rdfXmlResource += "\t</cim:ACDCTerminal>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.BaseVoltage basevoltage){
		String rdfXmlResource = "";
		if (basevoltage.getMRID() != null){
			rdfXmlResource = "\t<cim:BaseVoltage rdf:ID = \"_" + basevoltage.getMRID() + "\">\n";
		}
		if (basevoltage.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += basevoltage.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (basevoltage.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += basevoltage.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (basevoltage.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += basevoltage.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (basevoltage.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += basevoltage.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (basevoltage.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += basevoltage.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (basevoltage.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + basevoltage.getRpnCondition() + "\"/>\n";
		}
		if (basevoltage.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += basevoltage.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (basevoltage.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + basevoltage.getSchemeType() + "\"/>\n";
		}
		if (basevoltage.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + basevoltage.getSeasonType() + "\"/>\n";
		}
		if (basevoltage.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + basevoltage.getSubtaskNumber() + "\"/>\n";
		}
		if (basevoltage.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += basevoltage.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (basevoltage.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += basevoltage.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (basevoltage.getNominalVoltage() != null){
			rdfXmlResource += "\t\t<cim:BaseVoltage.nominalVoltage>";
			rdfXmlResource += basevoltage.getNominalVoltage().getValue().toString();
			rdfXmlResource += "</cim:BaseVoltage.nominalVoltage>\n";
		}
		if (basevoltage.getMRID() != null){
			rdfXmlResource += "\t</cim:BaseVoltage>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Bay bay){
		String rdfXmlResource = "";
		if (bay.getMRID() != null){
			rdfXmlResource = "\t<cim:Bay rdf:ID = \"_" + bay.getMRID() + "\">\n";
		}
		if (bay.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + bay.getAssets().getMRID() + "\"/>\n";
		}
		if (bay.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + bay.getLocation().getMRID() + "\"/>\n";
		}
		if (bay.getSubstation() != null){
			rdfXmlResource += "\t\t<cim:Bay.Substation rdf:resource=\"#_" + bay.getSubstation().getMRID() + "\"/>\n";
		}
		if (bay.getVoltageLevel() != null){
			rdfXmlResource += "\t\t<cim:Bay.VoltageLevel rdf:resource=\"#_" + bay.getVoltageLevel().getMRID() + "\"/>\n";
		}
		if (bay.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += bay.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (bay.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += bay.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (bay.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += bay.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (bay.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += bay.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (bay.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += bay.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (bay.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += bay.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (bay.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += bay.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (bay.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += bay.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (bay.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += bay.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (bay.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += bay.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (bay.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += bay.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (bay.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += bay.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (bay.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += bay.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (bay.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += bay.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (bay.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += bay.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (bay.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += bay.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (bay.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += bay.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (bay.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += bay.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (bay.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += bay.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (bay.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += bay.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (bay.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + bay.getRpnCondition() + "\"/>\n";
		}
		if (bay.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += bay.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (bay.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + bay.getSchemeType() + "\"/>\n";
		}
		if (bay.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + bay.getSeasonType() + "\"/>\n";
		}
		if (bay.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + bay.getSubtaskNumber() + "\"/>\n";
		}
		if (bay.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += bay.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (bay.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += bay.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (bay.getBayEnergyMeasFlag() != null){
			rdfXmlResource += "\t\t<cim:Bay.bayEnergyMeasFlag>";
			rdfXmlResource += bay.getBayEnergyMeasFlag().toString();
			rdfXmlResource += "</cim:Bay.bayEnergyMeasFlag>\n";
		}
		if (bay.getBayPowerMeasFlag() != null){
			rdfXmlResource += "\t\t<cim:Bay.bayPowerMeasFlag>";
			rdfXmlResource += bay.getBayPowerMeasFlag().toString();
			rdfXmlResource += "</cim:Bay.bayPowerMeasFlag>\n";
		}
		if (bay.getBreakerConfiguration() != null){
			rdfXmlResource += "\t\t<cim:Bay.breakerConfiguration rdf:resource=\"" + this.baseURI + "#BreakerConfiguration." + bay.getBreakerConfiguration() + "\"/>\n";
		}
		if (bay.getBusBarConfiguration() != null){
			rdfXmlResource += "\t\t<cim:Bay.busBarConfiguration rdf:resource=\"" + this.baseURI + "#BusbarConfiguration." + bay.getBusBarConfiguration() + "\"/>\n";
		}
		if (bay.getMRID() != null){
			rdfXmlResource += "\t</cim:Bay>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConductingEquipment conductingequipment){
		String rdfXmlResource = "";
		if (conductingequipment.getMRID() != null){
			rdfXmlResource = "\t<cim:ConductingEquipment rdf:ID = \"_" + conductingequipment.getMRID() + "\">\n";
		}
		if (conductingequipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + conductingequipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + conductingequipment.getAssets().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + conductingequipment.getLocation().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + conductingequipment.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + conductingequipment.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + conductingequipment.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + conductingequipment.getSvStatus().getMRID() + "\"/>\n";
		}
		if (conductingequipment.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: conductingequipment.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (conductingequipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += conductingequipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (conductingequipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += conductingequipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (conductingequipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += conductingequipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (conductingequipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += conductingequipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (conductingequipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += conductingequipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (conductingequipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += conductingequipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (conductingequipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += conductingequipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (conductingequipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += conductingequipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (conductingequipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += conductingequipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (conductingequipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += conductingequipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (conductingequipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += conductingequipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (conductingequipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += conductingequipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (conductingequipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += conductingequipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (conductingequipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += conductingequipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (conductingequipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += conductingequipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (conductingequipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += conductingequipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (conductingequipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += conductingequipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (conductingequipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += conductingequipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (conductingequipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += conductingequipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (conductingequipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += conductingequipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (conductingequipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += conductingequipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (conductingequipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += conductingequipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (conductingequipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += conductingequipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (conductingequipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += conductingequipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (conductingequipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + conductingequipment.getRpnCondition() + "\"/>\n";
		}
		if (conductingequipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += conductingequipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (conductingequipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + conductingequipment.getSchemeType() + "\"/>\n";
		}
		if (conductingequipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + conductingequipment.getSeasonType() + "\"/>\n";
		}
		if (conductingequipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + conductingequipment.getSubtaskNumber() + "\"/>\n";
		}
		if (conductingequipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += conductingequipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (conductingequipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += conductingequipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (conductingequipment.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += conductingequipment.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (conductingequipment.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += conductingequipment.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (conductingequipment.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += conductingequipment.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (conductingequipment.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += conductingequipment.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (conductingequipment.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += conductingequipment.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (conductingequipment.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += conductingequipment.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (conductingequipment.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += conductingequipment.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (conductingequipment.getMRID() != null){
			rdfXmlResource += "\t</cim:ConductingEquipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConnectivityNode connectivitynode){
		String rdfXmlResource = "";
		if (connectivitynode.getMRID() != null){
			rdfXmlResource = "\t<cim:ConnectivityNode rdf:ID = \"_" + connectivitynode.getMRID() + "\">\n";
		}
		if (connectivitynode.getTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:ConnectivityNode.TopologicalNode rdf:resource=\"#_" + connectivitynode.getTopologicalNode().getMRID() + "\"/>\n";
		}
		if (connectivitynode.getConnectivityNodeContainer() != null){
			rdfXmlResource += "\t\t<cim:ConnectivityNode.ConnectivityNodeContainer rdf:resource=\"#_" + connectivitynode.getConnectivityNodeContainer().getMRID() + "\"/>\n";
		}
		if (connectivitynode.getCalculatedSvVoltages() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject SvVoltage: connectivitynode.getCalculatedSvVoltages()){
				rdfXmlResource += "\t\t<cim:ConnectivityNode.CalculatedSvVoltages rdf:resource=\"#_" + SvVoltage.getMRID() + "\"/>\n";
			}
		}
		if (connectivitynode.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += connectivitynode.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (connectivitynode.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += connectivitynode.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (connectivitynode.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += connectivitynode.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (connectivitynode.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += connectivitynode.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (connectivitynode.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += connectivitynode.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (connectivitynode.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + connectivitynode.getRpnCondition() + "\"/>\n";
		}
		if (connectivitynode.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += connectivitynode.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (connectivitynode.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + connectivitynode.getSchemeType() + "\"/>\n";
		}
		if (connectivitynode.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + connectivitynode.getSeasonType() + "\"/>\n";
		}
		if (connectivitynode.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + connectivitynode.getSubtaskNumber() + "\"/>\n";
		}
		if (connectivitynode.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += connectivitynode.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (connectivitynode.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += connectivitynode.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (connectivitynode.getDeltaNomVoltage() != null){
			rdfXmlResource += "\t\t<nti:ConnectivityNode.deltaNomVoltage>";
			rdfXmlResource += connectivitynode.getDeltaNomVoltage().getValue().toString();
			rdfXmlResource += "</nti:ConnectivityNode.deltaNomVoltage>\n";
		}
		if (connectivitynode.getInitialVoltage() != null){
			rdfXmlResource += "\t\t<nti:ConnectivityNode.initialVoltage>";
			rdfXmlResource += connectivitynode.getInitialVoltage().getValue().toString();
			rdfXmlResource += "</nti:ConnectivityNode.initialVoltage>\n";
		}
		if (connectivitynode.getIsLowVoltage() != null){
			rdfXmlResource += "\t\t<nti:ConnectivityNode.isLowVoltage>";
			rdfXmlResource += connectivitynode.getIsLowVoltage().toString();
			rdfXmlResource += "</nti:ConnectivityNode.isLowVoltage>\n";
		}
		if (connectivitynode.getNodeType() != null){
			rdfXmlResource += "\t\t<nti:ConnectivityNode.nodeType rdf:resource=\"" + this.baseURI + "#NodeTypes." + connectivitynode.getNodeType() + "\"/>\n";
		}
		if (connectivitynode.getRastrV() != null){
			rdfXmlResource += "\t\t<nti:ConnectivityNode.rastrV>";
			rdfXmlResource += connectivitynode.getRastrV().toString();
			rdfXmlResource += "</nti:ConnectivityNode.rastrV>\n";
		}
		if (connectivitynode.getMRID() != null){
			rdfXmlResource += "\t</cim:ConnectivityNode>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConnectivityNodeContainer connectivitynodecontainer){
		String rdfXmlResource = "";
		if (connectivitynodecontainer.getMRID() != null){
			rdfXmlResource = "\t<cim:ConnectivityNodeContainer rdf:ID = \"_" + connectivitynodecontainer.getMRID() + "\">\n";
		}
		if (connectivitynodecontainer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + connectivitynodecontainer.getAssets().getMRID() + "\"/>\n";
		}
		if (connectivitynodecontainer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + connectivitynodecontainer.getLocation().getMRID() + "\"/>\n";
		}
		if (connectivitynodecontainer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += connectivitynodecontainer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (connectivitynodecontainer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += connectivitynodecontainer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (connectivitynodecontainer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += connectivitynodecontainer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (connectivitynodecontainer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += connectivitynodecontainer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (connectivitynodecontainer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += connectivitynodecontainer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (connectivitynodecontainer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += connectivitynodecontainer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (connectivitynodecontainer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += connectivitynodecontainer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (connectivitynodecontainer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += connectivitynodecontainer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (connectivitynodecontainer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += connectivitynodecontainer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (connectivitynodecontainer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += connectivitynodecontainer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (connectivitynodecontainer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += connectivitynodecontainer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (connectivitynodecontainer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += connectivitynodecontainer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (connectivitynodecontainer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += connectivitynodecontainer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (connectivitynodecontainer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += connectivitynodecontainer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (connectivitynodecontainer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += connectivitynodecontainer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (connectivitynodecontainer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += connectivitynodecontainer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (connectivitynodecontainer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += connectivitynodecontainer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (connectivitynodecontainer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += connectivitynodecontainer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (connectivitynodecontainer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += connectivitynodecontainer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (connectivitynodecontainer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += connectivitynodecontainer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (connectivitynodecontainer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + connectivitynodecontainer.getRpnCondition() + "\"/>\n";
		}
		if (connectivitynodecontainer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += connectivitynodecontainer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (connectivitynodecontainer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + connectivitynodecontainer.getSchemeType() + "\"/>\n";
		}
		if (connectivitynodecontainer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + connectivitynodecontainer.getSeasonType() + "\"/>\n";
		}
		if (connectivitynodecontainer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + connectivitynodecontainer.getSubtaskNumber() + "\"/>\n";
		}
		if (connectivitynodecontainer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += connectivitynodecontainer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (connectivitynodecontainer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += connectivitynodecontainer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (connectivitynodecontainer.getMRID() != null){
			rdfXmlResource += "\t</cim:ConnectivityNodeContainer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Curve curve){
		String rdfXmlResource = "";
		if (curve.getMRID() != null){
			rdfXmlResource = "\t<cim:Curve rdf:ID = \"_" + curve.getMRID() + "\">\n";
		}
		if (curve.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += curve.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (curve.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += curve.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (curve.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += curve.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (curve.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += curve.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (curve.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += curve.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (curve.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + curve.getRpnCondition() + "\"/>\n";
		}
		if (curve.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += curve.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (curve.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + curve.getSchemeType() + "\"/>\n";
		}
		if (curve.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + curve.getSeasonType() + "\"/>\n";
		}
		if (curve.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + curve.getSubtaskNumber() + "\"/>\n";
		}
		if (curve.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += curve.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (curve.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += curve.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (curve.getCurveStyle() != null){
			rdfXmlResource += "\t\t<cim:Curve.curveStyle rdf:resource=\"" + this.baseURI + "#CurveStyle." + curve.getCurveStyle() + "\"/>\n";
		}
		if (curve.getXMultiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.xMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + curve.getXMultiplier() + "\"/>\n";
		}
		if (curve.getXUnit() != null){
			rdfXmlResource += "\t\t<cim:Curve.xUnit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + curve.getXUnit() + "\"/>\n";
		}
		if (curve.getY1Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + curve.getY1Multiplier() + "\"/>\n";
		}
		if (curve.getY1Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + curve.getY1Unit() + "\"/>\n";
		}
		if (curve.getY2Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + curve.getY2Multiplier() + "\"/>\n";
		}
		if (curve.getY2Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + curve.getY2Unit() + "\"/>\n";
		}
		if (curve.getY3Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + curve.getY3Multiplier() + "\"/>\n";
		}
		if (curve.getY3Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + curve.getY3Unit() + "\"/>\n";
		}
		if (curve.getMRID() != null){
			rdfXmlResource += "\t</cim:Curve>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.CurveData curvedata){
		String rdfXmlResource = "";
		if (curvedata.getMRID() != null){
			rdfXmlResource = "\t<cim:CurveData rdf:ID = \"_" + curvedata.getMRID() + "\">\n";
		}
		if (curvedata.getCurve() != null){
			rdfXmlResource += "\t\t<cim:CurveData.Curve rdf:resource=\"#_" + curvedata.getCurve().getMRID() + "\"/>\n";
		}
		if (curvedata.getXvalue() != null){
			rdfXmlResource += "\t\t<cim:CurveData.xvalue>";
			rdfXmlResource += curvedata.getXvalue().toString();
			rdfXmlResource += "</cim:CurveData.xvalue>\n";
		}
		if (curvedata.getY1value() != null){
			rdfXmlResource += "\t\t<cim:CurveData.y1value>";
			rdfXmlResource += curvedata.getY1value().toString();
			rdfXmlResource += "</cim:CurveData.y1value>\n";
		}
		if (curvedata.getY2value() != null){
			rdfXmlResource += "\t\t<cim:CurveData.y2value>";
			rdfXmlResource += curvedata.getY2value().toString();
			rdfXmlResource += "</cim:CurveData.y2value>\n";
		}
		if (curvedata.getY3value() != null){
			rdfXmlResource += "\t\t<cim:CurveData.y3value>";
			rdfXmlResource += curvedata.getY3value().toString();
			rdfXmlResource += "</cim:CurveData.y3value>\n";
		}
		if (curvedata.getMRID() != null){
			rdfXmlResource += "\t</cim:CurveData>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Equipment equipment){
		String rdfXmlResource = "";
		if (equipment.getMRID() != null){
			rdfXmlResource = "\t<cim:Equipment rdf:ID = \"_" + equipment.getMRID() + "\">\n";
		}
		if (equipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equipment.getAssets().getMRID() + "\"/>\n";
		}
		if (equipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equipment.getLocation().getMRID() + "\"/>\n";
		}
		if (equipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + equipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (equipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equipment.getRpnCondition() + "\"/>\n";
		}
		if (equipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equipment.getSchemeType() + "\"/>\n";
		}
		if (equipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equipment.getSeasonType() + "\"/>\n";
		}
		if (equipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equipment.getSubtaskNumber() + "\"/>\n";
		}
		if (equipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += equipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (equipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += equipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (equipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += equipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (equipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += equipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (equipment.getMRID() != null){
			rdfXmlResource += "\t</cim:Equipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.EquipmentContainer equipmentcontainer){
		String rdfXmlResource = "";
		if (equipmentcontainer.getMRID() != null){
			rdfXmlResource = "\t<cim:EquipmentContainer rdf:ID = \"_" + equipmentcontainer.getMRID() + "\">\n";
		}
		if (equipmentcontainer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equipmentcontainer.getAssets().getMRID() + "\"/>\n";
		}
		if (equipmentcontainer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equipmentcontainer.getLocation().getMRID() + "\"/>\n";
		}
		if (equipmentcontainer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equipmentcontainer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equipmentcontainer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equipmentcontainer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equipmentcontainer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equipmentcontainer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equipmentcontainer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equipmentcontainer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equipmentcontainer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equipmentcontainer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equipmentcontainer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equipmentcontainer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equipmentcontainer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equipmentcontainer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equipmentcontainer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equipmentcontainer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equipmentcontainer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equipmentcontainer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equipmentcontainer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equipmentcontainer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equipmentcontainer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equipmentcontainer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equipmentcontainer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equipmentcontainer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equipmentcontainer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equipmentcontainer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equipmentcontainer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equipmentcontainer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equipmentcontainer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equipmentcontainer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equipmentcontainer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equipmentcontainer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equipmentcontainer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equipmentcontainer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equipmentcontainer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equipmentcontainer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equipmentcontainer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equipmentcontainer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equipmentcontainer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equipmentcontainer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equipmentcontainer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equipmentcontainer.getRpnCondition() + "\"/>\n";
		}
		if (equipmentcontainer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equipmentcontainer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equipmentcontainer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equipmentcontainer.getSchemeType() + "\"/>\n";
		}
		if (equipmentcontainer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equipmentcontainer.getSeasonType() + "\"/>\n";
		}
		if (equipmentcontainer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equipmentcontainer.getSubtaskNumber() + "\"/>\n";
		}
		if (equipmentcontainer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equipmentcontainer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equipmentcontainer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equipmentcontainer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equipmentcontainer.getMRID() != null){
			rdfXmlResource += "\t</cim:EquipmentContainer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.GeographicalRegion geographicalregion){
		String rdfXmlResource = "";
		if (geographicalregion.getMRID() != null){
			rdfXmlResource = "\t<cim:GeographicalRegion rdf:ID = \"_" + geographicalregion.getMRID() + "\">\n";
		}
		if (geographicalregion.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += geographicalregion.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (geographicalregion.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += geographicalregion.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (geographicalregion.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += geographicalregion.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (geographicalregion.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += geographicalregion.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (geographicalregion.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += geographicalregion.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (geographicalregion.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + geographicalregion.getRpnCondition() + "\"/>\n";
		}
		if (geographicalregion.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += geographicalregion.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (geographicalregion.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + geographicalregion.getSchemeType() + "\"/>\n";
		}
		if (geographicalregion.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + geographicalregion.getSeasonType() + "\"/>\n";
		}
		if (geographicalregion.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + geographicalregion.getSubtaskNumber() + "\"/>\n";
		}
		if (geographicalregion.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += geographicalregion.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (geographicalregion.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += geographicalregion.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (geographicalregion.getMRID() != null){
			rdfXmlResource += "\t</cim:GeographicalRegion>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject identifiedobject){
		String rdfXmlResource = "";
		if (identifiedobject.getMRID() != null){
			rdfXmlResource = "\t<cim:IdentifiedObject rdf:ID = \"_" + identifiedobject.getMRID() + "\">\n";
		}
		if (identifiedobject.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += identifiedobject.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (identifiedobject.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += identifiedobject.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (identifiedobject.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += identifiedobject.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (identifiedobject.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += identifiedobject.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (identifiedobject.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += identifiedobject.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (identifiedobject.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + identifiedobject.getRpnCondition() + "\"/>\n";
		}
		if (identifiedobject.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += identifiedobject.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (identifiedobject.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + identifiedobject.getSchemeType() + "\"/>\n";
		}
		if (identifiedobject.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + identifiedobject.getSeasonType() + "\"/>\n";
		}
		if (identifiedobject.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + identifiedobject.getSubtaskNumber() + "\"/>\n";
		}
		if (identifiedobject.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += identifiedobject.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (identifiedobject.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += identifiedobject.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (identifiedobject.getMRID() != null){
			rdfXmlResource += "\t</cim:IdentifiedObject>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Name name){
		String rdfXmlResource = "";
		if (name.getMRID() != null){
			rdfXmlResource = "\t<cim:Name rdf:ID = \"_" + name.getMRID() + "\">\n";
		}
		if (name.getIdentifiedObject() != null){
			rdfXmlResource += "\t\t<cim:Name.IdentifiedObject rdf:resource=\"#_" + name.getIdentifiedObject().getMRID() + "\"/>\n";
		}
		if (name.getNameType() != null){
			rdfXmlResource += "\t\t<cim:Name.NameType rdf:resource=\"#_" + name.getNameType().getMRID() + "\"/>\n";
		}
		if (name.getName() != null){
			rdfXmlResource += "\t\t<cim:Name.name>";
			rdfXmlResource += name.getName();
			rdfXmlResource += "</cim:Name.name>\n";
		}
		if (name.getMRID() != null){
			rdfXmlResource += "\t</cim:Name>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.NameType nametype){
		String rdfXmlResource = "";
		if (nametype.getMRID() != null){
			rdfXmlResource = "\t<cim:NameType rdf:ID = \"_" + nametype.getMRID() + "\">\n";
		}
		if (nametype.getDescription() != null){
			rdfXmlResource += "\t\t<cim:NameType.description>";
			rdfXmlResource += nametype.getDescription();
			rdfXmlResource += "</cim:NameType.description>\n";
		}
		if (nametype.getName() != null){
			rdfXmlResource += "\t\t<cim:NameType.name>";
			rdfXmlResource += nametype.getName();
			rdfXmlResource += "</cim:NameType.name>\n";
		}
		if (nametype.getMRID() != null){
			rdfXmlResource += "\t</cim:NameType>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.PowerSystemResource powersystemresource){
		String rdfXmlResource = "";
		if (powersystemresource.getMRID() != null){
			rdfXmlResource = "\t<cim:PowerSystemResource rdf:ID = \"_" + powersystemresource.getMRID() + "\">\n";
		}
		if (powersystemresource.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + powersystemresource.getAssets().getMRID() + "\"/>\n";
		}
		if (powersystemresource.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + powersystemresource.getLocation().getMRID() + "\"/>\n";
		}
		if (powersystemresource.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += powersystemresource.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (powersystemresource.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += powersystemresource.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (powersystemresource.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += powersystemresource.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (powersystemresource.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += powersystemresource.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (powersystemresource.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += powersystemresource.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (powersystemresource.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + powersystemresource.getRpnCondition() + "\"/>\n";
		}
		if (powersystemresource.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += powersystemresource.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (powersystemresource.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + powersystemresource.getSchemeType() + "\"/>\n";
		}
		if (powersystemresource.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + powersystemresource.getSeasonType() + "\"/>\n";
		}
		if (powersystemresource.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + powersystemresource.getSubtaskNumber() + "\"/>\n";
		}
		if (powersystemresource.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += powersystemresource.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (powersystemresource.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += powersystemresource.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (powersystemresource.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += powersystemresource.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (powersystemresource.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += powersystemresource.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (powersystemresource.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += powersystemresource.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (powersystemresource.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += powersystemresource.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (powersystemresource.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += powersystemresource.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (powersystemresource.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += powersystemresource.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (powersystemresource.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += powersystemresource.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (powersystemresource.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += powersystemresource.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (powersystemresource.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += powersystemresource.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (powersystemresource.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += powersystemresource.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (powersystemresource.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += powersystemresource.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (powersystemresource.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += powersystemresource.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (powersystemresource.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += powersystemresource.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (powersystemresource.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += powersystemresource.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (powersystemresource.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += powersystemresource.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (powersystemresource.getMRID() != null){
			rdfXmlResource += "\t</cim:PowerSystemResource>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ReportingGroup reportinggroup){
		String rdfXmlResource = "";
		if (reportinggroup.getMRID() != null){
			rdfXmlResource = "\t<cim:ReportingGroup rdf:ID = \"_" + reportinggroup.getMRID() + "\">\n";
		}
		if (reportinggroup.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += reportinggroup.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (reportinggroup.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += reportinggroup.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (reportinggroup.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += reportinggroup.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (reportinggroup.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += reportinggroup.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (reportinggroup.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += reportinggroup.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (reportinggroup.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + reportinggroup.getRpnCondition() + "\"/>\n";
		}
		if (reportinggroup.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += reportinggroup.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (reportinggroup.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + reportinggroup.getSchemeType() + "\"/>\n";
		}
		if (reportinggroup.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + reportinggroup.getSeasonType() + "\"/>\n";
		}
		if (reportinggroup.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + reportinggroup.getSubtaskNumber() + "\"/>\n";
		}
		if (reportinggroup.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += reportinggroup.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (reportinggroup.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += reportinggroup.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (reportinggroup.getMRID() != null){
			rdfXmlResource += "\t</cim:ReportingGroup>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.SubGeographicalRegion subgeographicalregion){
		String rdfXmlResource = "";
		if (subgeographicalregion.getMRID() != null){
			rdfXmlResource = "\t<cim:SubGeographicalRegion rdf:ID = \"_" + subgeographicalregion.getMRID() + "\">\n";
		}
		if (subgeographicalregion.getRegion() != null){
			rdfXmlResource += "\t\t<cim:SubGeographicalRegion.Region rdf:resource=\"#_" + subgeographicalregion.getRegion().getMRID() + "\"/>\n";
		}
		if (subgeographicalregion.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += subgeographicalregion.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (subgeographicalregion.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += subgeographicalregion.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (subgeographicalregion.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += subgeographicalregion.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (subgeographicalregion.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += subgeographicalregion.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (subgeographicalregion.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += subgeographicalregion.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (subgeographicalregion.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + subgeographicalregion.getRpnCondition() + "\"/>\n";
		}
		if (subgeographicalregion.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += subgeographicalregion.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (subgeographicalregion.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + subgeographicalregion.getSchemeType() + "\"/>\n";
		}
		if (subgeographicalregion.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + subgeographicalregion.getSeasonType() + "\"/>\n";
		}
		if (subgeographicalregion.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + subgeographicalregion.getSubtaskNumber() + "\"/>\n";
		}
		if (subgeographicalregion.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += subgeographicalregion.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (subgeographicalregion.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += subgeographicalregion.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (subgeographicalregion.getMRID() != null){
			rdfXmlResource += "\t</cim:SubGeographicalRegion>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Substation substation){
		String rdfXmlResource = "";
		if (substation.getMRID() != null){
			rdfXmlResource = "\t<cim:Substation rdf:ID = \"_" + substation.getMRID() + "\">\n";
		}
		if (substation.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + substation.getAssets().getMRID() + "\"/>\n";
		}
		if (substation.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + substation.getLocation().getMRID() + "\"/>\n";
		}
		if (substation.getRegion() != null){
			rdfXmlResource += "\t\t<cim:Substation.Region rdf:resource=\"#_" + substation.getRegion().getMRID() + "\"/>\n";
		}
		if (substation.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += substation.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (substation.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += substation.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (substation.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += substation.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (substation.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += substation.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (substation.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += substation.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (substation.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += substation.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (substation.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += substation.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (substation.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += substation.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (substation.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += substation.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (substation.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += substation.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (substation.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += substation.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (substation.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += substation.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (substation.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += substation.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (substation.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += substation.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (substation.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += substation.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (substation.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += substation.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (substation.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += substation.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (substation.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += substation.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (substation.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += substation.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (substation.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += substation.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (substation.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + substation.getRpnCondition() + "\"/>\n";
		}
		if (substation.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += substation.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (substation.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + substation.getSchemeType() + "\"/>\n";
		}
		if (substation.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + substation.getSeasonType() + "\"/>\n";
		}
		if (substation.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + substation.getSubtaskNumber() + "\"/>\n";
		}
		if (substation.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += substation.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (substation.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += substation.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (substation.getType() != null){
			rdfXmlResource += "\t\t<nti:Substation.type rdf:resource=\"" + this.baseURI + "#SubstationType." + substation.getType() + "\"/>\n";
		}
		if (substation.getMRID() != null){
			rdfXmlResource += "\t</cim:Substation>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Terminal terminal){
		String rdfXmlResource = "";
		if (terminal.getMRID() != null){
			rdfXmlResource = "\t<cim:Terminal rdf:ID = \"_" + terminal.getMRID() + "\">\n";
		}
		if (terminal.getBusNameMarker() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.BusNameMarker rdf:resource=\"#_" + terminal.getBusNameMarker().getMRID() + "\"/>\n";
		}
		if (terminal.getConductingEquipment() != null){
			rdfXmlResource += "\t\t<cim:Terminal.ConductingEquipment rdf:resource=\"#_" + terminal.getConductingEquipment().getMRID() + "\"/>\n";
		}
		if (terminal.getConnectivityNode() != null){
			rdfXmlResource += "\t\t<cim:Terminal.ConnectivityNode rdf:resource=\"#_" + terminal.getConnectivityNode().getMRID() + "\"/>\n";
		}
		if (terminal.getTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:Terminal.TopologicalNode rdf:resource=\"#_" + terminal.getTopologicalNode().getMRID() + "\"/>\n";
		}
		if (terminal.getSvPowerFlow() != null){
			rdfXmlResource += "\t\t<cim:Terminal.SvPowerFlow rdf:resource=\"#_" + terminal.getSvPowerFlow().getMRID() + "\"/>\n";
		}
		if (terminal.getPeForPowerTransformerForkLV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: terminal.getPeForPowerTransformerForkLV()){
				rdfXmlResource += "\t\t<cim:Terminal.PeForPowerTransformerForkLV rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (terminal.getPeForPowerTransformerForkHV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: terminal.getPeForPowerTransformerForkHV()){
				rdfXmlResource += "\t\t<cim:Terminal.PeForPowerTransformerForkHV rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (terminal.getPeForACLineSegmentFork() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: terminal.getPeForACLineSegmentFork()){
				rdfXmlResource += "\t\t<cim:Terminal.PeForACLineSegmentFork rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (terminal.getConnected() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.connected>";
			rdfXmlResource += terminal.getConnected().toString();
			rdfXmlResource += "</cim:ACDCTerminal.connected>\n";
		}
		if (terminal.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.sequenceNumber>";
			rdfXmlResource += terminal.getSequenceNumber().toString();
			rdfXmlResource += "</cim:ACDCTerminal.sequenceNumber>\n";
		}
		if (terminal.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += terminal.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (terminal.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += terminal.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (terminal.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += terminal.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (terminal.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += terminal.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (terminal.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += terminal.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (terminal.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + terminal.getRpnCondition() + "\"/>\n";
		}
		if (terminal.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += terminal.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (terminal.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + terminal.getSchemeType() + "\"/>\n";
		}
		if (terminal.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + terminal.getSeasonType() + "\"/>\n";
		}
		if (terminal.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + terminal.getSubtaskNumber() + "\"/>\n";
		}
		if (terminal.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += terminal.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (terminal.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += terminal.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (terminal.getIsBelongingToEquivalent() != null){
			rdfXmlResource += "\t\t<nti:Terminal.isBelongingToEquivalent>";
			rdfXmlResource += terminal.getIsBelongingToEquivalent().toString();
			rdfXmlResource += "</nti:Terminal.isBelongingToEquivalent>\n";
		}
		if (terminal.getPhases() != null){
			rdfXmlResource += "\t\t<cim:Terminal.phases rdf:resource=\"" + this.baseURI + "#PhaseCode." + terminal.getPhases() + "\"/>\n";
		}
		if (terminal.getMRID() != null){
			rdfXmlResource += "\t</cim:Terminal>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.VoltageLevel voltagelevel){
		String rdfXmlResource = "";
		if (voltagelevel.getMRID() != null){
			rdfXmlResource = "\t<cim:VoltageLevel rdf:ID = \"_" + voltagelevel.getMRID() + "\">\n";
		}
		if (voltagelevel.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + voltagelevel.getAssets().getMRID() + "\"/>\n";
		}
		if (voltagelevel.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + voltagelevel.getLocation().getMRID() + "\"/>\n";
		}
		if (voltagelevel.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:VoltageLevel.BaseVoltage rdf:resource=\"#_" + voltagelevel.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (voltagelevel.getSubstation() != null){
			rdfXmlResource += "\t\t<cim:VoltageLevel.Substation rdf:resource=\"#_" + voltagelevel.getSubstation().getMRID() + "\"/>\n";
		}
		if (voltagelevel.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += voltagelevel.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (voltagelevel.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += voltagelevel.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (voltagelevel.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += voltagelevel.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (voltagelevel.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += voltagelevel.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (voltagelevel.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += voltagelevel.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (voltagelevel.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += voltagelevel.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (voltagelevel.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += voltagelevel.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (voltagelevel.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += voltagelevel.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (voltagelevel.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += voltagelevel.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (voltagelevel.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += voltagelevel.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (voltagelevel.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += voltagelevel.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (voltagelevel.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += voltagelevel.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (voltagelevel.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += voltagelevel.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (voltagelevel.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += voltagelevel.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (voltagelevel.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += voltagelevel.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (voltagelevel.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += voltagelevel.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (voltagelevel.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += voltagelevel.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (voltagelevel.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += voltagelevel.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (voltagelevel.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += voltagelevel.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (voltagelevel.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += voltagelevel.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (voltagelevel.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + voltagelevel.getRpnCondition() + "\"/>\n";
		}
		if (voltagelevel.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += voltagelevel.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (voltagelevel.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + voltagelevel.getSchemeType() + "\"/>\n";
		}
		if (voltagelevel.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + voltagelevel.getSeasonType() + "\"/>\n";
		}
		if (voltagelevel.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + voltagelevel.getSubtaskNumber() + "\"/>\n";
		}
		if (voltagelevel.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += voltagelevel.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (voltagelevel.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += voltagelevel.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (voltagelevel.getHighVoltageLimit() != null){
			rdfXmlResource += "\t\t<cim:VoltageLevel.highVoltageLimit>";
			rdfXmlResource += voltagelevel.getHighVoltageLimit().getValue().toString();
			rdfXmlResource += "</cim:VoltageLevel.highVoltageLimit>\n";
		}
		if (voltagelevel.getLowVoltageLimit() != null){
			rdfXmlResource += "\t\t<cim:VoltageLevel.lowVoltageLimit>";
			rdfXmlResource += voltagelevel.getLowVoltageLimit().getValue().toString();
			rdfXmlResource += "</cim:VoltageLevel.lowVoltageLimit>\n";
		}
		if (voltagelevel.getMRID() != null){
			rdfXmlResource += "\t</cim:VoltageLevel>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.ACDCConverter acdcconverter){
		String rdfXmlResource = "";
		if (acdcconverter.getMRID() != null){
			rdfXmlResource = "\t<cim:ACDCConverter rdf:ID = \"_" + acdcconverter.getMRID() + "\">\n";
		}
		if (acdcconverter.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + acdcconverter.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + acdcconverter.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + acdcconverter.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + acdcconverter.getSvStatus().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: acdcconverter.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (acdcconverter.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + acdcconverter.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + acdcconverter.getAssets().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + acdcconverter.getLocation().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getPccTerminal() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.PccTerminal rdf:resource=\"#_" + acdcconverter.getPccTerminal().getMRID() + "\"/>\n";
		}
		if (acdcconverter.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += acdcconverter.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (acdcconverter.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += acdcconverter.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (acdcconverter.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += acdcconverter.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (acdcconverter.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += acdcconverter.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (acdcconverter.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += acdcconverter.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (acdcconverter.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += acdcconverter.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (acdcconverter.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += acdcconverter.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (acdcconverter.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += acdcconverter.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (acdcconverter.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += acdcconverter.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (acdcconverter.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += acdcconverter.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (acdcconverter.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += acdcconverter.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (acdcconverter.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += acdcconverter.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (acdcconverter.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += acdcconverter.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (acdcconverter.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += acdcconverter.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (acdcconverter.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += acdcconverter.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (acdcconverter.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += acdcconverter.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (acdcconverter.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += acdcconverter.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (acdcconverter.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += acdcconverter.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (acdcconverter.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += acdcconverter.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (acdcconverter.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += acdcconverter.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (acdcconverter.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += acdcconverter.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (acdcconverter.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += acdcconverter.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (acdcconverter.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += acdcconverter.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (acdcconverter.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += acdcconverter.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (acdcconverter.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += acdcconverter.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (acdcconverter.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += acdcconverter.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (acdcconverter.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += acdcconverter.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (acdcconverter.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += acdcconverter.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (acdcconverter.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += acdcconverter.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (acdcconverter.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += acdcconverter.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (acdcconverter.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += acdcconverter.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (acdcconverter.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + acdcconverter.getRpnCondition() + "\"/>\n";
		}
		if (acdcconverter.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += acdcconverter.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (acdcconverter.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + acdcconverter.getSchemeType() + "\"/>\n";
		}
		if (acdcconverter.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + acdcconverter.getSeasonType() + "\"/>\n";
		}
		if (acdcconverter.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + acdcconverter.getSubtaskNumber() + "\"/>\n";
		}
		if (acdcconverter.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += acdcconverter.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (acdcconverter.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += acdcconverter.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (acdcconverter.getBaseS() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.baseS>";
			rdfXmlResource += acdcconverter.getBaseS().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.baseS>\n";
		}
		if (acdcconverter.getIdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idc>";
			rdfXmlResource += acdcconverter.getIdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idc>\n";
		}
		if (acdcconverter.getIdleLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idleLoss>";
			rdfXmlResource += acdcconverter.getIdleLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idleLoss>\n";
		}
		if (acdcconverter.getMaxUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.maxUdc>";
			rdfXmlResource += acdcconverter.getMaxUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.maxUdc>\n";
		}
		if (acdcconverter.getMinUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.minUdc>";
			rdfXmlResource += acdcconverter.getMinUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.minUdc>\n";
		}
		if (acdcconverter.getNomUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.nomUdc>";
			rdfXmlResource += acdcconverter.getNomUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.nomUdc>\n";
		}
		if (acdcconverter.getNumberOfValves() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.numberOfValves>";
			rdfXmlResource += acdcconverter.getNumberOfValves().toString();
			rdfXmlResource += "</cim:ACDCConverter.numberOfValves>\n";
		}
		if (acdcconverter.getP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.p>";
			rdfXmlResource += acdcconverter.getP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.p>\n";
		}
		if (acdcconverter.getPoleLossP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.poleLossP>";
			rdfXmlResource += acdcconverter.getPoleLossP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.poleLossP>\n";
		}
		if (acdcconverter.getQ() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.q>";
			rdfXmlResource += acdcconverter.getQ().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.q>\n";
		}
		if (acdcconverter.getRatedUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.ratedUdc>";
			rdfXmlResource += acdcconverter.getRatedUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.ratedUdc>\n";
		}
		if (acdcconverter.getResistiveLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.resistiveLoss>";
			rdfXmlResource += acdcconverter.getResistiveLoss().toString();
			rdfXmlResource += "</cim:ACDCConverter.resistiveLoss>\n";
		}
		if (acdcconverter.getSwitchingLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.switchingLoss>";
			rdfXmlResource += acdcconverter.getSwitchingLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.switchingLoss>\n";
		}
		if (acdcconverter.getTargetPpcc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetPpcc>";
			rdfXmlResource += acdcconverter.getTargetPpcc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetPpcc>\n";
		}
		if (acdcconverter.getTargetUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetUdc>";
			rdfXmlResource += acdcconverter.getTargetUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetUdc>\n";
		}
		if (acdcconverter.getUc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.uc>";
			rdfXmlResource += acdcconverter.getUc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.uc>\n";
		}
		if (acdcconverter.getUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.udc>";
			rdfXmlResource += acdcconverter.getUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.udc>\n";
		}
		if (acdcconverter.getValveU0() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.valveU0>";
			rdfXmlResource += acdcconverter.getValveU0().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.valveU0>\n";
		}
		if (acdcconverter.getMRID() != null){
			rdfXmlResource += "\t</cim:ACDCConverter>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.ACDCConverterDCTerminal acdcconverterdcterminal){
		String rdfXmlResource = "";
		if (acdcconverterdcterminal.getMRID() != null){
			rdfXmlResource = "\t<cim:ACDCConverterDCTerminal rdf:ID = \"_" + acdcconverterdcterminal.getMRID() + "\">\n";
		}
		if (acdcconverterdcterminal.getDCTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCTopologicalNode rdf:resource=\"#_" + acdcconverterdcterminal.getDCTopologicalNode().getMRID() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getDCNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCNode rdf:resource=\"#_" + acdcconverterdcterminal.getDCNode().getMRID() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getBusNameMarker() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.BusNameMarker rdf:resource=\"#_" + acdcconverterdcterminal.getBusNameMarker().getMRID() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getDCConductingEquipment() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverterDCTerminal.DCConductingEquipment rdf:resource=\"#_" + acdcconverterdcterminal.getDCConductingEquipment().getMRID() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getConnected() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.connected>";
			rdfXmlResource += acdcconverterdcterminal.getConnected().toString();
			rdfXmlResource += "</cim:ACDCTerminal.connected>\n";
		}
		if (acdcconverterdcterminal.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.sequenceNumber>";
			rdfXmlResource += acdcconverterdcterminal.getSequenceNumber().toString();
			rdfXmlResource += "</cim:ACDCTerminal.sequenceNumber>\n";
		}
		if (acdcconverterdcterminal.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += acdcconverterdcterminal.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (acdcconverterdcterminal.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += acdcconverterdcterminal.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (acdcconverterdcterminal.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += acdcconverterdcterminal.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (acdcconverterdcterminal.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += acdcconverterdcterminal.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (acdcconverterdcterminal.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += acdcconverterdcterminal.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (acdcconverterdcterminal.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + acdcconverterdcterminal.getRpnCondition() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += acdcconverterdcterminal.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (acdcconverterdcterminal.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + acdcconverterdcterminal.getSchemeType() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + acdcconverterdcterminal.getSeasonType() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + acdcconverterdcterminal.getSubtaskNumber() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += acdcconverterdcterminal.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (acdcconverterdcterminal.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += acdcconverterdcterminal.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (acdcconverterdcterminal.getPolarity() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverterDCTerminal.polarity rdf:resource=\"" + this.baseURI + "#DCPolarityKind." + acdcconverterdcterminal.getPolarity() + "\"/>\n";
		}
		if (acdcconverterdcterminal.getMRID() != null){
			rdfXmlResource += "\t</cim:ACDCConverterDCTerminal>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.CsConverter csconverter){
		String rdfXmlResource = "";
		if (csconverter.getMRID() != null){
			rdfXmlResource = "\t<cim:CsConverter rdf:ID = \"_" + csconverter.getMRID() + "\">\n";
		}
		if (csconverter.getPccTerminal() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.PccTerminal rdf:resource=\"#_" + csconverter.getPccTerminal().getMRID() + "\"/>\n";
		}
		if (csconverter.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + csconverter.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (csconverter.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + csconverter.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (csconverter.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + csconverter.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (csconverter.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + csconverter.getSvStatus().getMRID() + "\"/>\n";
		}
		if (csconverter.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: csconverter.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (csconverter.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + csconverter.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (csconverter.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + csconverter.getAssets().getMRID() + "\"/>\n";
		}
		if (csconverter.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + csconverter.getLocation().getMRID() + "\"/>\n";
		}
		if (csconverter.getBaseS() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.baseS>";
			rdfXmlResource += csconverter.getBaseS().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.baseS>\n";
		}
		if (csconverter.getIdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idc>";
			rdfXmlResource += csconverter.getIdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idc>\n";
		}
		if (csconverter.getIdleLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idleLoss>";
			rdfXmlResource += csconverter.getIdleLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idleLoss>\n";
		}
		if (csconverter.getMaxUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.maxUdc>";
			rdfXmlResource += csconverter.getMaxUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.maxUdc>\n";
		}
		if (csconverter.getMinUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.minUdc>";
			rdfXmlResource += csconverter.getMinUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.minUdc>\n";
		}
		if (csconverter.getNomUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.nomUdc>";
			rdfXmlResource += csconverter.getNomUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.nomUdc>\n";
		}
		if (csconverter.getNumberOfValves() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.numberOfValves>";
			rdfXmlResource += csconverter.getNumberOfValves().toString();
			rdfXmlResource += "</cim:ACDCConverter.numberOfValves>\n";
		}
		if (csconverter.getP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.p>";
			rdfXmlResource += csconverter.getP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.p>\n";
		}
		if (csconverter.getPoleLossP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.poleLossP>";
			rdfXmlResource += csconverter.getPoleLossP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.poleLossP>\n";
		}
		if (csconverter.getQ() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.q>";
			rdfXmlResource += csconverter.getQ().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.q>\n";
		}
		if (csconverter.getRatedUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.ratedUdc>";
			rdfXmlResource += csconverter.getRatedUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.ratedUdc>\n";
		}
		if (csconverter.getResistiveLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.resistiveLoss>";
			rdfXmlResource += csconverter.getResistiveLoss().toString();
			rdfXmlResource += "</cim:ACDCConverter.resistiveLoss>\n";
		}
		if (csconverter.getSwitchingLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.switchingLoss>";
			rdfXmlResource += csconverter.getSwitchingLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.switchingLoss>\n";
		}
		if (csconverter.getTargetPpcc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetPpcc>";
			rdfXmlResource += csconverter.getTargetPpcc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetPpcc>\n";
		}
		if (csconverter.getTargetUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetUdc>";
			rdfXmlResource += csconverter.getTargetUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetUdc>\n";
		}
		if (csconverter.getUc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.uc>";
			rdfXmlResource += csconverter.getUc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.uc>\n";
		}
		if (csconverter.getUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.udc>";
			rdfXmlResource += csconverter.getUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.udc>\n";
		}
		if (csconverter.getValveU0() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.valveU0>";
			rdfXmlResource += csconverter.getValveU0().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.valveU0>\n";
		}
		if (csconverter.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += csconverter.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (csconverter.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += csconverter.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (csconverter.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += csconverter.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (csconverter.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += csconverter.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (csconverter.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += csconverter.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (csconverter.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += csconverter.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (csconverter.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += csconverter.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (csconverter.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += csconverter.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (csconverter.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += csconverter.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (csconverter.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += csconverter.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (csconverter.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += csconverter.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (csconverter.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += csconverter.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (csconverter.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += csconverter.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (csconverter.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += csconverter.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (csconverter.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += csconverter.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (csconverter.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += csconverter.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (csconverter.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += csconverter.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (csconverter.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += csconverter.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (csconverter.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += csconverter.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (csconverter.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += csconverter.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (csconverter.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += csconverter.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (csconverter.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += csconverter.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (csconverter.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += csconverter.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (csconverter.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += csconverter.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (csconverter.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += csconverter.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (csconverter.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += csconverter.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (csconverter.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += csconverter.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (csconverter.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += csconverter.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (csconverter.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += csconverter.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (csconverter.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += csconverter.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (csconverter.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += csconverter.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (csconverter.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + csconverter.getRpnCondition() + "\"/>\n";
		}
		if (csconverter.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += csconverter.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (csconverter.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + csconverter.getSchemeType() + "\"/>\n";
		}
		if (csconverter.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + csconverter.getSeasonType() + "\"/>\n";
		}
		if (csconverter.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + csconverter.getSubtaskNumber() + "\"/>\n";
		}
		if (csconverter.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += csconverter.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (csconverter.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += csconverter.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (csconverter.getAlpha() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.alpha>";
			rdfXmlResource += csconverter.getAlpha().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.alpha>\n";
		}
		if (csconverter.getGamma() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.gamma>";
			rdfXmlResource += csconverter.getGamma().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.gamma>\n";
		}
		if (csconverter.getMaxAlpha() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.maxAlpha>";
			rdfXmlResource += csconverter.getMaxAlpha().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.maxAlpha>\n";
		}
		if (csconverter.getMaxGamma() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.maxGamma>";
			rdfXmlResource += csconverter.getMaxGamma().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.maxGamma>\n";
		}
		if (csconverter.getMaxIdc() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.maxIdc>";
			rdfXmlResource += csconverter.getMaxIdc().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.maxIdc>\n";
		}
		if (csconverter.getMinAlpha() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.minAlpha>";
			rdfXmlResource += csconverter.getMinAlpha().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.minAlpha>\n";
		}
		if (csconverter.getMinGamma() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.minGamma>";
			rdfXmlResource += csconverter.getMinGamma().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.minGamma>\n";
		}
		if (csconverter.getMinIdc() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.minIdc>";
			rdfXmlResource += csconverter.getMinIdc().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.minIdc>\n";
		}
		if (csconverter.getOperatingMode() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.operatingMode rdf:resource=\"" + this.baseURI + "#CsOperatingModeKind." + csconverter.getOperatingMode() + "\"/>\n";
		}
		if (csconverter.getPPccControl() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.pPccControl rdf:resource=\"" + this.baseURI + "#CsPpccControlKind." + csconverter.getPPccControl() + "\"/>\n";
		}
		if (csconverter.getRatedIdc() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.ratedIdc>";
			rdfXmlResource += csconverter.getRatedIdc().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.ratedIdc>\n";
		}
		if (csconverter.getTargetAlpha() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.targetAlpha>";
			rdfXmlResource += csconverter.getTargetAlpha().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.targetAlpha>\n";
		}
		if (csconverter.getTargetGamma() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.targetGamma>";
			rdfXmlResource += csconverter.getTargetGamma().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.targetGamma>\n";
		}
		if (csconverter.getTargetIdc() != null){
			rdfXmlResource += "\t\t<cim:CsConverter.targetIdc>";
			rdfXmlResource += csconverter.getTargetIdc().getValue().toString();
			rdfXmlResource += "</cim:CsConverter.targetIdc>\n";
		}
		if (csconverter.getMRID() != null){
			rdfXmlResource += "\t</cim:CsConverter>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBaseTerminal dcbaseterminal){
		String rdfXmlResource = "";
		if (dcbaseterminal.getMRID() != null){
			rdfXmlResource = "\t<cim:DCBaseTerminal rdf:ID = \"_" + dcbaseterminal.getMRID() + "\">\n";
		}
		if (dcbaseterminal.getBusNameMarker() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.BusNameMarker rdf:resource=\"#_" + dcbaseterminal.getBusNameMarker().getMRID() + "\"/>\n";
		}
		if (dcbaseterminal.getDCTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCTopologicalNode rdf:resource=\"#_" + dcbaseterminal.getDCTopologicalNode().getMRID() + "\"/>\n";
		}
		if (dcbaseterminal.getDCNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCNode rdf:resource=\"#_" + dcbaseterminal.getDCNode().getMRID() + "\"/>\n";
		}
		if (dcbaseterminal.getConnected() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.connected>";
			rdfXmlResource += dcbaseterminal.getConnected().toString();
			rdfXmlResource += "</cim:ACDCTerminal.connected>\n";
		}
		if (dcbaseterminal.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.sequenceNumber>";
			rdfXmlResource += dcbaseterminal.getSequenceNumber().toString();
			rdfXmlResource += "</cim:ACDCTerminal.sequenceNumber>\n";
		}
		if (dcbaseterminal.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcbaseterminal.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcbaseterminal.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcbaseterminal.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcbaseterminal.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcbaseterminal.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcbaseterminal.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcbaseterminal.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcbaseterminal.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcbaseterminal.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcbaseterminal.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcbaseterminal.getRpnCondition() + "\"/>\n";
		}
		if (dcbaseterminal.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcbaseterminal.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcbaseterminal.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcbaseterminal.getSchemeType() + "\"/>\n";
		}
		if (dcbaseterminal.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcbaseterminal.getSeasonType() + "\"/>\n";
		}
		if (dcbaseterminal.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcbaseterminal.getSubtaskNumber() + "\"/>\n";
		}
		if (dcbaseterminal.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcbaseterminal.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcbaseterminal.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcbaseterminal.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcbaseterminal.getMRID() != null){
			rdfXmlResource += "\t</cim:DCBaseTerminal>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBreaker dcbreaker){
		String rdfXmlResource = "";
		if (dcbreaker.getMRID() != null){
			rdfXmlResource = "\t<cim:DCBreaker rdf:ID = \"_" + dcbreaker.getMRID() + "\">\n";
		}
		if (dcbreaker.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcbreaker.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcbreaker.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcbreaker.getAssets().getMRID() + "\"/>\n";
		}
		if (dcbreaker.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcbreaker.getLocation().getMRID() + "\"/>\n";
		}
		if (dcbreaker.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcbreaker.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcbreaker.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcbreaker.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcbreaker.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcbreaker.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcbreaker.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcbreaker.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcbreaker.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcbreaker.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcbreaker.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcbreaker.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcbreaker.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcbreaker.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcbreaker.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcbreaker.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcbreaker.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcbreaker.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcbreaker.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcbreaker.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcbreaker.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcbreaker.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcbreaker.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcbreaker.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcbreaker.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcbreaker.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcbreaker.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcbreaker.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcbreaker.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcbreaker.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcbreaker.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcbreaker.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcbreaker.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcbreaker.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcbreaker.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcbreaker.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcbreaker.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcbreaker.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcbreaker.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcbreaker.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcbreaker.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcbreaker.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcbreaker.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcbreaker.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcbreaker.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcbreaker.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcbreaker.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcbreaker.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcbreaker.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcbreaker.getRpnCondition() + "\"/>\n";
		}
		if (dcbreaker.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcbreaker.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcbreaker.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcbreaker.getSchemeType() + "\"/>\n";
		}
		if (dcbreaker.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcbreaker.getSeasonType() + "\"/>\n";
		}
		if (dcbreaker.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcbreaker.getSubtaskNumber() + "\"/>\n";
		}
		if (dcbreaker.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcbreaker.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcbreaker.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcbreaker.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcbreaker.getMRID() != null){
			rdfXmlResource += "\t</cim:DCBreaker>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCBusbar dcbusbar){
		String rdfXmlResource = "";
		if (dcbusbar.getMRID() != null){
			rdfXmlResource = "\t<cim:DCBusbar rdf:ID = \"_" + dcbusbar.getMRID() + "\">\n";
		}
		if (dcbusbar.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcbusbar.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcbusbar.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcbusbar.getAssets().getMRID() + "\"/>\n";
		}
		if (dcbusbar.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcbusbar.getLocation().getMRID() + "\"/>\n";
		}
		if (dcbusbar.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcbusbar.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcbusbar.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcbusbar.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcbusbar.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcbusbar.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcbusbar.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcbusbar.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcbusbar.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcbusbar.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcbusbar.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcbusbar.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcbusbar.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcbusbar.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcbusbar.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcbusbar.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcbusbar.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcbusbar.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcbusbar.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcbusbar.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcbusbar.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcbusbar.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcbusbar.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcbusbar.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcbusbar.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcbusbar.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcbusbar.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcbusbar.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcbusbar.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcbusbar.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcbusbar.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcbusbar.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcbusbar.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcbusbar.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcbusbar.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcbusbar.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcbusbar.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcbusbar.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcbusbar.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcbusbar.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcbusbar.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcbusbar.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcbusbar.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcbusbar.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcbusbar.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcbusbar.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcbusbar.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcbusbar.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcbusbar.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcbusbar.getRpnCondition() + "\"/>\n";
		}
		if (dcbusbar.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcbusbar.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcbusbar.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcbusbar.getSchemeType() + "\"/>\n";
		}
		if (dcbusbar.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcbusbar.getSeasonType() + "\"/>\n";
		}
		if (dcbusbar.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcbusbar.getSubtaskNumber() + "\"/>\n";
		}
		if (dcbusbar.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcbusbar.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcbusbar.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcbusbar.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcbusbar.getMRID() != null){
			rdfXmlResource += "\t</cim:DCBusbar>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCChopper dcchopper){
		String rdfXmlResource = "";
		if (dcchopper.getMRID() != null){
			rdfXmlResource = "\t<cim:DCChopper rdf:ID = \"_" + dcchopper.getMRID() + "\">\n";
		}
		if (dcchopper.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcchopper.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcchopper.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcchopper.getAssets().getMRID() + "\"/>\n";
		}
		if (dcchopper.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcchopper.getLocation().getMRID() + "\"/>\n";
		}
		if (dcchopper.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcchopper.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcchopper.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcchopper.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcchopper.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcchopper.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcchopper.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcchopper.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcchopper.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcchopper.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcchopper.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcchopper.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcchopper.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcchopper.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcchopper.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcchopper.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcchopper.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcchopper.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcchopper.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcchopper.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcchopper.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcchopper.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcchopper.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcchopper.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcchopper.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcchopper.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcchopper.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcchopper.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcchopper.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcchopper.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcchopper.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcchopper.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcchopper.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcchopper.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcchopper.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcchopper.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcchopper.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcchopper.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcchopper.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcchopper.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcchopper.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcchopper.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcchopper.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcchopper.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcchopper.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcchopper.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcchopper.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcchopper.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcchopper.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcchopper.getRpnCondition() + "\"/>\n";
		}
		if (dcchopper.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcchopper.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcchopper.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcchopper.getSchemeType() + "\"/>\n";
		}
		if (dcchopper.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcchopper.getSeasonType() + "\"/>\n";
		}
		if (dcchopper.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcchopper.getSubtaskNumber() + "\"/>\n";
		}
		if (dcchopper.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcchopper.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcchopper.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcchopper.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcchopper.getMRID() != null){
			rdfXmlResource += "\t</cim:DCChopper>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCConductingEquipment dcconductingequipment){
		String rdfXmlResource = "";
		if (dcconductingequipment.getMRID() != null){
			rdfXmlResource = "\t<cim:DCConductingEquipment rdf:ID = \"_" + dcconductingequipment.getMRID() + "\">\n";
		}
		if (dcconductingequipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcconductingequipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcconductingequipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcconductingequipment.getAssets().getMRID() + "\"/>\n";
		}
		if (dcconductingequipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcconductingequipment.getLocation().getMRID() + "\"/>\n";
		}
		if (dcconductingequipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcconductingequipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcconductingequipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcconductingequipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcconductingequipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcconductingequipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcconductingequipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcconductingequipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcconductingequipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcconductingequipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcconductingequipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcconductingequipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcconductingequipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcconductingequipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcconductingequipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcconductingequipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcconductingequipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcconductingequipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcconductingequipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcconductingequipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcconductingequipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcconductingequipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcconductingequipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcconductingequipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcconductingequipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcconductingequipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcconductingequipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcconductingequipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcconductingequipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcconductingequipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcconductingequipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcconductingequipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcconductingequipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcconductingequipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcconductingequipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcconductingequipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcconductingequipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcconductingequipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcconductingequipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcconductingequipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcconductingequipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcconductingequipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcconductingequipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcconductingequipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcconductingequipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcconductingequipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcconductingequipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcconductingequipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcconductingequipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcconductingequipment.getRpnCondition() + "\"/>\n";
		}
		if (dcconductingequipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcconductingequipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcconductingequipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcconductingequipment.getSchemeType() + "\"/>\n";
		}
		if (dcconductingequipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcconductingequipment.getSeasonType() + "\"/>\n";
		}
		if (dcconductingequipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcconductingequipment.getSubtaskNumber() + "\"/>\n";
		}
		if (dcconductingequipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcconductingequipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcconductingequipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcconductingequipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcconductingequipment.getMRID() != null){
			rdfXmlResource += "\t</cim:DCConductingEquipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCConverterUnit dcconverterunit){
		String rdfXmlResource = "";
		if (dcconverterunit.getMRID() != null){
			rdfXmlResource = "\t<cim:DCConverterUnit rdf:ID = \"_" + dcconverterunit.getMRID() + "\">\n";
		}
		if (dcconverterunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcconverterunit.getAssets().getMRID() + "\"/>\n";
		}
		if (dcconverterunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcconverterunit.getLocation().getMRID() + "\"/>\n";
		}
		if (dcconverterunit.getSubstation() != null){
			rdfXmlResource += "\t\t<cim:DCConverterUnit.Substation rdf:resource=\"#_" + dcconverterunit.getSubstation().getMRID() + "\"/>\n";
		}
		if (dcconverterunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcconverterunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcconverterunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcconverterunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcconverterunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcconverterunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcconverterunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcconverterunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcconverterunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcconverterunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcconverterunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcconverterunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcconverterunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcconverterunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcconverterunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcconverterunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcconverterunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcconverterunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcconverterunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcconverterunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcconverterunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcconverterunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcconverterunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcconverterunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcconverterunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcconverterunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcconverterunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcconverterunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcconverterunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcconverterunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcconverterunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcconverterunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcconverterunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcconverterunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcconverterunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcconverterunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcconverterunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcconverterunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcconverterunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcconverterunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcconverterunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcconverterunit.getRpnCondition() + "\"/>\n";
		}
		if (dcconverterunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcconverterunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcconverterunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcconverterunit.getSchemeType() + "\"/>\n";
		}
		if (dcconverterunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcconverterunit.getSeasonType() + "\"/>\n";
		}
		if (dcconverterunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcconverterunit.getSubtaskNumber() + "\"/>\n";
		}
		if (dcconverterunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcconverterunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcconverterunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcconverterunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcconverterunit.getOperationMode() != null){
			rdfXmlResource += "\t\t<cim:DCConverterUnit.operationMode rdf:resource=\"" + this.baseURI + "#DCConverterOperatingModeKind." + dcconverterunit.getOperationMode() + "\"/>\n";
		}
		if (dcconverterunit.getMRID() != null){
			rdfXmlResource += "\t</cim:DCConverterUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCDisconnector dcdisconnector){
		String rdfXmlResource = "";
		if (dcdisconnector.getMRID() != null){
			rdfXmlResource = "\t<cim:DCDisconnector rdf:ID = \"_" + dcdisconnector.getMRID() + "\">\n";
		}
		if (dcdisconnector.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcdisconnector.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcdisconnector.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcdisconnector.getAssets().getMRID() + "\"/>\n";
		}
		if (dcdisconnector.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcdisconnector.getLocation().getMRID() + "\"/>\n";
		}
		if (dcdisconnector.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcdisconnector.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcdisconnector.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcdisconnector.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcdisconnector.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcdisconnector.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcdisconnector.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcdisconnector.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcdisconnector.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcdisconnector.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcdisconnector.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcdisconnector.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcdisconnector.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcdisconnector.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcdisconnector.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcdisconnector.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcdisconnector.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcdisconnector.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcdisconnector.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcdisconnector.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcdisconnector.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcdisconnector.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcdisconnector.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcdisconnector.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcdisconnector.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcdisconnector.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcdisconnector.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcdisconnector.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcdisconnector.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcdisconnector.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcdisconnector.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcdisconnector.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcdisconnector.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcdisconnector.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcdisconnector.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcdisconnector.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcdisconnector.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcdisconnector.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcdisconnector.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcdisconnector.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcdisconnector.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcdisconnector.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcdisconnector.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcdisconnector.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcdisconnector.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcdisconnector.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcdisconnector.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcdisconnector.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcdisconnector.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcdisconnector.getRpnCondition() + "\"/>\n";
		}
		if (dcdisconnector.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcdisconnector.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcdisconnector.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcdisconnector.getSchemeType() + "\"/>\n";
		}
		if (dcdisconnector.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcdisconnector.getSeasonType() + "\"/>\n";
		}
		if (dcdisconnector.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcdisconnector.getSubtaskNumber() + "\"/>\n";
		}
		if (dcdisconnector.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcdisconnector.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcdisconnector.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcdisconnector.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcdisconnector.getMRID() != null){
			rdfXmlResource += "\t</cim:DCDisconnector>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCEquipmentContainer dcequipmentcontainer){
		String rdfXmlResource = "";
		if (dcequipmentcontainer.getMRID() != null){
			rdfXmlResource = "\t<cim:DCEquipmentContainer rdf:ID = \"_" + dcequipmentcontainer.getMRID() + "\">\n";
		}
		if (dcequipmentcontainer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcequipmentcontainer.getAssets().getMRID() + "\"/>\n";
		}
		if (dcequipmentcontainer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcequipmentcontainer.getLocation().getMRID() + "\"/>\n";
		}
		if (dcequipmentcontainer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcequipmentcontainer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcequipmentcontainer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcequipmentcontainer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcequipmentcontainer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcequipmentcontainer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcequipmentcontainer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcequipmentcontainer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcequipmentcontainer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcequipmentcontainer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcequipmentcontainer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcequipmentcontainer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcequipmentcontainer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcequipmentcontainer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcequipmentcontainer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcequipmentcontainer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcequipmentcontainer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcequipmentcontainer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcequipmentcontainer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcequipmentcontainer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcequipmentcontainer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcequipmentcontainer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcequipmentcontainer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcequipmentcontainer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcequipmentcontainer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcequipmentcontainer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcequipmentcontainer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcequipmentcontainer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcequipmentcontainer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcequipmentcontainer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcequipmentcontainer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcequipmentcontainer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcequipmentcontainer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcequipmentcontainer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcequipmentcontainer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcequipmentcontainer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcequipmentcontainer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcequipmentcontainer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcequipmentcontainer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcequipmentcontainer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcequipmentcontainer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcequipmentcontainer.getRpnCondition() + "\"/>\n";
		}
		if (dcequipmentcontainer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcequipmentcontainer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcequipmentcontainer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcequipmentcontainer.getSchemeType() + "\"/>\n";
		}
		if (dcequipmentcontainer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcequipmentcontainer.getSeasonType() + "\"/>\n";
		}
		if (dcequipmentcontainer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcequipmentcontainer.getSubtaskNumber() + "\"/>\n";
		}
		if (dcequipmentcontainer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcequipmentcontainer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcequipmentcontainer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcequipmentcontainer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcequipmentcontainer.getMRID() != null){
			rdfXmlResource += "\t</cim:DCEquipmentContainer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCGround dcground){
		String rdfXmlResource = "";
		if (dcground.getMRID() != null){
			rdfXmlResource = "\t<cim:DCGround rdf:ID = \"_" + dcground.getMRID() + "\">\n";
		}
		if (dcground.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcground.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcground.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcground.getAssets().getMRID() + "\"/>\n";
		}
		if (dcground.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcground.getLocation().getMRID() + "\"/>\n";
		}
		if (dcground.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcground.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcground.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcground.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcground.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcground.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcground.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcground.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcground.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcground.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcground.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcground.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcground.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcground.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcground.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcground.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcground.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcground.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcground.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcground.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcground.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcground.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcground.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcground.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcground.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcground.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcground.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcground.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcground.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcground.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcground.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcground.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcground.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcground.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcground.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcground.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcground.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcground.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcground.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcground.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcground.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcground.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcground.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcground.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcground.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcground.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcground.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcground.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcground.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcground.getRpnCondition() + "\"/>\n";
		}
		if (dcground.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcground.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcground.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcground.getSchemeType() + "\"/>\n";
		}
		if (dcground.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcground.getSeasonType() + "\"/>\n";
		}
		if (dcground.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcground.getSubtaskNumber() + "\"/>\n";
		}
		if (dcground.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcground.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcground.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcground.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcground.getMRID() != null){
			rdfXmlResource += "\t</cim:DCGround>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCLine dcline){
		String rdfXmlResource = "";
		if (dcline.getMRID() != null){
			rdfXmlResource = "\t<cim:DCLine rdf:ID = \"_" + dcline.getMRID() + "\">\n";
		}
		if (dcline.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcline.getAssets().getMRID() + "\"/>\n";
		}
		if (dcline.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcline.getLocation().getMRID() + "\"/>\n";
		}
		if (dcline.getRegion() != null){
			rdfXmlResource += "\t\t<cim:DCLine.Region rdf:resource=\"#_" + dcline.getRegion().getMRID() + "\"/>\n";
		}
		if (dcline.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcline.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcline.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcline.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcline.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcline.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcline.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcline.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcline.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcline.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcline.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcline.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcline.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcline.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcline.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcline.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcline.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcline.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcline.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcline.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcline.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcline.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcline.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcline.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcline.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcline.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcline.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcline.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcline.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcline.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcline.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcline.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcline.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcline.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcline.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcline.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcline.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcline.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcline.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcline.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcline.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcline.getRpnCondition() + "\"/>\n";
		}
		if (dcline.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcline.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcline.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcline.getSchemeType() + "\"/>\n";
		}
		if (dcline.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcline.getSeasonType() + "\"/>\n";
		}
		if (dcline.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcline.getSubtaskNumber() + "\"/>\n";
		}
		if (dcline.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcline.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcline.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcline.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcline.getMRID() != null){
			rdfXmlResource += "\t</cim:DCLine>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCLineSegment dclinesegment){
		String rdfXmlResource = "";
		if (dclinesegment.getMRID() != null){
			rdfXmlResource = "\t<cim:DCLineSegment rdf:ID = \"_" + dclinesegment.getMRID() + "\">\n";
		}
		if (dclinesegment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dclinesegment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dclinesegment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dclinesegment.getAssets().getMRID() + "\"/>\n";
		}
		if (dclinesegment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dclinesegment.getLocation().getMRID() + "\"/>\n";
		}
		if (dclinesegment.getPerLengthParameter() != null){
			rdfXmlResource += "\t\t<cim:DCLineSegment.PerLengthParameter rdf:resource=\"#_" + dclinesegment.getPerLengthParameter().getMRID() + "\"/>\n";
		}
		if (dclinesegment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dclinesegment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dclinesegment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dclinesegment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dclinesegment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dclinesegment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dclinesegment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dclinesegment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dclinesegment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dclinesegment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dclinesegment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dclinesegment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dclinesegment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dclinesegment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dclinesegment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dclinesegment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dclinesegment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dclinesegment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dclinesegment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dclinesegment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dclinesegment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dclinesegment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dclinesegment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dclinesegment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dclinesegment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dclinesegment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dclinesegment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dclinesegment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dclinesegment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dclinesegment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dclinesegment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dclinesegment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dclinesegment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dclinesegment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dclinesegment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dclinesegment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dclinesegment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dclinesegment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dclinesegment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dclinesegment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dclinesegment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dclinesegment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dclinesegment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dclinesegment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dclinesegment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dclinesegment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dclinesegment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dclinesegment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dclinesegment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dclinesegment.getRpnCondition() + "\"/>\n";
		}
		if (dclinesegment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dclinesegment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dclinesegment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dclinesegment.getSchemeType() + "\"/>\n";
		}
		if (dclinesegment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dclinesegment.getSeasonType() + "\"/>\n";
		}
		if (dclinesegment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dclinesegment.getSubtaskNumber() + "\"/>\n";
		}
		if (dclinesegment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dclinesegment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dclinesegment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dclinesegment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dclinesegment.getCapacitance() != null){
			rdfXmlResource += "\t\t<cim:DCLineSegment.capacitance>";
			rdfXmlResource += dclinesegment.getCapacitance().getValue().toString();
			rdfXmlResource += "</cim:DCLineSegment.capacitance>\n";
		}
		if (dclinesegment.getInductance() != null){
			rdfXmlResource += "\t\t<cim:DCLineSegment.inductance>";
			rdfXmlResource += dclinesegment.getInductance().getValue().toString();
			rdfXmlResource += "</cim:DCLineSegment.inductance>\n";
		}
		if (dclinesegment.getLength() != null){
			rdfXmlResource += "\t\t<cim:DCLineSegment.length>";
			rdfXmlResource += dclinesegment.getLength().getValue().toString();
			rdfXmlResource += "</cim:DCLineSegment.length>\n";
		}
		if (dclinesegment.getResistance() != null){
			rdfXmlResource += "\t\t<cim:DCLineSegment.resistance>";
			rdfXmlResource += dclinesegment.getResistance().getValue().toString();
			rdfXmlResource += "</cim:DCLineSegment.resistance>\n";
		}
		if (dclinesegment.getMRID() != null){
			rdfXmlResource += "\t</cim:DCLineSegment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCNode dcnode){
		String rdfXmlResource = "";
		if (dcnode.getMRID() != null){
			rdfXmlResource = "\t<cim:DCNode rdf:ID = \"_" + dcnode.getMRID() + "\">\n";
		}
		if (dcnode.getDCEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:DCNode.DCEquipmentContainer rdf:resource=\"#_" + dcnode.getDCEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcnode.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcnode.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcnode.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcnode.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcnode.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcnode.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcnode.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcnode.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcnode.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcnode.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcnode.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcnode.getRpnCondition() + "\"/>\n";
		}
		if (dcnode.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcnode.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcnode.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcnode.getSchemeType() + "\"/>\n";
		}
		if (dcnode.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcnode.getSeasonType() + "\"/>\n";
		}
		if (dcnode.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcnode.getSubtaskNumber() + "\"/>\n";
		}
		if (dcnode.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcnode.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcnode.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcnode.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcnode.getMRID() != null){
			rdfXmlResource += "\t</cim:DCNode>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCSeriesDevice dcseriesdevice){
		String rdfXmlResource = "";
		if (dcseriesdevice.getMRID() != null){
			rdfXmlResource = "\t<cim:DCSeriesDevice rdf:ID = \"_" + dcseriesdevice.getMRID() + "\">\n";
		}
		if (dcseriesdevice.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcseriesdevice.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcseriesdevice.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcseriesdevice.getAssets().getMRID() + "\"/>\n";
		}
		if (dcseriesdevice.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcseriesdevice.getLocation().getMRID() + "\"/>\n";
		}
		if (dcseriesdevice.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcseriesdevice.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcseriesdevice.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcseriesdevice.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcseriesdevice.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcseriesdevice.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcseriesdevice.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcseriesdevice.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcseriesdevice.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcseriesdevice.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcseriesdevice.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcseriesdevice.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcseriesdevice.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcseriesdevice.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcseriesdevice.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcseriesdevice.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcseriesdevice.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcseriesdevice.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcseriesdevice.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcseriesdevice.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcseriesdevice.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcseriesdevice.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcseriesdevice.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcseriesdevice.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcseriesdevice.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcseriesdevice.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcseriesdevice.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcseriesdevice.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcseriesdevice.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcseriesdevice.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcseriesdevice.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcseriesdevice.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcseriesdevice.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcseriesdevice.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcseriesdevice.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcseriesdevice.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcseriesdevice.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcseriesdevice.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcseriesdevice.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcseriesdevice.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcseriesdevice.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcseriesdevice.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcseriesdevice.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcseriesdevice.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcseriesdevice.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcseriesdevice.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcseriesdevice.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcseriesdevice.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcseriesdevice.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcseriesdevice.getRpnCondition() + "\"/>\n";
		}
		if (dcseriesdevice.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcseriesdevice.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcseriesdevice.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcseriesdevice.getSchemeType() + "\"/>\n";
		}
		if (dcseriesdevice.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcseriesdevice.getSeasonType() + "\"/>\n";
		}
		if (dcseriesdevice.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcseriesdevice.getSubtaskNumber() + "\"/>\n";
		}
		if (dcseriesdevice.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcseriesdevice.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcseriesdevice.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcseriesdevice.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcseriesdevice.getInductance() != null){
			rdfXmlResource += "\t\t<cim:DCSeriesDevice.inductance>";
			rdfXmlResource += dcseriesdevice.getInductance().getValue().toString();
			rdfXmlResource += "</cim:DCSeriesDevice.inductance>\n";
		}
		if (dcseriesdevice.getRatedUdc() != null){
			rdfXmlResource += "\t\t<cim:DCSeriesDevice.ratedUdc>";
			rdfXmlResource += dcseriesdevice.getRatedUdc().getValue().toString();
			rdfXmlResource += "</cim:DCSeriesDevice.ratedUdc>\n";
		}
		if (dcseriesdevice.getResistance() != null){
			rdfXmlResource += "\t\t<cim:DCSeriesDevice.resistance>";
			rdfXmlResource += dcseriesdevice.getResistance().getValue().toString();
			rdfXmlResource += "</cim:DCSeriesDevice.resistance>\n";
		}
		if (dcseriesdevice.getMRID() != null){
			rdfXmlResource += "\t</cim:DCSeriesDevice>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCShunt dcshunt){
		String rdfXmlResource = "";
		if (dcshunt.getMRID() != null){
			rdfXmlResource = "\t<cim:DCShunt rdf:ID = \"_" + dcshunt.getMRID() + "\">\n";
		}
		if (dcshunt.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcshunt.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcshunt.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcshunt.getAssets().getMRID() + "\"/>\n";
		}
		if (dcshunt.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcshunt.getLocation().getMRID() + "\"/>\n";
		}
		if (dcshunt.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcshunt.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcshunt.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcshunt.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcshunt.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcshunt.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcshunt.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcshunt.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcshunt.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcshunt.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcshunt.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcshunt.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcshunt.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcshunt.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcshunt.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcshunt.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcshunt.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcshunt.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcshunt.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcshunt.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcshunt.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcshunt.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcshunt.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcshunt.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcshunt.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcshunt.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcshunt.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcshunt.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcshunt.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcshunt.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcshunt.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcshunt.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcshunt.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcshunt.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcshunt.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcshunt.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcshunt.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcshunt.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcshunt.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcshunt.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcshunt.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcshunt.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcshunt.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcshunt.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcshunt.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcshunt.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcshunt.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcshunt.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcshunt.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcshunt.getRpnCondition() + "\"/>\n";
		}
		if (dcshunt.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcshunt.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcshunt.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcshunt.getSchemeType() + "\"/>\n";
		}
		if (dcshunt.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcshunt.getSeasonType() + "\"/>\n";
		}
		if (dcshunt.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcshunt.getSubtaskNumber() + "\"/>\n";
		}
		if (dcshunt.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcshunt.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcshunt.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcshunt.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcshunt.getCapacitance() != null){
			rdfXmlResource += "\t\t<cim:DCShunt.capacitance>";
			rdfXmlResource += dcshunt.getCapacitance().getValue().toString();
			rdfXmlResource += "</cim:DCShunt.capacitance>\n";
		}
		if (dcshunt.getRatedUdc() != null){
			rdfXmlResource += "\t\t<cim:DCShunt.ratedUdc>";
			rdfXmlResource += dcshunt.getRatedUdc().getValue().toString();
			rdfXmlResource += "</cim:DCShunt.ratedUdc>\n";
		}
		if (dcshunt.getResistance() != null){
			rdfXmlResource += "\t\t<cim:DCShunt.resistance>";
			rdfXmlResource += dcshunt.getResistance().getValue().toString();
			rdfXmlResource += "</cim:DCShunt.resistance>\n";
		}
		if (dcshunt.getMRID() != null){
			rdfXmlResource += "\t</cim:DCShunt>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCSwitch dcswitch){
		String rdfXmlResource = "";
		if (dcswitch.getMRID() != null){
			rdfXmlResource = "\t<cim:DCSwitch rdf:ID = \"_" + dcswitch.getMRID() + "\">\n";
		}
		if (dcswitch.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + dcswitch.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (dcswitch.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + dcswitch.getAssets().getMRID() + "\"/>\n";
		}
		if (dcswitch.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + dcswitch.getLocation().getMRID() + "\"/>\n";
		}
		if (dcswitch.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += dcswitch.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (dcswitch.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += dcswitch.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (dcswitch.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += dcswitch.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (dcswitch.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += dcswitch.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (dcswitch.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += dcswitch.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (dcswitch.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += dcswitch.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (dcswitch.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += dcswitch.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (dcswitch.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += dcswitch.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (dcswitch.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += dcswitch.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (dcswitch.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += dcswitch.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (dcswitch.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += dcswitch.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (dcswitch.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += dcswitch.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (dcswitch.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += dcswitch.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (dcswitch.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += dcswitch.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (dcswitch.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += dcswitch.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (dcswitch.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += dcswitch.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (dcswitch.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += dcswitch.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (dcswitch.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += dcswitch.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (dcswitch.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += dcswitch.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (dcswitch.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcswitch.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcswitch.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcswitch.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcswitch.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcswitch.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcswitch.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcswitch.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcswitch.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcswitch.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcswitch.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcswitch.getRpnCondition() + "\"/>\n";
		}
		if (dcswitch.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcswitch.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcswitch.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcswitch.getSchemeType() + "\"/>\n";
		}
		if (dcswitch.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcswitch.getSeasonType() + "\"/>\n";
		}
		if (dcswitch.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcswitch.getSubtaskNumber() + "\"/>\n";
		}
		if (dcswitch.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcswitch.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcswitch.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcswitch.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcswitch.getMRID() != null){
			rdfXmlResource += "\t</cim:DCSwitch>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCTerminal dcterminal){
		String rdfXmlResource = "";
		if (dcterminal.getMRID() != null){
			rdfXmlResource = "\t<cim:DCTerminal rdf:ID = \"_" + dcterminal.getMRID() + "\">\n";
		}
		if (dcterminal.getDCTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCTopologicalNode rdf:resource=\"#_" + dcterminal.getDCTopologicalNode().getMRID() + "\"/>\n";
		}
		if (dcterminal.getDCNode() != null){
			rdfXmlResource += "\t\t<cim:DCBaseTerminal.DCNode rdf:resource=\"#_" + dcterminal.getDCNode().getMRID() + "\"/>\n";
		}
		if (dcterminal.getBusNameMarker() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.BusNameMarker rdf:resource=\"#_" + dcterminal.getBusNameMarker().getMRID() + "\"/>\n";
		}
		if (dcterminal.getDCConductingEquipment() != null){
			rdfXmlResource += "\t\t<cim:DCTerminal.DCConductingEquipment rdf:resource=\"#_" + dcterminal.getDCConductingEquipment().getMRID() + "\"/>\n";
		}
		if (dcterminal.getConnected() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.connected>";
			rdfXmlResource += dcterminal.getConnected().toString();
			rdfXmlResource += "</cim:ACDCTerminal.connected>\n";
		}
		if (dcterminal.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:ACDCTerminal.sequenceNumber>";
			rdfXmlResource += dcterminal.getSequenceNumber().toString();
			rdfXmlResource += "</cim:ACDCTerminal.sequenceNumber>\n";
		}
		if (dcterminal.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dcterminal.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dcterminal.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dcterminal.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dcterminal.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dcterminal.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dcterminal.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dcterminal.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dcterminal.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dcterminal.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dcterminal.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dcterminal.getRpnCondition() + "\"/>\n";
		}
		if (dcterminal.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dcterminal.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dcterminal.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dcterminal.getSchemeType() + "\"/>\n";
		}
		if (dcterminal.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dcterminal.getSeasonType() + "\"/>\n";
		}
		if (dcterminal.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dcterminal.getSubtaskNumber() + "\"/>\n";
		}
		if (dcterminal.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dcterminal.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dcterminal.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dcterminal.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dcterminal.getMRID() != null){
			rdfXmlResource += "\t</cim:DCTerminal>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.DCTopologicalIsland dctopologicalisland){
		String rdfXmlResource = "";
		if (dctopologicalisland.getMRID() != null){
			rdfXmlResource = "\t<cim:DCTopologicalIsland rdf:ID = \"_" + dctopologicalisland.getMRID() + "\">\n";
		}
		if (dctopologicalisland.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dctopologicalisland.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dctopologicalisland.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dctopologicalisland.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dctopologicalisland.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dctopologicalisland.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dctopologicalisland.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dctopologicalisland.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dctopologicalisland.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dctopologicalisland.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dctopologicalisland.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dctopologicalisland.getRpnCondition() + "\"/>\n";
		}
		if (dctopologicalisland.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dctopologicalisland.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dctopologicalisland.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dctopologicalisland.getSchemeType() + "\"/>\n";
		}
		if (dctopologicalisland.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dctopologicalisland.getSeasonType() + "\"/>\n";
		}
		if (dctopologicalisland.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dctopologicalisland.getSubtaskNumber() + "\"/>\n";
		}
		if (dctopologicalisland.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dctopologicalisland.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dctopologicalisland.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dctopologicalisland.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dctopologicalisland.getMRID() != null){
			rdfXmlResource += "\t</cim:DCTopologicalIsland>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.PerLengthDCLineParameter perlengthdclineparameter){
		String rdfXmlResource = "";
		if (perlengthdclineparameter.getMRID() != null){
			rdfXmlResource = "\t<cim:PerLengthDCLineParameter rdf:ID = \"_" + perlengthdclineparameter.getMRID() + "\">\n";
		}
		if (perlengthdclineparameter.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += perlengthdclineparameter.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (perlengthdclineparameter.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += perlengthdclineparameter.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (perlengthdclineparameter.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += perlengthdclineparameter.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (perlengthdclineparameter.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += perlengthdclineparameter.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (perlengthdclineparameter.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += perlengthdclineparameter.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (perlengthdclineparameter.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + perlengthdclineparameter.getRpnCondition() + "\"/>\n";
		}
		if (perlengthdclineparameter.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += perlengthdclineparameter.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (perlengthdclineparameter.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + perlengthdclineparameter.getSchemeType() + "\"/>\n";
		}
		if (perlengthdclineparameter.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + perlengthdclineparameter.getSeasonType() + "\"/>\n";
		}
		if (perlengthdclineparameter.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + perlengthdclineparameter.getSubtaskNumber() + "\"/>\n";
		}
		if (perlengthdclineparameter.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += perlengthdclineparameter.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (perlengthdclineparameter.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += perlengthdclineparameter.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (perlengthdclineparameter.getCapacitance() != null){
			rdfXmlResource += "\t\t<cim:PerLengthDCLineParameter.capacitance>";
			rdfXmlResource += perlengthdclineparameter.getCapacitance().getValue().toString();
			rdfXmlResource += "</cim:PerLengthDCLineParameter.capacitance>\n";
		}
		if (perlengthdclineparameter.getInductance() != null){
			rdfXmlResource += "\t\t<cim:PerLengthDCLineParameter.inductance>";
			rdfXmlResource += perlengthdclineparameter.getInductance().getValue().toString();
			rdfXmlResource += "</cim:PerLengthDCLineParameter.inductance>\n";
		}
		if (perlengthdclineparameter.getResistance() != null){
			rdfXmlResource += "\t\t<cim:PerLengthDCLineParameter.resistance>";
			rdfXmlResource += perlengthdclineparameter.getResistance().getValue().toString();
			rdfXmlResource += "</cim:PerLengthDCLineParameter.resistance>\n";
		}
		if (perlengthdclineparameter.getMRID() != null){
			rdfXmlResource += "\t</cim:PerLengthDCLineParameter>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.VsCapabilityCurve vscapabilitycurve){
		String rdfXmlResource = "";
		if (vscapabilitycurve.getMRID() != null){
			rdfXmlResource = "\t<cim:VsCapabilityCurve rdf:ID = \"_" + vscapabilitycurve.getMRID() + "\">\n";
		}
		if (vscapabilitycurve.getCurveStyle() != null){
			rdfXmlResource += "\t\t<cim:Curve.curveStyle rdf:resource=\"" + this.baseURI + "#CurveStyle." + vscapabilitycurve.getCurveStyle() + "\"/>\n";
		}
		if (vscapabilitycurve.getXMultiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.xMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + vscapabilitycurve.getXMultiplier() + "\"/>\n";
		}
		if (vscapabilitycurve.getXUnit() != null){
			rdfXmlResource += "\t\t<cim:Curve.xUnit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + vscapabilitycurve.getXUnit() + "\"/>\n";
		}
		if (vscapabilitycurve.getY1Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + vscapabilitycurve.getY1Multiplier() + "\"/>\n";
		}
		if (vscapabilitycurve.getY1Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + vscapabilitycurve.getY1Unit() + "\"/>\n";
		}
		if (vscapabilitycurve.getY2Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + vscapabilitycurve.getY2Multiplier() + "\"/>\n";
		}
		if (vscapabilitycurve.getY2Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + vscapabilitycurve.getY2Unit() + "\"/>\n";
		}
		if (vscapabilitycurve.getY3Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + vscapabilitycurve.getY3Multiplier() + "\"/>\n";
		}
		if (vscapabilitycurve.getY3Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + vscapabilitycurve.getY3Unit() + "\"/>\n";
		}
		if (vscapabilitycurve.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += vscapabilitycurve.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (vscapabilitycurve.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += vscapabilitycurve.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (vscapabilitycurve.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += vscapabilitycurve.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (vscapabilitycurve.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += vscapabilitycurve.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (vscapabilitycurve.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += vscapabilitycurve.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (vscapabilitycurve.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + vscapabilitycurve.getRpnCondition() + "\"/>\n";
		}
		if (vscapabilitycurve.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += vscapabilitycurve.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (vscapabilitycurve.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + vscapabilitycurve.getSchemeType() + "\"/>\n";
		}
		if (vscapabilitycurve.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + vscapabilitycurve.getSeasonType() + "\"/>\n";
		}
		if (vscapabilitycurve.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + vscapabilitycurve.getSubtaskNumber() + "\"/>\n";
		}
		if (vscapabilitycurve.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += vscapabilitycurve.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (vscapabilitycurve.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += vscapabilitycurve.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (vscapabilitycurve.getMRID() != null){
			rdfXmlResource += "\t</cim:VsCapabilityCurve>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC.VsConverter vsconverter){
		String rdfXmlResource = "";
		if (vsconverter.getMRID() != null){
			rdfXmlResource = "\t<cim:VsConverter rdf:ID = \"_" + vsconverter.getMRID() + "\">\n";
		}
		if (vsconverter.getPccTerminal() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.PccTerminal rdf:resource=\"#_" + vsconverter.getPccTerminal().getMRID() + "\"/>\n";
		}
		if (vsconverter.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + vsconverter.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (vsconverter.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + vsconverter.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (vsconverter.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + vsconverter.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (vsconverter.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + vsconverter.getSvStatus().getMRID() + "\"/>\n";
		}
		if (vsconverter.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: vsconverter.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (vsconverter.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + vsconverter.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (vsconverter.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + vsconverter.getAssets().getMRID() + "\"/>\n";
		}
		if (vsconverter.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + vsconverter.getLocation().getMRID() + "\"/>\n";
		}
		if (vsconverter.getCapabilityCurve() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.CapabilityCurve rdf:resource=\"#_" + vsconverter.getCapabilityCurve().getMRID() + "\"/>\n";
		}
		if (vsconverter.getBaseS() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.baseS>";
			rdfXmlResource += vsconverter.getBaseS().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.baseS>\n";
		}
		if (vsconverter.getIdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idc>";
			rdfXmlResource += vsconverter.getIdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idc>\n";
		}
		if (vsconverter.getIdleLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.idleLoss>";
			rdfXmlResource += vsconverter.getIdleLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.idleLoss>\n";
		}
		if (vsconverter.getMaxUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.maxUdc>";
			rdfXmlResource += vsconverter.getMaxUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.maxUdc>\n";
		}
		if (vsconverter.getMinUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.minUdc>";
			rdfXmlResource += vsconverter.getMinUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.minUdc>\n";
		}
		if (vsconverter.getNomUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.nomUdc>";
			rdfXmlResource += vsconverter.getNomUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.nomUdc>\n";
		}
		if (vsconverter.getNumberOfValves() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.numberOfValves>";
			rdfXmlResource += vsconverter.getNumberOfValves().toString();
			rdfXmlResource += "</cim:ACDCConverter.numberOfValves>\n";
		}
		if (vsconverter.getP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.p>";
			rdfXmlResource += vsconverter.getP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.p>\n";
		}
		if (vsconverter.getPoleLossP() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.poleLossP>";
			rdfXmlResource += vsconverter.getPoleLossP().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.poleLossP>\n";
		}
		if (vsconverter.getQ() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.q>";
			rdfXmlResource += vsconverter.getQ().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.q>\n";
		}
		if (vsconverter.getRatedUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.ratedUdc>";
			rdfXmlResource += vsconverter.getRatedUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.ratedUdc>\n";
		}
		if (vsconverter.getResistiveLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.resistiveLoss>";
			rdfXmlResource += vsconverter.getResistiveLoss().toString();
			rdfXmlResource += "</cim:ACDCConverter.resistiveLoss>\n";
		}
		if (vsconverter.getSwitchingLoss() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.switchingLoss>";
			rdfXmlResource += vsconverter.getSwitchingLoss().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.switchingLoss>\n";
		}
		if (vsconverter.getTargetPpcc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetPpcc>";
			rdfXmlResource += vsconverter.getTargetPpcc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetPpcc>\n";
		}
		if (vsconverter.getTargetUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.targetUdc>";
			rdfXmlResource += vsconverter.getTargetUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.targetUdc>\n";
		}
		if (vsconverter.getUc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.uc>";
			rdfXmlResource += vsconverter.getUc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.uc>\n";
		}
		if (vsconverter.getUdc() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.udc>";
			rdfXmlResource += vsconverter.getUdc().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.udc>\n";
		}
		if (vsconverter.getValveU0() != null){
			rdfXmlResource += "\t\t<cim:ACDCConverter.valveU0>";
			rdfXmlResource += vsconverter.getValveU0().getValue().toString();
			rdfXmlResource += "</cim:ACDCConverter.valveU0>\n";
		}
		if (vsconverter.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += vsconverter.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (vsconverter.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += vsconverter.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (vsconverter.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += vsconverter.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (vsconverter.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += vsconverter.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (vsconverter.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += vsconverter.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (vsconverter.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += vsconverter.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (vsconverter.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += vsconverter.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (vsconverter.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += vsconverter.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (vsconverter.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += vsconverter.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (vsconverter.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += vsconverter.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (vsconverter.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += vsconverter.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (vsconverter.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += vsconverter.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (vsconverter.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += vsconverter.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (vsconverter.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += vsconverter.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (vsconverter.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += vsconverter.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (vsconverter.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += vsconverter.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (vsconverter.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += vsconverter.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (vsconverter.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += vsconverter.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (vsconverter.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += vsconverter.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (vsconverter.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += vsconverter.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (vsconverter.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += vsconverter.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (vsconverter.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += vsconverter.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (vsconverter.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += vsconverter.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (vsconverter.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += vsconverter.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (vsconverter.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += vsconverter.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (vsconverter.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += vsconverter.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (vsconverter.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += vsconverter.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (vsconverter.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += vsconverter.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (vsconverter.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += vsconverter.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (vsconverter.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += vsconverter.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (vsconverter.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += vsconverter.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (vsconverter.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + vsconverter.getRpnCondition() + "\"/>\n";
		}
		if (vsconverter.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += vsconverter.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (vsconverter.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + vsconverter.getSchemeType() + "\"/>\n";
		}
		if (vsconverter.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + vsconverter.getSeasonType() + "\"/>\n";
		}
		if (vsconverter.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + vsconverter.getSubtaskNumber() + "\"/>\n";
		}
		if (vsconverter.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += vsconverter.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (vsconverter.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += vsconverter.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (vsconverter.getDelta() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.delta>";
			rdfXmlResource += vsconverter.getDelta().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.delta>\n";
		}
		if (vsconverter.getDroop() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.droop>";
			rdfXmlResource += vsconverter.getDroop().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.droop>\n";
		}
		if (vsconverter.getDroopCompensation() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.droopCompensation>";
			rdfXmlResource += vsconverter.getDroopCompensation().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.droopCompensation>\n";
		}
		if (vsconverter.getMaxModulationIndex() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.maxModulationIndex>";
			rdfXmlResource += vsconverter.getMaxModulationIndex().toString();
			rdfXmlResource += "</cim:VsConverter.maxModulationIndex>\n";
		}
		if (vsconverter.getMaxValveCurrent() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.maxValveCurrent>";
			rdfXmlResource += vsconverter.getMaxValveCurrent().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.maxValveCurrent>\n";
		}
		if (vsconverter.getPPccControl() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.pPccControl rdf:resource=\"" + this.baseURI + "#VsPpccControlKind." + vsconverter.getPPccControl() + "\"/>\n";
		}
		if (vsconverter.getQPccControl() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.qPccControl rdf:resource=\"" + this.baseURI + "#VsQpccControlKind." + vsconverter.getQPccControl() + "\"/>\n";
		}
		if (vsconverter.getQShare() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.qShare>";
			rdfXmlResource += vsconverter.getQShare().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.qShare>\n";
		}
		if (vsconverter.getTargetQpcc() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.targetQpcc>";
			rdfXmlResource += vsconverter.getTargetQpcc().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.targetQpcc>\n";
		}
		if (vsconverter.getTargetUpcc() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.targetUpcc>";
			rdfXmlResource += vsconverter.getTargetUpcc().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.targetUpcc>\n";
		}
		if (vsconverter.getUf() != null){
			rdfXmlResource += "\t\t<cim:VsConverter.uf>";
			rdfXmlResource += vsconverter.getUf().getValue().toString();
			rdfXmlResource += "</cim:VsConverter.uf>\n";
		}
		if (vsconverter.getMRID() != null){
			rdfXmlResource += "\t</cim:VsConverter>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.Diagram diagram){
		String rdfXmlResource = "";
		if (diagram.getMRID() != null){
			rdfXmlResource = "\t<cim:Diagram rdf:ID = \"_" + diagram.getMRID() + "\">\n";
		}
		if (diagram.getDiagramStyle() != null){
			rdfXmlResource += "\t\t<cim:Diagram.DiagramStyle rdf:resource=\"#_" + diagram.getDiagramStyle().getMRID() + "\"/>\n";
		}
		if (diagram.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += diagram.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (diagram.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += diagram.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (diagram.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += diagram.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (diagram.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += diagram.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (diagram.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += diagram.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (diagram.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + diagram.getRpnCondition() + "\"/>\n";
		}
		if (diagram.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += diagram.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (diagram.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + diagram.getSchemeType() + "\"/>\n";
		}
		if (diagram.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + diagram.getSeasonType() + "\"/>\n";
		}
		if (diagram.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + diagram.getSubtaskNumber() + "\"/>\n";
		}
		if (diagram.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += diagram.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (diagram.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += diagram.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (diagram.getOrientation() != null){
			rdfXmlResource += "\t\t<cim:Diagram.orientation rdf:resource=\"" + this.baseURI + "#OrientationKind." + diagram.getOrientation() + "\"/>\n";
		}
		if (diagram.getX1InitialView() != null){
			rdfXmlResource += "\t\t<cim:Diagram.x1InitialView>";
			rdfXmlResource += diagram.getX1InitialView().toString();
			rdfXmlResource += "</cim:Diagram.x1InitialView>\n";
		}
		if (diagram.getX2InitialView() != null){
			rdfXmlResource += "\t\t<cim:Diagram.x2InitialView>";
			rdfXmlResource += diagram.getX2InitialView().toString();
			rdfXmlResource += "</cim:Diagram.x2InitialView>\n";
		}
		if (diagram.getY1InitialView() != null){
			rdfXmlResource += "\t\t<cim:Diagram.y1InitialView>";
			rdfXmlResource += diagram.getY1InitialView().toString();
			rdfXmlResource += "</cim:Diagram.y1InitialView>\n";
		}
		if (diagram.getY2InitialView() != null){
			rdfXmlResource += "\t\t<cim:Diagram.y2InitialView>";
			rdfXmlResource += diagram.getY2InitialView().toString();
			rdfXmlResource += "</cim:Diagram.y2InitialView>\n";
		}
		if (diagram.getMRID() != null){
			rdfXmlResource += "\t</cim:Diagram>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObject diagramobject){
		String rdfXmlResource = "";
		if (diagramobject.getMRID() != null){
			rdfXmlResource = "\t<cim:DiagramObject rdf:ID = \"_" + diagramobject.getMRID() + "\">\n";
		}
		if (diagramobject.getIdentifiedObject() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.IdentifiedObject rdf:resource=\"#_" + diagramobject.getIdentifiedObject().getMRID() + "\"/>\n";
		}
		if (diagramobject.getDiagram() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.Diagram rdf:resource=\"#_" + diagramobject.getDiagram().getMRID() + "\"/>\n";
		}
		if (diagramobject.getDiagramObjectStyle() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.DiagramObjectStyle rdf:resource=\"#_" + diagramobject.getDiagramObjectStyle().getMRID() + "\"/>\n";
		}
		if (diagramobject.getVisibilityLayers() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject VisibilityLayer: diagramobject.getVisibilityLayers()){
				rdfXmlResource += "\t\t<cim:DiagramObject.VisibilityLayers rdf:resource=\"#_" + VisibilityLayer.getMRID() + "\"/>\n";
			}
		}
		if (diagramobject.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += diagramobject.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (diagramobject.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += diagramobject.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (diagramobject.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += diagramobject.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (diagramobject.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += diagramobject.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (diagramobject.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += diagramobject.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (diagramobject.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + diagramobject.getRpnCondition() + "\"/>\n";
		}
		if (diagramobject.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += diagramobject.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (diagramobject.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + diagramobject.getSchemeType() + "\"/>\n";
		}
		if (diagramobject.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + diagramobject.getSeasonType() + "\"/>\n";
		}
		if (diagramobject.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + diagramobject.getSubtaskNumber() + "\"/>\n";
		}
		if (diagramobject.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += diagramobject.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (diagramobject.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += diagramobject.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (diagramobject.getDrawingOrder() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.drawingOrder>";
			rdfXmlResource += diagramobject.getDrawingOrder().toString();
			rdfXmlResource += "</cim:DiagramObject.drawingOrder>\n";
		}
		if (diagramobject.getIsPolygon() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.isPolygon>";
			rdfXmlResource += diagramobject.getIsPolygon().toString();
			rdfXmlResource += "</cim:DiagramObject.isPolygon>\n";
		}
		if (diagramobject.getOffsetX() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.offsetX>";
			rdfXmlResource += diagramobject.getOffsetX().toString();
			rdfXmlResource += "</cim:DiagramObject.offsetX>\n";
		}
		if (diagramobject.getOffsetY() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.offsetY>";
			rdfXmlResource += diagramobject.getOffsetY().toString();
			rdfXmlResource += "</cim:DiagramObject.offsetY>\n";
		}
		if (diagramobject.getRotation() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.rotation>";
			rdfXmlResource += diagramobject.getRotation().getValue().toString();
			rdfXmlResource += "</cim:DiagramObject.rotation>\n";
		}
		if (diagramobject.getMRID() != null){
			rdfXmlResource += "\t</cim:DiagramObject>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectGluePoint diagramobjectgluepoint){
		String rdfXmlResource = "";
		if (diagramobjectgluepoint.getMRID() != null){
			rdfXmlResource = "\t<cim:DiagramObjectGluePoint rdf:ID = \"_" + diagramobjectgluepoint.getMRID() + "\">\n";
		}
		if (diagramobjectgluepoint.getMRID() != null){
			rdfXmlResource += "\t</cim:DiagramObjectGluePoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectPoint diagramobjectpoint){
		String rdfXmlResource = "";
		if (diagramobjectpoint.getMRID() != null){
			rdfXmlResource = "\t<cim:DiagramObjectPoint rdf:ID = \"_" + diagramobjectpoint.getMRID() + "\">\n";
		}
		if (diagramobjectpoint.getDiagramObject() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.DiagramObject rdf:resource=\"#_" + diagramobjectpoint.getDiagramObject().getMRID() + "\"/>\n";
		}
		if (diagramobjectpoint.getDiagramObjectGluePoint() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.DiagramObjectGluePoint rdf:resource=\"#_" + diagramobjectpoint.getDiagramObjectGluePoint().getMRID() + "\"/>\n";
		}
		if (diagramobjectpoint.getSequenceNumber() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.sequenceNumber>";
			rdfXmlResource += diagramobjectpoint.getSequenceNumber().toString();
			rdfXmlResource += "</cim:DiagramObjectPoint.sequenceNumber>\n";
		}
		if (diagramobjectpoint.getXPosition() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.xPosition>";
			rdfXmlResource += diagramobjectpoint.getXPosition().toString();
			rdfXmlResource += "</cim:DiagramObjectPoint.xPosition>\n";
		}
		if (diagramobjectpoint.getYPosition() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.yPosition>";
			rdfXmlResource += diagramobjectpoint.getYPosition().toString();
			rdfXmlResource += "</cim:DiagramObjectPoint.yPosition>\n";
		}
		if (diagramobjectpoint.getZPosition() != null){
			rdfXmlResource += "\t\t<cim:DiagramObjectPoint.zPosition>";
			rdfXmlResource += diagramobjectpoint.getZPosition().toString();
			rdfXmlResource += "</cim:DiagramObjectPoint.zPosition>\n";
		}
		if (diagramobjectpoint.getMRID() != null){
			rdfXmlResource += "\t</cim:DiagramObjectPoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramObjectStyle diagramobjectstyle){
		String rdfXmlResource = "";
		if (diagramobjectstyle.getMRID() != null){
			rdfXmlResource = "\t<cim:DiagramObjectStyle rdf:ID = \"_" + diagramobjectstyle.getMRID() + "\">\n";
		}
		if (diagramobjectstyle.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += diagramobjectstyle.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (diagramobjectstyle.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += diagramobjectstyle.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (diagramobjectstyle.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += diagramobjectstyle.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (diagramobjectstyle.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += diagramobjectstyle.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (diagramobjectstyle.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += diagramobjectstyle.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (diagramobjectstyle.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + diagramobjectstyle.getRpnCondition() + "\"/>\n";
		}
		if (diagramobjectstyle.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += diagramobjectstyle.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (diagramobjectstyle.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + diagramobjectstyle.getSchemeType() + "\"/>\n";
		}
		if (diagramobjectstyle.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + diagramobjectstyle.getSeasonType() + "\"/>\n";
		}
		if (diagramobjectstyle.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + diagramobjectstyle.getSubtaskNumber() + "\"/>\n";
		}
		if (diagramobjectstyle.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += diagramobjectstyle.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (diagramobjectstyle.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += diagramobjectstyle.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (diagramobjectstyle.getMRID() != null){
			rdfXmlResource += "\t</cim:DiagramObjectStyle>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.DiagramStyle diagramstyle){
		String rdfXmlResource = "";
		if (diagramstyle.getMRID() != null){
			rdfXmlResource = "\t<cim:DiagramStyle rdf:ID = \"_" + diagramstyle.getMRID() + "\">\n";
		}
		if (diagramstyle.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += diagramstyle.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (diagramstyle.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += diagramstyle.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (diagramstyle.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += diagramstyle.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (diagramstyle.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += diagramstyle.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (diagramstyle.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += diagramstyle.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (diagramstyle.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + diagramstyle.getRpnCondition() + "\"/>\n";
		}
		if (diagramstyle.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += diagramstyle.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (diagramstyle.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + diagramstyle.getSchemeType() + "\"/>\n";
		}
		if (diagramstyle.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + diagramstyle.getSeasonType() + "\"/>\n";
		}
		if (diagramstyle.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + diagramstyle.getSubtaskNumber() + "\"/>\n";
		}
		if (diagramstyle.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += diagramstyle.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (diagramstyle.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += diagramstyle.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (diagramstyle.getMRID() != null){
			rdfXmlResource += "\t</cim:DiagramStyle>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.TextDiagramObject textdiagramobject){
		String rdfXmlResource = "";
		if (textdiagramobject.getMRID() != null){
			rdfXmlResource = "\t<cim:TextDiagramObject rdf:ID = \"_" + textdiagramobject.getMRID() + "\">\n";
		}
		if (textdiagramobject.getIdentifiedObject() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.IdentifiedObject rdf:resource=\"#_" + textdiagramobject.getIdentifiedObject().getMRID() + "\"/>\n";
		}
		if (textdiagramobject.getDiagram() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.Diagram rdf:resource=\"#_" + textdiagramobject.getDiagram().getMRID() + "\"/>\n";
		}
		if (textdiagramobject.getDiagramObjectStyle() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.DiagramObjectStyle rdf:resource=\"#_" + textdiagramobject.getDiagramObjectStyle().getMRID() + "\"/>\n";
		}
		if (textdiagramobject.getVisibilityLayers() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject VisibilityLayer: textdiagramobject.getVisibilityLayers()){
				rdfXmlResource += "\t\t<cim:DiagramObject.VisibilityLayers rdf:resource=\"#_" + VisibilityLayer.getMRID() + "\"/>\n";
			}
		}
		if (textdiagramobject.getDrawingOrder() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.drawingOrder>";
			rdfXmlResource += textdiagramobject.getDrawingOrder().toString();
			rdfXmlResource += "</cim:DiagramObject.drawingOrder>\n";
		}
		if (textdiagramobject.getIsPolygon() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.isPolygon>";
			rdfXmlResource += textdiagramobject.getIsPolygon().toString();
			rdfXmlResource += "</cim:DiagramObject.isPolygon>\n";
		}
		if (textdiagramobject.getOffsetX() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.offsetX>";
			rdfXmlResource += textdiagramobject.getOffsetX().toString();
			rdfXmlResource += "</cim:DiagramObject.offsetX>\n";
		}
		if (textdiagramobject.getOffsetY() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.offsetY>";
			rdfXmlResource += textdiagramobject.getOffsetY().toString();
			rdfXmlResource += "</cim:DiagramObject.offsetY>\n";
		}
		if (textdiagramobject.getRotation() != null){
			rdfXmlResource += "\t\t<cim:DiagramObject.rotation>";
			rdfXmlResource += textdiagramobject.getRotation().getValue().toString();
			rdfXmlResource += "</cim:DiagramObject.rotation>\n";
		}
		if (textdiagramobject.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += textdiagramobject.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (textdiagramobject.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += textdiagramobject.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (textdiagramobject.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += textdiagramobject.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (textdiagramobject.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += textdiagramobject.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (textdiagramobject.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += textdiagramobject.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (textdiagramobject.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + textdiagramobject.getRpnCondition() + "\"/>\n";
		}
		if (textdiagramobject.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += textdiagramobject.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (textdiagramobject.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + textdiagramobject.getSchemeType() + "\"/>\n";
		}
		if (textdiagramobject.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + textdiagramobject.getSeasonType() + "\"/>\n";
		}
		if (textdiagramobject.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + textdiagramobject.getSubtaskNumber() + "\"/>\n";
		}
		if (textdiagramobject.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += textdiagramobject.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (textdiagramobject.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += textdiagramobject.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (textdiagramobject.getText() != null){
			rdfXmlResource += "\t\t<cim:TextDiagramObject.text>";
			rdfXmlResource += textdiagramobject.getText();
			rdfXmlResource += "</cim:TextDiagramObject.text>\n";
		}
		if (textdiagramobject.getMRID() != null){
			rdfXmlResource += "\t</cim:TextDiagramObject>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout.VisibilityLayer visibilitylayer){
		String rdfXmlResource = "";
		if (visibilitylayer.getMRID() != null){
			rdfXmlResource = "\t<cim:VisibilityLayer rdf:ID = \"_" + visibilitylayer.getMRID() + "\">\n";
		}
		if (visibilitylayer.getVisibleObjects() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject DiagramObject: visibilitylayer.getVisibleObjects()){
				rdfXmlResource += "\t\t<cim:VisibilityLayer.VisibleObjects rdf:resource=\"#_" + DiagramObject.getMRID() + "\"/>\n";
			}
		}
		if (visibilitylayer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += visibilitylayer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (visibilitylayer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += visibilitylayer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (visibilitylayer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += visibilitylayer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (visibilitylayer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += visibilitylayer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (visibilitylayer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += visibilitylayer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (visibilitylayer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + visibilitylayer.getRpnCondition() + "\"/>\n";
		}
		if (visibilitylayer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += visibilitylayer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (visibilitylayer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + visibilitylayer.getSchemeType() + "\"/>\n";
		}
		if (visibilitylayer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + visibilitylayer.getSeasonType() + "\"/>\n";
		}
		if (visibilitylayer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + visibilitylayer.getSubtaskNumber() + "\"/>\n";
		}
		if (visibilitylayer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += visibilitylayer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (visibilitylayer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += visibilitylayer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (visibilitylayer.getDrawingOrder() != null){
			rdfXmlResource += "\t\t<cim:VisibilityLayer.drawingOrder>";
			rdfXmlResource += visibilitylayer.getDrawingOrder().toString();
			rdfXmlResource += "</cim:VisibilityLayer.drawingOrder>\n";
		}
		if (visibilitylayer.getMRID() != null){
			rdfXmlResource += "\t</cim:VisibilityLayer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentBranch equivalentbranch){
		String rdfXmlResource = "";
		if (equivalentbranch.getMRID() != null){
			rdfXmlResource = "\t<cim:EquivalentBranch rdf:ID = \"_" + equivalentbranch.getMRID() + "\">\n";
		}
		if (equivalentbranch.getEquivalentNetwork() != null){
			rdfXmlResource += "\t\t<cim:EquivalentEquipment.EquivalentNetwork rdf:resource=\"#_" + equivalentbranch.getEquivalentNetwork().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + equivalentbranch.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + equivalentbranch.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + equivalentbranch.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + equivalentbranch.getSvStatus().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: equivalentbranch.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (equivalentbranch.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + equivalentbranch.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equivalentbranch.getAssets().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equivalentbranch.getLocation().getMRID() + "\"/>\n";
		}
		if (equivalentbranch.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += equivalentbranch.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (equivalentbranch.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += equivalentbranch.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (equivalentbranch.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += equivalentbranch.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (equivalentbranch.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += equivalentbranch.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (equivalentbranch.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += equivalentbranch.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (equivalentbranch.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += equivalentbranch.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (equivalentbranch.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += equivalentbranch.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (equivalentbranch.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += equivalentbranch.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (equivalentbranch.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += equivalentbranch.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (equivalentbranch.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += equivalentbranch.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (equivalentbranch.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += equivalentbranch.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (equivalentbranch.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equivalentbranch.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equivalentbranch.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equivalentbranch.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equivalentbranch.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equivalentbranch.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equivalentbranch.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equivalentbranch.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equivalentbranch.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equivalentbranch.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equivalentbranch.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equivalentbranch.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equivalentbranch.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equivalentbranch.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equivalentbranch.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equivalentbranch.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equivalentbranch.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equivalentbranch.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equivalentbranch.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equivalentbranch.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equivalentbranch.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equivalentbranch.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equivalentbranch.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equivalentbranch.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equivalentbranch.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equivalentbranch.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equivalentbranch.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equivalentbranch.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equivalentbranch.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equivalentbranch.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equivalentbranch.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equivalentbranch.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equivalentbranch.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equivalentbranch.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equivalentbranch.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equivalentbranch.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equivalentbranch.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equivalentbranch.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equivalentbranch.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equivalentbranch.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equivalentbranch.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equivalentbranch.getRpnCondition() + "\"/>\n";
		}
		if (equivalentbranch.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equivalentbranch.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equivalentbranch.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equivalentbranch.getSchemeType() + "\"/>\n";
		}
		if (equivalentbranch.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equivalentbranch.getSeasonType() + "\"/>\n";
		}
		if (equivalentbranch.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equivalentbranch.getSubtaskNumber() + "\"/>\n";
		}
		if (equivalentbranch.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equivalentbranch.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equivalentbranch.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equivalentbranch.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equivalentbranch.getNegativeR12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.negativeR12>";
			rdfXmlResource += equivalentbranch.getNegativeR12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.negativeR12>\n";
		}
		if (equivalentbranch.getNegativeR21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.negativeR21>";
			rdfXmlResource += equivalentbranch.getNegativeR21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.negativeR21>\n";
		}
		if (equivalentbranch.getNegativeX12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.negativeX12>";
			rdfXmlResource += equivalentbranch.getNegativeX12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.negativeX12>\n";
		}
		if (equivalentbranch.getNegativeX21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.negativeX21>";
			rdfXmlResource += equivalentbranch.getNegativeX21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.negativeX21>\n";
		}
		if (equivalentbranch.getPositiveR12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.positiveR12>";
			rdfXmlResource += equivalentbranch.getPositiveR12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.positiveR12>\n";
		}
		if (equivalentbranch.getPositiveR21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.positiveR21>";
			rdfXmlResource += equivalentbranch.getPositiveR21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.positiveR21>\n";
		}
		if (equivalentbranch.getPositiveX12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.positiveX12>";
			rdfXmlResource += equivalentbranch.getPositiveX12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.positiveX12>\n";
		}
		if (equivalentbranch.getPositiveX21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.positiveX21>";
			rdfXmlResource += equivalentbranch.getPositiveX21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.positiveX21>\n";
		}
		if (equivalentbranch.getR() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.r>";
			rdfXmlResource += equivalentbranch.getR().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.r>\n";
		}
		if (equivalentbranch.getR21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.r21>";
			rdfXmlResource += equivalentbranch.getR21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.r21>\n";
		}
		if (equivalentbranch.getX() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.x>";
			rdfXmlResource += equivalentbranch.getX().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.x>\n";
		}
		if (equivalentbranch.getX21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.x21>";
			rdfXmlResource += equivalentbranch.getX21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.x21>\n";
		}
		if (equivalentbranch.getZeroR12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.zeroR12>";
			rdfXmlResource += equivalentbranch.getZeroR12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.zeroR12>\n";
		}
		if (equivalentbranch.getZeroR21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.zeroR21>";
			rdfXmlResource += equivalentbranch.getZeroR21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.zeroR21>\n";
		}
		if (equivalentbranch.getZeroX12() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.zeroX12>";
			rdfXmlResource += equivalentbranch.getZeroX12().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.zeroX12>\n";
		}
		if (equivalentbranch.getZeroX21() != null){
			rdfXmlResource += "\t\t<cim:EquivalentBranch.zeroX21>";
			rdfXmlResource += equivalentbranch.getZeroX21().getValue().toString();
			rdfXmlResource += "</cim:EquivalentBranch.zeroX21>\n";
		}
		if (equivalentbranch.getMRID() != null){
			rdfXmlResource += "\t</cim:EquivalentBranch>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentEquipment equivalentequipment){
		String rdfXmlResource = "";
		if (equivalentequipment.getMRID() != null){
			rdfXmlResource = "\t<cim:EquivalentEquipment rdf:ID = \"_" + equivalentequipment.getMRID() + "\">\n";
		}
		if (equivalentequipment.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + equivalentequipment.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + equivalentequipment.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + equivalentequipment.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + equivalentequipment.getSvStatus().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: equivalentequipment.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (equivalentequipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + equivalentequipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equivalentequipment.getAssets().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equivalentequipment.getLocation().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getEquivalentNetwork() != null){
			rdfXmlResource += "\t\t<cim:EquivalentEquipment.EquivalentNetwork rdf:resource=\"#_" + equivalentequipment.getEquivalentNetwork().getMRID() + "\"/>\n";
		}
		if (equivalentequipment.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += equivalentequipment.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (equivalentequipment.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += equivalentequipment.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (equivalentequipment.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += equivalentequipment.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (equivalentequipment.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += equivalentequipment.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (equivalentequipment.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += equivalentequipment.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (equivalentequipment.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += equivalentequipment.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (equivalentequipment.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += equivalentequipment.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (equivalentequipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += equivalentequipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (equivalentequipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += equivalentequipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (equivalentequipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += equivalentequipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (equivalentequipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += equivalentequipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (equivalentequipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equivalentequipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equivalentequipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equivalentequipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equivalentequipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equivalentequipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equivalentequipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equivalentequipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equivalentequipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equivalentequipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equivalentequipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equivalentequipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equivalentequipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equivalentequipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equivalentequipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equivalentequipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equivalentequipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equivalentequipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equivalentequipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equivalentequipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equivalentequipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equivalentequipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equivalentequipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equivalentequipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equivalentequipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equivalentequipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equivalentequipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equivalentequipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equivalentequipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equivalentequipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equivalentequipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equivalentequipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equivalentequipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equivalentequipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equivalentequipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equivalentequipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equivalentequipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equivalentequipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equivalentequipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equivalentequipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equivalentequipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equivalentequipment.getRpnCondition() + "\"/>\n";
		}
		if (equivalentequipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equivalentequipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equivalentequipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equivalentequipment.getSchemeType() + "\"/>\n";
		}
		if (equivalentequipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equivalentequipment.getSeasonType() + "\"/>\n";
		}
		if (equivalentequipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equivalentequipment.getSubtaskNumber() + "\"/>\n";
		}
		if (equivalentequipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equivalentequipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equivalentequipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equivalentequipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equivalentequipment.getMRID() != null){
			rdfXmlResource += "\t</cim:EquivalentEquipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentInjection equivalentinjection){
		String rdfXmlResource = "";
		if (equivalentinjection.getMRID() != null){
			rdfXmlResource = "\t<cim:EquivalentInjection rdf:ID = \"_" + equivalentinjection.getMRID() + "\">\n";
		}
		if (equivalentinjection.getEquivalentNetwork() != null){
			rdfXmlResource += "\t\t<cim:EquivalentEquipment.EquivalentNetwork rdf:resource=\"#_" + equivalentinjection.getEquivalentNetwork().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + equivalentinjection.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + equivalentinjection.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + equivalentinjection.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + equivalentinjection.getSvStatus().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: equivalentinjection.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (equivalentinjection.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + equivalentinjection.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equivalentinjection.getAssets().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equivalentinjection.getLocation().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getReactiveCapabilityCurve() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.ReactiveCapabilityCurve rdf:resource=\"#_" + equivalentinjection.getReactiveCapabilityCurve().getMRID() + "\"/>\n";
		}
		if (equivalentinjection.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += equivalentinjection.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (equivalentinjection.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += equivalentinjection.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (equivalentinjection.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += equivalentinjection.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (equivalentinjection.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += equivalentinjection.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (equivalentinjection.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += equivalentinjection.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (equivalentinjection.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += equivalentinjection.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (equivalentinjection.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += equivalentinjection.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (equivalentinjection.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += equivalentinjection.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (equivalentinjection.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += equivalentinjection.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (equivalentinjection.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += equivalentinjection.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (equivalentinjection.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += equivalentinjection.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (equivalentinjection.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equivalentinjection.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equivalentinjection.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equivalentinjection.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equivalentinjection.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equivalentinjection.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equivalentinjection.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equivalentinjection.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equivalentinjection.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equivalentinjection.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equivalentinjection.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equivalentinjection.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equivalentinjection.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equivalentinjection.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equivalentinjection.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equivalentinjection.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equivalentinjection.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equivalentinjection.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equivalentinjection.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equivalentinjection.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equivalentinjection.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equivalentinjection.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equivalentinjection.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equivalentinjection.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equivalentinjection.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equivalentinjection.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equivalentinjection.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equivalentinjection.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equivalentinjection.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equivalentinjection.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equivalentinjection.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equivalentinjection.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equivalentinjection.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equivalentinjection.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equivalentinjection.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equivalentinjection.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equivalentinjection.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equivalentinjection.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equivalentinjection.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equivalentinjection.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equivalentinjection.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equivalentinjection.getRpnCondition() + "\"/>\n";
		}
		if (equivalentinjection.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equivalentinjection.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equivalentinjection.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equivalentinjection.getSchemeType() + "\"/>\n";
		}
		if (equivalentinjection.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equivalentinjection.getSeasonType() + "\"/>\n";
		}
		if (equivalentinjection.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equivalentinjection.getSubtaskNumber() + "\"/>\n";
		}
		if (equivalentinjection.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equivalentinjection.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equivalentinjection.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equivalentinjection.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equivalentinjection.getMaxP() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.maxP>";
			rdfXmlResource += equivalentinjection.getMaxP().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.maxP>\n";
		}
		if (equivalentinjection.getMaxQ() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.maxQ>";
			rdfXmlResource += equivalentinjection.getMaxQ().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.maxQ>\n";
		}
		if (equivalentinjection.getMinP() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.minP>";
			rdfXmlResource += equivalentinjection.getMinP().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.minP>\n";
		}
		if (equivalentinjection.getMinQ() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.minQ>";
			rdfXmlResource += equivalentinjection.getMinQ().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.minQ>\n";
		}
		if (equivalentinjection.getP() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.p>";
			rdfXmlResource += equivalentinjection.getP().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.p>\n";
		}
		if (equivalentinjection.getQ() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.q>";
			rdfXmlResource += equivalentinjection.getQ().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.q>\n";
		}
		if (equivalentinjection.getR() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.r>";
			rdfXmlResource += equivalentinjection.getR().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.r>\n";
		}
		if (equivalentinjection.getR0() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.r0>";
			rdfXmlResource += equivalentinjection.getR0().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.r0>\n";
		}
		if (equivalentinjection.getR2() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.r2>";
			rdfXmlResource += equivalentinjection.getR2().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.r2>\n";
		}
		if (equivalentinjection.getRegulationCapability() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.regulationCapability>";
			rdfXmlResource += equivalentinjection.getRegulationCapability().toString();
			rdfXmlResource += "</cim:EquivalentInjection.regulationCapability>\n";
		}
		if (equivalentinjection.getRegulationStatus() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.regulationStatus>";
			rdfXmlResource += equivalentinjection.getRegulationStatus().toString();
			rdfXmlResource += "</cim:EquivalentInjection.regulationStatus>\n";
		}
		if (equivalentinjection.getRegulationTarget() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.regulationTarget>";
			rdfXmlResource += equivalentinjection.getRegulationTarget().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.regulationTarget>\n";
		}
		if (equivalentinjection.getX() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.x>";
			rdfXmlResource += equivalentinjection.getX().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.x>\n";
		}
		if (equivalentinjection.getX0() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.x0>";
			rdfXmlResource += equivalentinjection.getX0().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.x0>\n";
		}
		if (equivalentinjection.getX2() != null){
			rdfXmlResource += "\t\t<cim:EquivalentInjection.x2>";
			rdfXmlResource += equivalentinjection.getX2().getValue().toString();
			rdfXmlResource += "</cim:EquivalentInjection.x2>\n";
		}
		if (equivalentinjection.getMRID() != null){
			rdfXmlResource += "\t</cim:EquivalentInjection>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentNetwork equivalentnetwork){
		String rdfXmlResource = "";
		if (equivalentnetwork.getMRID() != null){
			rdfXmlResource = "\t<cim:EquivalentNetwork rdf:ID = \"_" + equivalentnetwork.getMRID() + "\">\n";
		}
		if (equivalentnetwork.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equivalentnetwork.getAssets().getMRID() + "\"/>\n";
		}
		if (equivalentnetwork.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equivalentnetwork.getLocation().getMRID() + "\"/>\n";
		}
		if (equivalentnetwork.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equivalentnetwork.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equivalentnetwork.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equivalentnetwork.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equivalentnetwork.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equivalentnetwork.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equivalentnetwork.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equivalentnetwork.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equivalentnetwork.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equivalentnetwork.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equivalentnetwork.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equivalentnetwork.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equivalentnetwork.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equivalentnetwork.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equivalentnetwork.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equivalentnetwork.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equivalentnetwork.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equivalentnetwork.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equivalentnetwork.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equivalentnetwork.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equivalentnetwork.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equivalentnetwork.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equivalentnetwork.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equivalentnetwork.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equivalentnetwork.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equivalentnetwork.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equivalentnetwork.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equivalentnetwork.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equivalentnetwork.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equivalentnetwork.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equivalentnetwork.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equivalentnetwork.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equivalentnetwork.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equivalentnetwork.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equivalentnetwork.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equivalentnetwork.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equivalentnetwork.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equivalentnetwork.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equivalentnetwork.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equivalentnetwork.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equivalentnetwork.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equivalentnetwork.getRpnCondition() + "\"/>\n";
		}
		if (equivalentnetwork.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equivalentnetwork.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equivalentnetwork.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equivalentnetwork.getSchemeType() + "\"/>\n";
		}
		if (equivalentnetwork.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equivalentnetwork.getSeasonType() + "\"/>\n";
		}
		if (equivalentnetwork.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equivalentnetwork.getSubtaskNumber() + "\"/>\n";
		}
		if (equivalentnetwork.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equivalentnetwork.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equivalentnetwork.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equivalentnetwork.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equivalentnetwork.getMRID() != null){
			rdfXmlResource += "\t</cim:EquivalentNetwork>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentShunt equivalentshunt){
		String rdfXmlResource = "";
		if (equivalentshunt.getMRID() != null){
			rdfXmlResource = "\t<cim:EquivalentShunt rdf:ID = \"_" + equivalentshunt.getMRID() + "\">\n";
		}
		if (equivalentshunt.getEquivalentNetwork() != null){
			rdfXmlResource += "\t\t<cim:EquivalentEquipment.EquivalentNetwork rdf:resource=\"#_" + equivalentshunt.getEquivalentNetwork().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + equivalentshunt.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + equivalentshunt.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + equivalentshunt.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + equivalentshunt.getSvStatus().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: equivalentshunt.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (equivalentshunt.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + equivalentshunt.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + equivalentshunt.getAssets().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + equivalentshunt.getLocation().getMRID() + "\"/>\n";
		}
		if (equivalentshunt.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += equivalentshunt.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (equivalentshunt.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += equivalentshunt.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (equivalentshunt.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += equivalentshunt.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (equivalentshunt.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += equivalentshunt.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (equivalentshunt.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += equivalentshunt.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (equivalentshunt.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += equivalentshunt.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (equivalentshunt.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += equivalentshunt.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (equivalentshunt.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += equivalentshunt.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (equivalentshunt.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += equivalentshunt.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (equivalentshunt.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += equivalentshunt.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (equivalentshunt.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += equivalentshunt.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (equivalentshunt.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += equivalentshunt.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (equivalentshunt.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += equivalentshunt.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (equivalentshunt.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += equivalentshunt.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (equivalentshunt.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += equivalentshunt.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (equivalentshunt.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += equivalentshunt.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (equivalentshunt.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += equivalentshunt.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (equivalentshunt.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += equivalentshunt.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (equivalentshunt.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += equivalentshunt.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (equivalentshunt.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += equivalentshunt.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (equivalentshunt.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += equivalentshunt.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (equivalentshunt.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += equivalentshunt.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (equivalentshunt.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += equivalentshunt.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (equivalentshunt.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += equivalentshunt.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (equivalentshunt.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += equivalentshunt.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (equivalentshunt.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += equivalentshunt.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (equivalentshunt.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equivalentshunt.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equivalentshunt.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equivalentshunt.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equivalentshunt.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equivalentshunt.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equivalentshunt.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equivalentshunt.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equivalentshunt.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equivalentshunt.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equivalentshunt.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equivalentshunt.getRpnCondition() + "\"/>\n";
		}
		if (equivalentshunt.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equivalentshunt.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equivalentshunt.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equivalentshunt.getSchemeType() + "\"/>\n";
		}
		if (equivalentshunt.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equivalentshunt.getSeasonType() + "\"/>\n";
		}
		if (equivalentshunt.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equivalentshunt.getSubtaskNumber() + "\"/>\n";
		}
		if (equivalentshunt.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equivalentshunt.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equivalentshunt.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equivalentshunt.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equivalentshunt.getB() != null){
			rdfXmlResource += "\t\t<cim:EquivalentShunt.b>";
			rdfXmlResource += equivalentshunt.getB().getValue().toString();
			rdfXmlResource += "</cim:EquivalentShunt.b>\n";
		}
		if (equivalentshunt.getG() != null){
			rdfXmlResource += "\t\t<cim:EquivalentShunt.g>";
			rdfXmlResource += equivalentshunt.getG().getValue().toString();
			rdfXmlResource += "</cim:EquivalentShunt.g>\n";
		}
		if (equivalentshunt.getMRID() != null){
			rdfXmlResource += "\t</cim:EquivalentShunt>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.EquipmentFault equipmentfault){
		String rdfXmlResource = "";
		if (equipmentfault.getMRID() != null){
			rdfXmlResource = "\t<cim:EquipmentFault rdf:ID = \"_" + equipmentfault.getMRID() + "\">\n";
		}
		if (equipmentfault.getOutage() != null){
			rdfXmlResource += "\t\t<cim:Fault.Outage rdf:resource=\"#_" + equipmentfault.getOutage().getMRID() + "\"/>\n";
		}
		if (equipmentfault.getFaultyEquipment() != null){
			rdfXmlResource += "\t\t<cim:Fault.FaultyEquipment rdf:resource=\"#_" + equipmentfault.getFaultyEquipment().getMRID() + "\"/>\n";
		}
		if (equipmentfault.getFaultCauseTypes() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject FaultCauseType: equipmentfault.getFaultCauseTypes()){
				rdfXmlResource += "\t\t<cim:Fault.FaultCauseTypes rdf:resource=\"#_" + FaultCauseType.getMRID() + "\"/>\n";
			}
		}
		if (equipmentfault.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:EquipmentFault.Terminal rdf:resource=\"#_" + equipmentfault.getTerminal().getMRID() + "\"/>\n";
		}
		if (equipmentfault.getImpedance() != null){
			rdfXmlResource += "\t\t<cim:Fault.impedance>\n";
			rdfXmlResource += "\t\t\t<cim:FaultImpedance>\n";
			if (equipmentfault.getImpedance().getRGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rGround>";
				rdfXmlResource += equipmentfault.getImpedance().getRGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rGround>\n";
			}
			if (equipmentfault.getImpedance().getRLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rLineToLine>";
				rdfXmlResource += equipmentfault.getImpedance().getRLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rLineToLine>\n";
			}
			if (equipmentfault.getImpedance().getXGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xGround>";
				rdfXmlResource += equipmentfault.getImpedance().getXGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xGround>\n";
			}
			if (equipmentfault.getImpedance().getXLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xLineToLine>";
				rdfXmlResource += equipmentfault.getImpedance().getXLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xLineToLine>\n";
			}
			rdfXmlResource += "\t\t\t</cim:FaultImpedance>\n";
			rdfXmlResource += "\t\t</cim:Fault.impedance>\n";
		}
		if (equipmentfault.getKind() != null){
			rdfXmlResource += "\t\t<cim:Fault.kind rdf:resource=\"" + this.baseURI + "#PhaseConnectedFaultKind." + equipmentfault.getKind() + "\"/>\n";
		}
		if (equipmentfault.getPhases() != null){
			rdfXmlResource += "\t\t<cim:Fault.phases rdf:resource=\"" + this.baseURI + "#PhaseCode." + equipmentfault.getPhases() + "\"/>\n";
		}
		if (equipmentfault.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += equipmentfault.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (equipmentfault.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += equipmentfault.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (equipmentfault.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += equipmentfault.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (equipmentfault.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += equipmentfault.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (equipmentfault.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += equipmentfault.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (equipmentfault.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + equipmentfault.getRpnCondition() + "\"/>\n";
		}
		if (equipmentfault.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += equipmentfault.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (equipmentfault.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + equipmentfault.getSchemeType() + "\"/>\n";
		}
		if (equipmentfault.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + equipmentfault.getSeasonType() + "\"/>\n";
		}
		if (equipmentfault.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + equipmentfault.getSubtaskNumber() + "\"/>\n";
		}
		if (equipmentfault.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += equipmentfault.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (equipmentfault.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += equipmentfault.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (equipmentfault.getCurrentAngle() != null){
			rdfXmlResource += "\t\t<nti:EquipmentFault.currentAngle>";
			rdfXmlResource += equipmentfault.getCurrentAngle().getValue().toString();
			rdfXmlResource += "</nti:EquipmentFault.currentAngle>\n";
		}
		if (equipmentfault.getCurrentValue() != null){
			rdfXmlResource += "\t\t<nti:EquipmentFault.currentValue>";
			rdfXmlResource += equipmentfault.getCurrentValue().getValue().toString();
			rdfXmlResource += "</nti:EquipmentFault.currentValue>\n";
		}
		if (equipmentfault.getRastrCurrentAngle() != null){
			rdfXmlResource += "\t\t<nti:EquipmentFault.rastrCurrentAngle>";
			rdfXmlResource += equipmentfault.getRastrCurrentAngle().getValue().toString();
			rdfXmlResource += "</nti:EquipmentFault.rastrCurrentAngle>\n";
		}
		if (equipmentfault.getRastrCurrentValue() != null){
			rdfXmlResource += "\t\t<nti:EquipmentFault.rastrCurrentValue>";
			rdfXmlResource += equipmentfault.getRastrCurrentValue().getValue().toString();
			rdfXmlResource += "</nti:EquipmentFault.rastrCurrentValue>\n";
		}
		if (equipmentfault.getMRID() != null){
			rdfXmlResource += "\t</cim:EquipmentFault>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.Fault fault){
		String rdfXmlResource = "";
		if (fault.getMRID() != null){
			rdfXmlResource = "\t<cim:Fault rdf:ID = \"_" + fault.getMRID() + "\">\n";
		}
		if (fault.getOutage() != null){
			rdfXmlResource += "\t\t<cim:Fault.Outage rdf:resource=\"#_" + fault.getOutage().getMRID() + "\"/>\n";
		}
		if (fault.getFaultyEquipment() != null){
			rdfXmlResource += "\t\t<cim:Fault.FaultyEquipment rdf:resource=\"#_" + fault.getFaultyEquipment().getMRID() + "\"/>\n";
		}
		if (fault.getFaultCauseTypes() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject FaultCauseType: fault.getFaultCauseTypes()){
				rdfXmlResource += "\t\t<cim:Fault.FaultCauseTypes rdf:resource=\"#_" + FaultCauseType.getMRID() + "\"/>\n";
			}
		}
		if (fault.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += fault.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (fault.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += fault.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (fault.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += fault.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (fault.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += fault.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (fault.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += fault.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (fault.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + fault.getRpnCondition() + "\"/>\n";
		}
		if (fault.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += fault.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (fault.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + fault.getSchemeType() + "\"/>\n";
		}
		if (fault.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + fault.getSeasonType() + "\"/>\n";
		}
		if (fault.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + fault.getSubtaskNumber() + "\"/>\n";
		}
		if (fault.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += fault.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (fault.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += fault.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (fault.getImpedance() != null){
			rdfXmlResource += "\t\t<cim:Fault.impedance>\n";
			rdfXmlResource += "\t\t\t<cim:FaultImpedance>\n";
			if (fault.getImpedance().getRGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rGround>";
				rdfXmlResource += fault.getImpedance().getRGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rGround>\n";
			}
			if (fault.getImpedance().getRLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rLineToLine>";
				rdfXmlResource += fault.getImpedance().getRLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rLineToLine>\n";
			}
			if (fault.getImpedance().getXGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xGround>";
				rdfXmlResource += fault.getImpedance().getXGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xGround>\n";
			}
			if (fault.getImpedance().getXLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xLineToLine>";
				rdfXmlResource += fault.getImpedance().getXLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xLineToLine>\n";
			}
			rdfXmlResource += "\t\t\t</cim:FaultImpedance>\n";
			rdfXmlResource += "\t\t</cim:Fault.impedance>\n";
		}
		if (fault.getKind() != null){
			rdfXmlResource += "\t\t<cim:Fault.kind rdf:resource=\"" + this.baseURI + "#PhaseConnectedFaultKind." + fault.getKind() + "\"/>\n";
		}
		if (fault.getPhases() != null){
			rdfXmlResource += "\t\t<cim:Fault.phases rdf:resource=\"" + this.baseURI + "#PhaseCode." + fault.getPhases() + "\"/>\n";
		}
		if (fault.getMRID() != null){
			rdfXmlResource += "\t</cim:Fault>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.FaultCauseType faultcausetype){
		String rdfXmlResource = "";
		if (faultcausetype.getMRID() != null){
			rdfXmlResource = "\t<cim:FaultCauseType rdf:ID = \"_" + faultcausetype.getMRID() + "\">\n";
		}
		if (faultcausetype.getFaults() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Fault: faultcausetype.getFaults()){
				rdfXmlResource += "\t\t<cim:FaultCauseType.Faults rdf:resource=\"#_" + Fault.getMRID() + "\"/>\n";
			}
		}
		if (faultcausetype.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += faultcausetype.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (faultcausetype.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += faultcausetype.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (faultcausetype.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += faultcausetype.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (faultcausetype.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += faultcausetype.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (faultcausetype.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += faultcausetype.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (faultcausetype.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + faultcausetype.getRpnCondition() + "\"/>\n";
		}
		if (faultcausetype.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += faultcausetype.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (faultcausetype.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + faultcausetype.getSchemeType() + "\"/>\n";
		}
		if (faultcausetype.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + faultcausetype.getSeasonType() + "\"/>\n";
		}
		if (faultcausetype.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + faultcausetype.getSubtaskNumber() + "\"/>\n";
		}
		if (faultcausetype.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += faultcausetype.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (faultcausetype.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += faultcausetype.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (faultcausetype.getMRID() != null){
			rdfXmlResource += "\t</cim:FaultCauseType>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Faults.LineFault linefault){
		String rdfXmlResource = "";
		if (linefault.getMRID() != null){
			rdfXmlResource = "\t<cim:LineFault rdf:ID = \"_" + linefault.getMRID() + "\">\n";
		}
		if (linefault.getOutage() != null){
			rdfXmlResource += "\t\t<cim:Fault.Outage rdf:resource=\"#_" + linefault.getOutage().getMRID() + "\"/>\n";
		}
		if (linefault.getFaultyEquipment() != null){
			rdfXmlResource += "\t\t<cim:Fault.FaultyEquipment rdf:resource=\"#_" + linefault.getFaultyEquipment().getMRID() + "\"/>\n";
		}
		if (linefault.getFaultCauseTypes() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject FaultCauseType: linefault.getFaultCauseTypes()){
				rdfXmlResource += "\t\t<cim:Fault.FaultCauseTypes rdf:resource=\"#_" + FaultCauseType.getMRID() + "\"/>\n";
			}
		}
		if (linefault.getACLineSegment() != null){
			rdfXmlResource += "\t\t<cim:LineFault.ACLineSegment rdf:resource=\"#_" + linefault.getACLineSegment().getMRID() + "\"/>\n";
		}
		if (linefault.getImpedance() != null){
			rdfXmlResource += "\t\t<cim:Fault.impedance>\n";
			rdfXmlResource += "\t\t\t<cim:FaultImpedance>\n";
			if (linefault.getImpedance().getRGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rGround>";
				rdfXmlResource += linefault.getImpedance().getRGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rGround>\n";
			}
			if (linefault.getImpedance().getRLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.rLineToLine>";
				rdfXmlResource += linefault.getImpedance().getRLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.rLineToLine>\n";
			}
			if (linefault.getImpedance().getXGround() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xGround>";
				rdfXmlResource += linefault.getImpedance().getXGround().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xGround>\n";
			}
			if (linefault.getImpedance().getXLineToLine() != null){
				rdfXmlResource += "\t\t\t\t<cim:FaultImpedance.xLineToLine>";
				rdfXmlResource += linefault.getImpedance().getXLineToLine().getValue().toString();
				rdfXmlResource += "</cim:FaultImpedance.xLineToLine>\n";
			}
			rdfXmlResource += "\t\t\t</cim:FaultImpedance>\n";
			rdfXmlResource += "\t\t</cim:Fault.impedance>\n";
		}
		if (linefault.getKind() != null){
			rdfXmlResource += "\t\t<cim:Fault.kind rdf:resource=\"" + this.baseURI + "#PhaseConnectedFaultKind." + linefault.getKind() + "\"/>\n";
		}
		if (linefault.getPhases() != null){
			rdfXmlResource += "\t\t<cim:Fault.phases rdf:resource=\"" + this.baseURI + "#PhaseCode." + linefault.getPhases() + "\"/>\n";
		}
		if (linefault.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += linefault.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (linefault.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += linefault.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (linefault.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += linefault.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (linefault.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += linefault.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (linefault.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += linefault.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (linefault.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + linefault.getRpnCondition() + "\"/>\n";
		}
		if (linefault.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += linefault.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (linefault.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + linefault.getSchemeType() + "\"/>\n";
		}
		if (linefault.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + linefault.getSeasonType() + "\"/>\n";
		}
		if (linefault.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + linefault.getSubtaskNumber() + "\"/>\n";
		}
		if (linefault.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += linefault.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (linefault.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += linefault.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (linefault.getLengthFromTerminal1() != null){
			rdfXmlResource += "\t\t<cim:LineFault.lengthFromTerminal1>";
			rdfXmlResource += linefault.getLengthFromTerminal1().getValue().toString();
			rdfXmlResource += "</cim:LineFault.lengthFromTerminal1>\n";
		}
		if (linefault.getMRID() != null){
			rdfXmlResource += "\t</cim:LineFault>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.FossilFuel fossilfuel){
		String rdfXmlResource = "";
		if (fossilfuel.getMRID() != null){
			rdfXmlResource = "\t<cim:FossilFuel rdf:ID = \"_" + fossilfuel.getMRID() + "\">\n";
		}
		if (fossilfuel.getThermalGeneratingUnit() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.ThermalGeneratingUnit rdf:resource=\"#_" + fossilfuel.getThermalGeneratingUnit().getMRID() + "\"/>\n";
		}
		if (fossilfuel.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += fossilfuel.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (fossilfuel.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += fossilfuel.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (fossilfuel.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += fossilfuel.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (fossilfuel.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += fossilfuel.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (fossilfuel.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += fossilfuel.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (fossilfuel.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + fossilfuel.getRpnCondition() + "\"/>\n";
		}
		if (fossilfuel.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += fossilfuel.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (fossilfuel.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + fossilfuel.getSchemeType() + "\"/>\n";
		}
		if (fossilfuel.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + fossilfuel.getSeasonType() + "\"/>\n";
		}
		if (fossilfuel.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + fossilfuel.getSubtaskNumber() + "\"/>\n";
		}
		if (fossilfuel.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += fossilfuel.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (fossilfuel.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += fossilfuel.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (fossilfuel.getFossilFuelType() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fossilFuelType rdf:resource=\"" + this.baseURI + "#FuelType." + fossilfuel.getFossilFuelType() + "\"/>\n";
		}
		if (fossilfuel.getFuelCost() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelCost>";
			rdfXmlResource += fossilfuel.getFuelCost().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelCost>\n";
		}
		if (fossilfuel.getFuelDispatchCost() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelDispatchCost>";
			rdfXmlResource += fossilfuel.getFuelDispatchCost().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelDispatchCost>\n";
		}
		if (fossilfuel.getFuelEffFactor() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelEffFactor>";
			rdfXmlResource += fossilfuel.getFuelEffFactor().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelEffFactor>\n";
		}
		if (fossilfuel.getFuelHandlingCost() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelHandlingCost>";
			rdfXmlResource += fossilfuel.getFuelHandlingCost().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelHandlingCost>\n";
		}
		if (fossilfuel.getFuelHeatContent() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelHeatContent>";
			rdfXmlResource += fossilfuel.getFuelHeatContent().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelHeatContent>\n";
		}
		if (fossilfuel.getFuelMixture() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelMixture>";
			rdfXmlResource += fossilfuel.getFuelMixture().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelMixture>\n";
		}
		if (fossilfuel.getFuelSulfur() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.fuelSulfur>";
			rdfXmlResource += fossilfuel.getFuelSulfur().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.fuelSulfur>\n";
		}
		if (fossilfuel.getHighBreakpointP() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.highBreakpointP>";
			rdfXmlResource += fossilfuel.getHighBreakpointP().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.highBreakpointP>\n";
		}
		if (fossilfuel.getLowBreakpointP() != null){
			rdfXmlResource += "\t\t<cim:FossilFuel.lowBreakpointP>";
			rdfXmlResource += fossilfuel.getLowBreakpointP().getValue().toString();
			rdfXmlResource += "</cim:FossilFuel.lowBreakpointP>\n";
		}
		if (fossilfuel.getMRID() != null){
			rdfXmlResource += "\t</cim:FossilFuel>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.GeneratingUnit generatingunit){
		String rdfXmlResource = "";
		if (generatingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:GeneratingUnit rdf:ID = \"_" + generatingunit.getMRID() + "\">\n";
		}
		if (generatingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + generatingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (generatingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + generatingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (generatingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + generatingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (generatingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += generatingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (generatingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += generatingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (generatingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += generatingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (generatingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += generatingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (generatingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += generatingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (generatingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += generatingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (generatingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += generatingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (generatingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += generatingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (generatingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += generatingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (generatingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += generatingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (generatingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += generatingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (generatingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += generatingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (generatingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += generatingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (generatingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += generatingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (generatingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += generatingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (generatingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += generatingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (generatingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += generatingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (generatingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += generatingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (generatingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += generatingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (generatingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += generatingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (generatingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += generatingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (generatingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += generatingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (generatingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += generatingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (generatingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += generatingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (generatingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + generatingunit.getRpnCondition() + "\"/>\n";
		}
		if (generatingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += generatingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (generatingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + generatingunit.getSchemeType() + "\"/>\n";
		}
		if (generatingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + generatingunit.getSeasonType() + "\"/>\n";
		}
		if (generatingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + generatingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (generatingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += generatingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (generatingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += generatingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (generatingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += generatingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (generatingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += generatingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (generatingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += generatingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (generatingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += generatingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (generatingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += generatingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (generatingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += generatingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (generatingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += generatingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (generatingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += generatingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (generatingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + generatingunit.getGenControlMode() + "\"/>\n";
		}
		if (generatingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + generatingunit.getGenControlSource() + "\"/>\n";
		}
		if (generatingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += generatingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (generatingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += generatingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (generatingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += generatingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (generatingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += generatingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (generatingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += generatingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (generatingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += generatingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (generatingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += generatingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (generatingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += generatingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (generatingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += generatingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (generatingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += generatingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (generatingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += generatingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (generatingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += generatingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (generatingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += generatingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (generatingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += generatingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (generatingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += generatingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (generatingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += generatingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (generatingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += generatingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (generatingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += generatingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (generatingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += generatingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (generatingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += generatingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (generatingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += generatingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (generatingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += generatingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (generatingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += generatingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (generatingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += generatingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (generatingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += generatingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (generatingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += generatingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (generatingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += generatingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (generatingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:GeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroGeneratingUnit hydrogeneratingunit){
		String rdfXmlResource = "";
		if (hydrogeneratingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:HydroGeneratingUnit rdf:ID = \"_" + hydrogeneratingunit.getMRID() + "\">\n";
		}
		if (hydrogeneratingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + hydrogeneratingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (hydrogeneratingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + hydrogeneratingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (hydrogeneratingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + hydrogeneratingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (hydrogeneratingunit.getHydroPowerPlant() != null){
			rdfXmlResource += "\t\t<cim:HydroGeneratingUnit.HydroPowerPlant rdf:resource=\"#_" + hydrogeneratingunit.getHydroPowerPlant().getMRID() + "\"/>\n";
		}
		if (hydrogeneratingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += hydrogeneratingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (hydrogeneratingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += hydrogeneratingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (hydrogeneratingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += hydrogeneratingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (hydrogeneratingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += hydrogeneratingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (hydrogeneratingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += hydrogeneratingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (hydrogeneratingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += hydrogeneratingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (hydrogeneratingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += hydrogeneratingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (hydrogeneratingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += hydrogeneratingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (hydrogeneratingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + hydrogeneratingunit.getGenControlMode() + "\"/>\n";
		}
		if (hydrogeneratingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + hydrogeneratingunit.getGenControlSource() + "\"/>\n";
		}
		if (hydrogeneratingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += hydrogeneratingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (hydrogeneratingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += hydrogeneratingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (hydrogeneratingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += hydrogeneratingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (hydrogeneratingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += hydrogeneratingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (hydrogeneratingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += hydrogeneratingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (hydrogeneratingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += hydrogeneratingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (hydrogeneratingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += hydrogeneratingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (hydrogeneratingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += hydrogeneratingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (hydrogeneratingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += hydrogeneratingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (hydrogeneratingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += hydrogeneratingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (hydrogeneratingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += hydrogeneratingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (hydrogeneratingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += hydrogeneratingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (hydrogeneratingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += hydrogeneratingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (hydrogeneratingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += hydrogeneratingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (hydrogeneratingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += hydrogeneratingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (hydrogeneratingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += hydrogeneratingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (hydrogeneratingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += hydrogeneratingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (hydrogeneratingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += hydrogeneratingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (hydrogeneratingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += hydrogeneratingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (hydrogeneratingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += hydrogeneratingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (hydrogeneratingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += hydrogeneratingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (hydrogeneratingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += hydrogeneratingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (hydrogeneratingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += hydrogeneratingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (hydrogeneratingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += hydrogeneratingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (hydrogeneratingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += hydrogeneratingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (hydrogeneratingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += hydrogeneratingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (hydrogeneratingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += hydrogeneratingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (hydrogeneratingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += hydrogeneratingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (hydrogeneratingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += hydrogeneratingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (hydrogeneratingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += hydrogeneratingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (hydrogeneratingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += hydrogeneratingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (hydrogeneratingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += hydrogeneratingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (hydrogeneratingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += hydrogeneratingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (hydrogeneratingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += hydrogeneratingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (hydrogeneratingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += hydrogeneratingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (hydrogeneratingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += hydrogeneratingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (hydrogeneratingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += hydrogeneratingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (hydrogeneratingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += hydrogeneratingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (hydrogeneratingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += hydrogeneratingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (hydrogeneratingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += hydrogeneratingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (hydrogeneratingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += hydrogeneratingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (hydrogeneratingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += hydrogeneratingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (hydrogeneratingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += hydrogeneratingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (hydrogeneratingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += hydrogeneratingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (hydrogeneratingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += hydrogeneratingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (hydrogeneratingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += hydrogeneratingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (hydrogeneratingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += hydrogeneratingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (hydrogeneratingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += hydrogeneratingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (hydrogeneratingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += hydrogeneratingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (hydrogeneratingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += hydrogeneratingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (hydrogeneratingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += hydrogeneratingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (hydrogeneratingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + hydrogeneratingunit.getRpnCondition() + "\"/>\n";
		}
		if (hydrogeneratingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += hydrogeneratingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (hydrogeneratingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + hydrogeneratingunit.getSchemeType() + "\"/>\n";
		}
		if (hydrogeneratingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + hydrogeneratingunit.getSeasonType() + "\"/>\n";
		}
		if (hydrogeneratingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + hydrogeneratingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (hydrogeneratingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += hydrogeneratingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (hydrogeneratingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += hydrogeneratingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (hydrogeneratingunit.getEnergyConversionCapability() != null){
			rdfXmlResource += "\t\t<cim:HydroGeneratingUnit.energyConversionCapability rdf:resource=\"" + this.baseURI + "#HydroEnergyConversionKind." + hydrogeneratingunit.getEnergyConversionCapability() + "\"/>\n";
		}
		if (hydrogeneratingunit.getHydroUnitWaterCost() != null){
			rdfXmlResource += "\t\t<cim:HydroGeneratingUnit.hydroUnitWaterCost>";
			rdfXmlResource += hydrogeneratingunit.getHydroUnitWaterCost().getValue().toString();
			rdfXmlResource += "</cim:HydroGeneratingUnit.hydroUnitWaterCost>\n";
		}
		if (hydrogeneratingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:HydroGeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroPowerPlant hydropowerplant){
		String rdfXmlResource = "";
		if (hydropowerplant.getMRID() != null){
			rdfXmlResource = "\t<cim:HydroPowerPlant rdf:ID = \"_" + hydropowerplant.getMRID() + "\">\n";
		}
		if (hydropowerplant.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + hydropowerplant.getAssets().getMRID() + "\"/>\n";
		}
		if (hydropowerplant.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + hydropowerplant.getLocation().getMRID() + "\"/>\n";
		}
		if (hydropowerplant.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += hydropowerplant.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (hydropowerplant.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += hydropowerplant.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (hydropowerplant.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += hydropowerplant.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (hydropowerplant.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += hydropowerplant.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (hydropowerplant.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += hydropowerplant.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (hydropowerplant.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += hydropowerplant.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (hydropowerplant.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += hydropowerplant.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (hydropowerplant.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += hydropowerplant.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (hydropowerplant.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += hydropowerplant.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (hydropowerplant.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += hydropowerplant.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (hydropowerplant.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += hydropowerplant.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (hydropowerplant.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += hydropowerplant.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (hydropowerplant.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += hydropowerplant.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (hydropowerplant.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += hydropowerplant.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (hydropowerplant.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += hydropowerplant.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (hydropowerplant.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += hydropowerplant.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (hydropowerplant.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += hydropowerplant.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (hydropowerplant.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += hydropowerplant.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (hydropowerplant.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += hydropowerplant.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (hydropowerplant.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += hydropowerplant.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (hydropowerplant.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + hydropowerplant.getRpnCondition() + "\"/>\n";
		}
		if (hydropowerplant.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += hydropowerplant.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (hydropowerplant.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + hydropowerplant.getSchemeType() + "\"/>\n";
		}
		if (hydropowerplant.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + hydropowerplant.getSeasonType() + "\"/>\n";
		}
		if (hydropowerplant.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + hydropowerplant.getSubtaskNumber() + "\"/>\n";
		}
		if (hydropowerplant.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += hydropowerplant.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (hydropowerplant.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += hydropowerplant.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (hydropowerplant.getDischargeTravelDelay() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.dischargeTravelDelay>";
			rdfXmlResource += hydropowerplant.getDischargeTravelDelay().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.dischargeTravelDelay>\n";
		}
		if (hydropowerplant.getGenRatedP() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.genRatedP>";
			rdfXmlResource += hydropowerplant.getGenRatedP().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.genRatedP>\n";
		}
		if (hydropowerplant.getHydroPlantStorageType() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.hydroPlantStorageType rdf:resource=\"" + this.baseURI + "#HydroPlantStorageKind." + hydropowerplant.getHydroPlantStorageType() + "\"/>\n";
		}
		if (hydropowerplant.getPenstockType() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.penstockType>";
			rdfXmlResource += hydropowerplant.getPenstockType();
			rdfXmlResource += "</cim:HydroPowerPlant.penstockType>\n";
		}
		if (hydropowerplant.getPlantDischargeCapacity() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.plantDischargeCapacity>";
			rdfXmlResource += hydropowerplant.getPlantDischargeCapacity().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.plantDischargeCapacity>\n";
		}
		if (hydropowerplant.getPlantRatedHead() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.plantRatedHead>";
			rdfXmlResource += hydropowerplant.getPlantRatedHead().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.plantRatedHead>\n";
		}
		if (hydropowerplant.getPumpRatedP() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.pumpRatedP>";
			rdfXmlResource += hydropowerplant.getPumpRatedP().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.pumpRatedP>\n";
		}
		if (hydropowerplant.getSurgeTankCode() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.surgeTankCode>";
			rdfXmlResource += hydropowerplant.getSurgeTankCode();
			rdfXmlResource += "</cim:HydroPowerPlant.surgeTankCode>\n";
		}
		if (hydropowerplant.getSurgeTankCrestLevel() != null){
			rdfXmlResource += "\t\t<cim:HydroPowerPlant.surgeTankCrestLevel>";
			rdfXmlResource += hydropowerplant.getSurgeTankCrestLevel().getValue().toString();
			rdfXmlResource += "</cim:HydroPowerPlant.surgeTankCrestLevel>\n";
		}
		if (hydropowerplant.getMRID() != null){
			rdfXmlResource += "\t</cim:HydroPowerPlant>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.HydroPump hydropump){
		String rdfXmlResource = "";
		if (hydropump.getMRID() != null){
			rdfXmlResource = "\t<cim:HydroPump rdf:ID = \"_" + hydropump.getMRID() + "\">\n";
		}
		if (hydropump.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + hydropump.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (hydropump.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + hydropump.getAssets().getMRID() + "\"/>\n";
		}
		if (hydropump.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + hydropump.getLocation().getMRID() + "\"/>\n";
		}
		if (hydropump.getHydroPowerPlant() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.HydroPowerPlant rdf:resource=\"#_" + hydropump.getHydroPowerPlant().getMRID() + "\"/>\n";
		}
		if (hydropump.getRotatingMachine() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.RotatingMachine rdf:resource=\"#_" + hydropump.getRotatingMachine().getMRID() + "\"/>\n";
		}
		if (hydropump.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += hydropump.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (hydropump.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += hydropump.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (hydropump.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += hydropump.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (hydropump.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += hydropump.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (hydropump.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += hydropump.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (hydropump.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += hydropump.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (hydropump.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += hydropump.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (hydropump.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += hydropump.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (hydropump.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += hydropump.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (hydropump.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += hydropump.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (hydropump.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += hydropump.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (hydropump.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += hydropump.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (hydropump.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += hydropump.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (hydropump.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += hydropump.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (hydropump.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += hydropump.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (hydropump.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += hydropump.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (hydropump.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += hydropump.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (hydropump.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += hydropump.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (hydropump.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += hydropump.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (hydropump.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += hydropump.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (hydropump.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += hydropump.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (hydropump.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += hydropump.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (hydropump.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += hydropump.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (hydropump.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += hydropump.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (hydropump.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + hydropump.getRpnCondition() + "\"/>\n";
		}
		if (hydropump.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += hydropump.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (hydropump.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + hydropump.getSchemeType() + "\"/>\n";
		}
		if (hydropump.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + hydropump.getSeasonType() + "\"/>\n";
		}
		if (hydropump.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + hydropump.getSubtaskNumber() + "\"/>\n";
		}
		if (hydropump.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += hydropump.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (hydropump.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += hydropump.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (hydropump.getPumpDischAtMaxHead() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.pumpDischAtMaxHead>";
			rdfXmlResource += hydropump.getPumpDischAtMaxHead().getValue().toString();
			rdfXmlResource += "</cim:HydroPump.pumpDischAtMaxHead>\n";
		}
		if (hydropump.getPumpDischAtMinHead() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.pumpDischAtMinHead>";
			rdfXmlResource += hydropump.getPumpDischAtMinHead().getValue().toString();
			rdfXmlResource += "</cim:HydroPump.pumpDischAtMinHead>\n";
		}
		if (hydropump.getPumpPowerAtMaxHead() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.pumpPowerAtMaxHead>";
			rdfXmlResource += hydropump.getPumpPowerAtMaxHead().getValue().toString();
			rdfXmlResource += "</cim:HydroPump.pumpPowerAtMaxHead>\n";
		}
		if (hydropump.getPumpPowerAtMinHead() != null){
			rdfXmlResource += "\t\t<cim:HydroPump.pumpPowerAtMinHead>";
			rdfXmlResource += hydropump.getPumpPowerAtMinHead().getValue().toString();
			rdfXmlResource += "</cim:HydroPump.pumpPowerAtMinHead>\n";
		}
		if (hydropump.getMRID() != null){
			rdfXmlResource += "\t</cim:HydroPump>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.NuclearGeneratingUnit nucleargeneratingunit){
		String rdfXmlResource = "";
		if (nucleargeneratingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:NuclearGeneratingUnit rdf:ID = \"_" + nucleargeneratingunit.getMRID() + "\">\n";
		}
		if (nucleargeneratingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + nucleargeneratingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (nucleargeneratingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + nucleargeneratingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (nucleargeneratingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + nucleargeneratingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (nucleargeneratingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += nucleargeneratingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (nucleargeneratingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += nucleargeneratingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (nucleargeneratingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += nucleargeneratingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (nucleargeneratingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += nucleargeneratingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (nucleargeneratingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += nucleargeneratingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (nucleargeneratingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += nucleargeneratingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (nucleargeneratingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += nucleargeneratingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (nucleargeneratingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += nucleargeneratingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (nucleargeneratingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + nucleargeneratingunit.getGenControlMode() + "\"/>\n";
		}
		if (nucleargeneratingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + nucleargeneratingunit.getGenControlSource() + "\"/>\n";
		}
		if (nucleargeneratingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += nucleargeneratingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (nucleargeneratingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += nucleargeneratingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (nucleargeneratingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += nucleargeneratingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (nucleargeneratingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += nucleargeneratingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (nucleargeneratingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += nucleargeneratingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (nucleargeneratingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += nucleargeneratingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (nucleargeneratingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += nucleargeneratingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (nucleargeneratingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += nucleargeneratingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (nucleargeneratingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += nucleargeneratingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (nucleargeneratingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += nucleargeneratingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (nucleargeneratingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += nucleargeneratingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (nucleargeneratingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += nucleargeneratingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (nucleargeneratingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += nucleargeneratingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (nucleargeneratingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += nucleargeneratingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (nucleargeneratingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += nucleargeneratingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (nucleargeneratingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += nucleargeneratingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (nucleargeneratingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += nucleargeneratingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (nucleargeneratingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += nucleargeneratingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (nucleargeneratingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += nucleargeneratingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (nucleargeneratingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += nucleargeneratingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (nucleargeneratingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += nucleargeneratingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (nucleargeneratingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += nucleargeneratingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (nucleargeneratingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += nucleargeneratingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (nucleargeneratingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += nucleargeneratingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (nucleargeneratingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += nucleargeneratingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (nucleargeneratingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += nucleargeneratingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (nucleargeneratingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += nucleargeneratingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (nucleargeneratingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += nucleargeneratingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (nucleargeneratingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += nucleargeneratingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (nucleargeneratingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += nucleargeneratingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (nucleargeneratingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += nucleargeneratingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (nucleargeneratingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += nucleargeneratingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (nucleargeneratingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += nucleargeneratingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (nucleargeneratingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += nucleargeneratingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (nucleargeneratingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += nucleargeneratingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (nucleargeneratingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += nucleargeneratingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (nucleargeneratingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += nucleargeneratingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (nucleargeneratingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += nucleargeneratingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (nucleargeneratingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += nucleargeneratingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (nucleargeneratingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += nucleargeneratingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (nucleargeneratingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += nucleargeneratingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (nucleargeneratingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += nucleargeneratingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (nucleargeneratingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += nucleargeneratingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (nucleargeneratingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += nucleargeneratingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (nucleargeneratingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += nucleargeneratingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (nucleargeneratingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += nucleargeneratingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (nucleargeneratingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += nucleargeneratingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (nucleargeneratingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += nucleargeneratingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (nucleargeneratingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += nucleargeneratingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (nucleargeneratingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += nucleargeneratingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (nucleargeneratingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += nucleargeneratingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (nucleargeneratingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + nucleargeneratingunit.getRpnCondition() + "\"/>\n";
		}
		if (nucleargeneratingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += nucleargeneratingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (nucleargeneratingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + nucleargeneratingunit.getSchemeType() + "\"/>\n";
		}
		if (nucleargeneratingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + nucleargeneratingunit.getSeasonType() + "\"/>\n";
		}
		if (nucleargeneratingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + nucleargeneratingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (nucleargeneratingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += nucleargeneratingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (nucleargeneratingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += nucleargeneratingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (nucleargeneratingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:NuclearGeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.SolarGeneratingUnit solargeneratingunit){
		String rdfXmlResource = "";
		if (solargeneratingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:SolarGeneratingUnit rdf:ID = \"_" + solargeneratingunit.getMRID() + "\">\n";
		}
		if (solargeneratingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + solargeneratingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (solargeneratingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + solargeneratingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (solargeneratingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + solargeneratingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (solargeneratingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += solargeneratingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (solargeneratingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += solargeneratingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (solargeneratingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += solargeneratingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (solargeneratingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += solargeneratingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (solargeneratingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += solargeneratingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (solargeneratingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += solargeneratingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (solargeneratingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += solargeneratingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (solargeneratingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += solargeneratingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (solargeneratingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + solargeneratingunit.getGenControlMode() + "\"/>\n";
		}
		if (solargeneratingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + solargeneratingunit.getGenControlSource() + "\"/>\n";
		}
		if (solargeneratingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += solargeneratingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (solargeneratingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += solargeneratingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (solargeneratingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += solargeneratingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (solargeneratingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += solargeneratingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (solargeneratingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += solargeneratingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (solargeneratingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += solargeneratingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (solargeneratingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += solargeneratingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (solargeneratingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += solargeneratingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (solargeneratingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += solargeneratingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (solargeneratingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += solargeneratingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (solargeneratingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += solargeneratingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (solargeneratingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += solargeneratingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (solargeneratingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += solargeneratingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (solargeneratingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += solargeneratingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (solargeneratingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += solargeneratingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (solargeneratingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += solargeneratingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (solargeneratingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += solargeneratingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (solargeneratingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += solargeneratingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (solargeneratingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += solargeneratingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (solargeneratingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += solargeneratingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (solargeneratingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += solargeneratingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (solargeneratingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += solargeneratingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (solargeneratingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += solargeneratingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (solargeneratingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += solargeneratingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (solargeneratingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += solargeneratingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (solargeneratingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += solargeneratingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (solargeneratingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += solargeneratingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (solargeneratingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += solargeneratingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (solargeneratingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += solargeneratingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (solargeneratingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += solargeneratingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (solargeneratingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += solargeneratingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (solargeneratingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += solargeneratingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (solargeneratingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += solargeneratingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (solargeneratingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += solargeneratingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (solargeneratingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += solargeneratingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (solargeneratingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += solargeneratingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (solargeneratingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += solargeneratingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (solargeneratingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += solargeneratingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (solargeneratingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += solargeneratingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (solargeneratingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += solargeneratingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (solargeneratingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += solargeneratingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (solargeneratingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += solargeneratingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (solargeneratingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += solargeneratingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (solargeneratingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += solargeneratingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (solargeneratingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += solargeneratingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (solargeneratingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += solargeneratingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (solargeneratingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += solargeneratingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (solargeneratingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += solargeneratingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (solargeneratingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += solargeneratingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (solargeneratingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += solargeneratingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (solargeneratingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += solargeneratingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (solargeneratingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + solargeneratingunit.getRpnCondition() + "\"/>\n";
		}
		if (solargeneratingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += solargeneratingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (solargeneratingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + solargeneratingunit.getSchemeType() + "\"/>\n";
		}
		if (solargeneratingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + solargeneratingunit.getSeasonType() + "\"/>\n";
		}
		if (solargeneratingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + solargeneratingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (solargeneratingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += solargeneratingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (solargeneratingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += solargeneratingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (solargeneratingunit.getPriceLocation() != null){
			rdfXmlResource += "\t\t<nti:SolarGeneratingUnit.priceLocation>";
			rdfXmlResource += solargeneratingunit.getPriceLocation().toString();
			rdfXmlResource += "</nti:SolarGeneratingUnit.priceLocation>\n";
		}
		if (solargeneratingunit.getPriceProject() != null){
			rdfXmlResource += "\t\t<nti:SolarGeneratingUnit.priceProject>";
			rdfXmlResource += solargeneratingunit.getPriceProject().toString();
			rdfXmlResource += "</nti:SolarGeneratingUnit.priceProject>\n";
		}
		if (solargeneratingunit.getPriceSunPanel() != null){
			rdfXmlResource += "\t\t<nti:SolarGeneratingUnit.priceSunPanel>";
			rdfXmlResource += solargeneratingunit.getPriceSunPanel().toString();
			rdfXmlResource += "</nti:SolarGeneratingUnit.priceSunPanel>\n";
		}
		if (solargeneratingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:SolarGeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.ThermalGeneratingUnit thermalgeneratingunit){
		String rdfXmlResource = "";
		if (thermalgeneratingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:ThermalGeneratingUnit rdf:ID = \"_" + thermalgeneratingunit.getMRID() + "\">\n";
		}
		if (thermalgeneratingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + thermalgeneratingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (thermalgeneratingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + thermalgeneratingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (thermalgeneratingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + thermalgeneratingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (thermalgeneratingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += thermalgeneratingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (thermalgeneratingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += thermalgeneratingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (thermalgeneratingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += thermalgeneratingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (thermalgeneratingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += thermalgeneratingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (thermalgeneratingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += thermalgeneratingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (thermalgeneratingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += thermalgeneratingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (thermalgeneratingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += thermalgeneratingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (thermalgeneratingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += thermalgeneratingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (thermalgeneratingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + thermalgeneratingunit.getGenControlMode() + "\"/>\n";
		}
		if (thermalgeneratingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + thermalgeneratingunit.getGenControlSource() + "\"/>\n";
		}
		if (thermalgeneratingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += thermalgeneratingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (thermalgeneratingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += thermalgeneratingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (thermalgeneratingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += thermalgeneratingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (thermalgeneratingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += thermalgeneratingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (thermalgeneratingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += thermalgeneratingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (thermalgeneratingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += thermalgeneratingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (thermalgeneratingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += thermalgeneratingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (thermalgeneratingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += thermalgeneratingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (thermalgeneratingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += thermalgeneratingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (thermalgeneratingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += thermalgeneratingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (thermalgeneratingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += thermalgeneratingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (thermalgeneratingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += thermalgeneratingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (thermalgeneratingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += thermalgeneratingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (thermalgeneratingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += thermalgeneratingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (thermalgeneratingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += thermalgeneratingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (thermalgeneratingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += thermalgeneratingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (thermalgeneratingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += thermalgeneratingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (thermalgeneratingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += thermalgeneratingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (thermalgeneratingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += thermalgeneratingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (thermalgeneratingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += thermalgeneratingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (thermalgeneratingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += thermalgeneratingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (thermalgeneratingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += thermalgeneratingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (thermalgeneratingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += thermalgeneratingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (thermalgeneratingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += thermalgeneratingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (thermalgeneratingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += thermalgeneratingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (thermalgeneratingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += thermalgeneratingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (thermalgeneratingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += thermalgeneratingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (thermalgeneratingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += thermalgeneratingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (thermalgeneratingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += thermalgeneratingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (thermalgeneratingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += thermalgeneratingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (thermalgeneratingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += thermalgeneratingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (thermalgeneratingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += thermalgeneratingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (thermalgeneratingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += thermalgeneratingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (thermalgeneratingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += thermalgeneratingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (thermalgeneratingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += thermalgeneratingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (thermalgeneratingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += thermalgeneratingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (thermalgeneratingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += thermalgeneratingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (thermalgeneratingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += thermalgeneratingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (thermalgeneratingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += thermalgeneratingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (thermalgeneratingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += thermalgeneratingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (thermalgeneratingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += thermalgeneratingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (thermalgeneratingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += thermalgeneratingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (thermalgeneratingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += thermalgeneratingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (thermalgeneratingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += thermalgeneratingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (thermalgeneratingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += thermalgeneratingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (thermalgeneratingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += thermalgeneratingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (thermalgeneratingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += thermalgeneratingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (thermalgeneratingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += thermalgeneratingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (thermalgeneratingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += thermalgeneratingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (thermalgeneratingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += thermalgeneratingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (thermalgeneratingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += thermalgeneratingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (thermalgeneratingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + thermalgeneratingunit.getRpnCondition() + "\"/>\n";
		}
		if (thermalgeneratingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += thermalgeneratingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (thermalgeneratingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + thermalgeneratingunit.getSchemeType() + "\"/>\n";
		}
		if (thermalgeneratingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + thermalgeneratingunit.getSeasonType() + "\"/>\n";
		}
		if (thermalgeneratingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + thermalgeneratingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (thermalgeneratingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += thermalgeneratingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (thermalgeneratingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += thermalgeneratingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (thermalgeneratingunit.getOMCost() != null){
			rdfXmlResource += "\t\t<cim:ThermalGeneratingUnit.oMCost>";
			rdfXmlResource += thermalgeneratingunit.getOMCost().getValue().toString();
			rdfXmlResource += "</cim:ThermalGeneratingUnit.oMCost>\n";
		}
		if (thermalgeneratingunit.getPriceBuilding() != null){
			rdfXmlResource += "\t\t<nti:ThermalGeneratingUnit.priceBuilding>";
			rdfXmlResource += thermalgeneratingunit.getPriceBuilding().toString();
			rdfXmlResource += "</nti:ThermalGeneratingUnit.priceBuilding>\n";
		}
		if (thermalgeneratingunit.getPriceProject() != null){
			rdfXmlResource += "\t\t<nti:ThermalGeneratingUnit.priceProject>";
			rdfXmlResource += thermalgeneratingunit.getPriceProject().toString();
			rdfXmlResource += "</nti:ThermalGeneratingUnit.priceProject>\n";
		}
		if (thermalgeneratingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:ThermalGeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Generation.Production.WindGeneratingUnit windgeneratingunit){
		String rdfXmlResource = "";
		if (windgeneratingunit.getMRID() != null){
			rdfXmlResource = "\t<cim:WindGeneratingUnit rdf:ID = \"_" + windgeneratingunit.getMRID() + "\">\n";
		}
		if (windgeneratingunit.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + windgeneratingunit.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (windgeneratingunit.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + windgeneratingunit.getAssets().getMRID() + "\"/>\n";
		}
		if (windgeneratingunit.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + windgeneratingunit.getLocation().getMRID() + "\"/>\n";
		}
		if (windgeneratingunit.getAllocSpinResP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.allocSpinResP>";
			rdfXmlResource += windgeneratingunit.getAllocSpinResP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.allocSpinResP>\n";
		}
		if (windgeneratingunit.getAutoCntrlMarginP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.autoCntrlMarginP>";
			rdfXmlResource += windgeneratingunit.getAutoCntrlMarginP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.autoCntrlMarginP>\n";
		}
		if (windgeneratingunit.getBaseP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.baseP>";
			rdfXmlResource += windgeneratingunit.getBaseP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.baseP>\n";
		}
		if (windgeneratingunit.getControlDeadband() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlDeadband>";
			rdfXmlResource += windgeneratingunit.getControlDeadband().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlDeadband>\n";
		}
		if (windgeneratingunit.getControlPulseHigh() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseHigh>";
			rdfXmlResource += windgeneratingunit.getControlPulseHigh().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseHigh>\n";
		}
		if (windgeneratingunit.getControlPulseLow() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlPulseLow>";
			rdfXmlResource += windgeneratingunit.getControlPulseLow().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlPulseLow>\n";
		}
		if (windgeneratingunit.getControlResponseRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.controlResponseRate>";
			rdfXmlResource += windgeneratingunit.getControlResponseRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.controlResponseRate>\n";
		}
		if (windgeneratingunit.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.efficiency>";
			rdfXmlResource += windgeneratingunit.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.efficiency>\n";
		}
		if (windgeneratingunit.getGenControlMode() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlMode rdf:resource=\"" + this.baseURI + "#GeneratorControlMode." + windgeneratingunit.getGenControlMode() + "\"/>\n";
		}
		if (windgeneratingunit.getGenControlSource() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.genControlSource rdf:resource=\"" + this.baseURI + "#GeneratorControlSource." + windgeneratingunit.getGenControlSource() + "\"/>\n";
		}
		if (windgeneratingunit.getGovernorMPL() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorMPL>";
			rdfXmlResource += windgeneratingunit.getGovernorMPL().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorMPL>\n";
		}
		if (windgeneratingunit.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.governorSCD>";
			rdfXmlResource += windgeneratingunit.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.governorSCD>\n";
		}
		if (windgeneratingunit.getHighControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.highControlLimit>";
			rdfXmlResource += windgeneratingunit.getHighControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.highControlLimit>\n";
		}
		if (windgeneratingunit.getInitialP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.initialP>";
			rdfXmlResource += windgeneratingunit.getInitialP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.initialP>\n";
		}
		if (windgeneratingunit.getLongPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.longPF>";
			rdfXmlResource += windgeneratingunit.getLongPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.longPF>\n";
		}
		if (windgeneratingunit.getLowControlLimit() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowControlLimit>";
			rdfXmlResource += windgeneratingunit.getLowControlLimit().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowControlLimit>\n";
		}
		if (windgeneratingunit.getLowerRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.lowerRampRate>";
			rdfXmlResource += windgeneratingunit.getLowerRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.lowerRampRate>\n";
		}
		if (windgeneratingunit.getMaxEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxEconomicP>";
			rdfXmlResource += windgeneratingunit.getMaxEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxEconomicP>\n";
		}
		if (windgeneratingunit.getMaximumAllowableSpinningReserve() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maximumAllowableSpinningReserve>";
			rdfXmlResource += windgeneratingunit.getMaximumAllowableSpinningReserve().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maximumAllowableSpinningReserve>\n";
		}
		if (windgeneratingunit.getMaxOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.maxOperatingP>";
			rdfXmlResource += windgeneratingunit.getMaxOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.maxOperatingP>\n";
		}
		if (windgeneratingunit.getMinEconomicP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minEconomicP>";
			rdfXmlResource += windgeneratingunit.getMinEconomicP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minEconomicP>\n";
		}
		if (windgeneratingunit.getMinimumOffTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minimumOffTime>";
			rdfXmlResource += windgeneratingunit.getMinimumOffTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minimumOffTime>\n";
		}
		if (windgeneratingunit.getMinOperatingP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.minOperatingP>";
			rdfXmlResource += windgeneratingunit.getMinOperatingP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.minOperatingP>\n";
		}
		if (windgeneratingunit.getModelDetail() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.modelDetail>";
			rdfXmlResource += windgeneratingunit.getModelDetail().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.modelDetail>\n";
		}
		if (windgeneratingunit.getNominalP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.nominalP>";
			rdfXmlResource += windgeneratingunit.getNominalP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.nominalP>\n";
		}
		if (windgeneratingunit.getNormalPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.normalPF>";
			rdfXmlResource += windgeneratingunit.getNormalPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.normalPF>\n";
		}
		if (windgeneratingunit.getPenaltyFactor() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.penaltyFactor>";
			rdfXmlResource += windgeneratingunit.getPenaltyFactor().toString();
			rdfXmlResource += "</cim:GeneratingUnit.penaltyFactor>\n";
		}
		if (windgeneratingunit.getRaiseRampRate() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.raiseRampRate>";
			rdfXmlResource += windgeneratingunit.getRaiseRampRate().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.raiseRampRate>\n";
		}
		if (windgeneratingunit.getRatedGrossMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMaxP>";
			rdfXmlResource += windgeneratingunit.getRatedGrossMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMaxP>\n";
		}
		if (windgeneratingunit.getRatedGrossMinP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedGrossMinP>";
			rdfXmlResource += windgeneratingunit.getRatedGrossMinP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedGrossMinP>\n";
		}
		if (windgeneratingunit.getRatedNetMaxP() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.ratedNetMaxP>";
			rdfXmlResource += windgeneratingunit.getRatedNetMaxP().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.ratedNetMaxP>\n";
		}
		if (windgeneratingunit.getShortPF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.shortPF>";
			rdfXmlResource += windgeneratingunit.getShortPF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.shortPF>\n";
		}
		if (windgeneratingunit.getStartupCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupCost>";
			rdfXmlResource += windgeneratingunit.getStartupCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupCost>\n";
		}
		if (windgeneratingunit.getStartupTime() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.startupTime>";
			rdfXmlResource += windgeneratingunit.getStartupTime().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.startupTime>\n";
		}
		if (windgeneratingunit.getTieLinePF() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.tieLinePF>";
			rdfXmlResource += windgeneratingunit.getTieLinePF().toString();
			rdfXmlResource += "</cim:GeneratingUnit.tieLinePF>\n";
		}
		if (windgeneratingunit.getTotalEfficiency() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.totalEfficiency>";
			rdfXmlResource += windgeneratingunit.getTotalEfficiency().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.totalEfficiency>\n";
		}
		if (windgeneratingunit.getVariableCost() != null){
			rdfXmlResource += "\t\t<cim:GeneratingUnit.variableCost>";
			rdfXmlResource += windgeneratingunit.getVariableCost().getValue().toString();
			rdfXmlResource += "</cim:GeneratingUnit.variableCost>\n";
		}
		if (windgeneratingunit.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += windgeneratingunit.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (windgeneratingunit.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += windgeneratingunit.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (windgeneratingunit.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += windgeneratingunit.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (windgeneratingunit.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += windgeneratingunit.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (windgeneratingunit.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += windgeneratingunit.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (windgeneratingunit.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += windgeneratingunit.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (windgeneratingunit.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += windgeneratingunit.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (windgeneratingunit.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += windgeneratingunit.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (windgeneratingunit.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += windgeneratingunit.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (windgeneratingunit.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += windgeneratingunit.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (windgeneratingunit.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += windgeneratingunit.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (windgeneratingunit.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += windgeneratingunit.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (windgeneratingunit.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += windgeneratingunit.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (windgeneratingunit.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += windgeneratingunit.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (windgeneratingunit.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += windgeneratingunit.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (windgeneratingunit.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += windgeneratingunit.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (windgeneratingunit.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += windgeneratingunit.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (windgeneratingunit.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += windgeneratingunit.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (windgeneratingunit.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += windgeneratingunit.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (windgeneratingunit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += windgeneratingunit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (windgeneratingunit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += windgeneratingunit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (windgeneratingunit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += windgeneratingunit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (windgeneratingunit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += windgeneratingunit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (windgeneratingunit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += windgeneratingunit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (windgeneratingunit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + windgeneratingunit.getRpnCondition() + "\"/>\n";
		}
		if (windgeneratingunit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += windgeneratingunit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (windgeneratingunit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + windgeneratingunit.getSchemeType() + "\"/>\n";
		}
		if (windgeneratingunit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + windgeneratingunit.getSeasonType() + "\"/>\n";
		}
		if (windgeneratingunit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + windgeneratingunit.getSubtaskNumber() + "\"/>\n";
		}
		if (windgeneratingunit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += windgeneratingunit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (windgeneratingunit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += windgeneratingunit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (windgeneratingunit.getWindGenUnitType() != null){
			rdfXmlResource += "\t\t<cim:WindGeneratingUnit.windGenUnitType rdf:resource=\"" + this.baseURI + "#WindGenUnitKind." + windgeneratingunit.getWindGenUnitType() + "\"/>\n";
		}
		if (windgeneratingunit.getMRID() != null){
			rdfXmlResource += "\t</cim:WindGeneratingUnit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.ConformLoad conformload){
		String rdfXmlResource = "";
		if (conformload.getMRID() != null){
			rdfXmlResource = "\t<cim:ConformLoad rdf:ID = \"_" + conformload.getMRID() + "\">\n";
		}
		if (conformload.getCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.Cluster rdf:resource=\"#_" + conformload.getCluster().getMRID() + "\"/>\n";
		}
		if (conformload.getVoltageCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.VoltageCluster rdf:resource=\"#_" + conformload.getVoltageCluster().getMRID() + "\"/>\n";
		}
		if (conformload.getSubstationFeedingFrom() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.SubstationFeedingFrom rdf:resource=\"#_" + conformload.getSubstationFeedingFrom().getMRID() + "\"/>\n";
		}
		if (conformload.getLoadResponse() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.LoadResponse rdf:resource=\"#_" + conformload.getLoadResponse().getMRID() + "\"/>\n";
		}
		if (conformload.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + conformload.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (conformload.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + conformload.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (conformload.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + conformload.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (conformload.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + conformload.getSvStatus().getMRID() + "\"/>\n";
		}
		if (conformload.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: conformload.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (conformload.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + conformload.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (conformload.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + conformload.getAssets().getMRID() + "\"/>\n";
		}
		if (conformload.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + conformload.getLocation().getMRID() + "\"/>\n";
		}
		if (conformload.getLoadGroup() != null){
			rdfXmlResource += "\t\t<cim:ConformLoad.LoadGroup rdf:resource=\"#_" + conformload.getLoadGroup().getMRID() + "\"/>\n";
		}
		if (conformload.getClusterLabel() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.clusterLabel>";
			rdfXmlResource += conformload.getClusterLabel().toString();
			rdfXmlResource += "</nti:EnergyConsumer.clusterLabel>\n";
		}
		if (conformload.getCustomerCount() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.customerCount>";
			rdfXmlResource += conformload.getCustomerCount().toString();
			rdfXmlResource += "</cim:EnergyConsumer.customerCount>\n";
		}
		if (conformload.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.grounded>";
			rdfXmlResource += conformload.getGrounded().toString();
			rdfXmlResource += "</cim:EnergyConsumer.grounded>\n";
		}
		if (conformload.getIsOutLier() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isOutLier>";
			rdfXmlResource += conformload.getIsOutLier().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isOutLier>\n";
		}
		if (conformload.getIsTransformerNeedToConnectToSubstation() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>";
			rdfXmlResource += conformload.getIsTransformerNeedToConnectToSubstation().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>\n";
		}
		if (conformload.getP() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.p>";
			rdfXmlResource += conformload.getP().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.p>\n";
		}
		if (conformload.getPfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixed>";
			rdfXmlResource += conformload.getPfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixed>\n";
		}
		if (conformload.getPfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixedPct>";
			rdfXmlResource += conformload.getPfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixedPct>\n";
		}
		if (conformload.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + conformload.getPhaseConnection() + "\"/>\n";
		}
		if (conformload.getQ() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.q>";
			rdfXmlResource += conformload.getQ().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.q>\n";
		}
		if (conformload.getQfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixed>";
			rdfXmlResource += conformload.getQfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixed>\n";
		}
		if (conformload.getQfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixedPct>";
			rdfXmlResource += conformload.getQfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixedPct>\n";
		}
		if (conformload.getSubstationPreferredVoltage() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.substationPreferredVoltage>";
			rdfXmlResource += conformload.getSubstationPreferredVoltage().toString();
			rdfXmlResource += "</cim:EnergyConsumer.substationPreferredVoltage>\n";
		}
		if (conformload.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += conformload.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (conformload.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += conformload.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (conformload.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += conformload.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (conformload.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += conformload.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (conformload.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += conformload.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (conformload.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += conformload.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (conformload.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += conformload.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (conformload.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += conformload.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (conformload.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += conformload.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (conformload.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += conformload.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (conformload.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += conformload.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (conformload.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += conformload.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (conformload.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += conformload.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (conformload.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += conformload.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (conformload.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += conformload.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (conformload.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += conformload.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (conformload.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += conformload.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (conformload.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += conformload.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (conformload.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += conformload.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (conformload.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += conformload.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (conformload.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += conformload.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (conformload.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += conformload.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (conformload.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += conformload.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (conformload.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += conformload.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (conformload.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += conformload.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (conformload.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += conformload.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (conformload.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += conformload.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (conformload.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += conformload.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (conformload.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += conformload.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (conformload.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += conformload.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (conformload.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += conformload.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (conformload.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + conformload.getRpnCondition() + "\"/>\n";
		}
		if (conformload.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += conformload.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (conformload.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + conformload.getSchemeType() + "\"/>\n";
		}
		if (conformload.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + conformload.getSeasonType() + "\"/>\n";
		}
		if (conformload.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + conformload.getSubtaskNumber() + "\"/>\n";
		}
		if (conformload.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += conformload.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (conformload.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += conformload.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (conformload.getPMaxSummerLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.pMaxSummerLoad>";
			rdfXmlResource += conformload.getPMaxSummerLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.pMaxSummerLoad>\n";
		}
		if (conformload.getPMaxWinterLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.pMaxWinterLoad>";
			rdfXmlResource += conformload.getPMaxWinterLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.pMaxWinterLoad>\n";
		}
		if (conformload.getPMinSummerLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.pMinSummerLoad>";
			rdfXmlResource += conformload.getPMinSummerLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.pMinSummerLoad>\n";
		}
		if (conformload.getPMinWinterLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.pMinWinterLoad>";
			rdfXmlResource += conformload.getPMinWinterLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.pMinWinterLoad>\n";
		}
		if (conformload.getQMaxSummerLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.qMaxSummerLoad>";
			rdfXmlResource += conformload.getQMaxSummerLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.qMaxSummerLoad>\n";
		}
		if (conformload.getQMaxWinterLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.qMaxWinterLoad>";
			rdfXmlResource += conformload.getQMaxWinterLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.qMaxWinterLoad>\n";
		}
		if (conformload.getQMinSummerLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.qMinSummerLoad>";
			rdfXmlResource += conformload.getQMinSummerLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.qMinSummerLoad>\n";
		}
		if (conformload.getQMinWinterLoad() != null){
			rdfXmlResource += "\t\t<nti:ConformLoad.qMinWinterLoad>";
			rdfXmlResource += conformload.getQMinWinterLoad().getValue().toString();
			rdfXmlResource += "</nti:ConformLoad.qMinWinterLoad>\n";
		}
		if (conformload.getMRID() != null){
			rdfXmlResource += "\t</cim:ConformLoad>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.ConformLoadGroup conformloadgroup){
		String rdfXmlResource = "";
		if (conformloadgroup.getMRID() != null){
			rdfXmlResource = "\t<cim:ConformLoadGroup rdf:ID = \"_" + conformloadgroup.getMRID() + "\">\n";
		}
		if (conformloadgroup.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += conformloadgroup.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (conformloadgroup.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += conformloadgroup.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (conformloadgroup.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += conformloadgroup.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (conformloadgroup.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += conformloadgroup.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (conformloadgroup.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += conformloadgroup.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (conformloadgroup.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + conformloadgroup.getRpnCondition() + "\"/>\n";
		}
		if (conformloadgroup.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += conformloadgroup.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (conformloadgroup.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + conformloadgroup.getSchemeType() + "\"/>\n";
		}
		if (conformloadgroup.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + conformloadgroup.getSeasonType() + "\"/>\n";
		}
		if (conformloadgroup.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + conformloadgroup.getSubtaskNumber() + "\"/>\n";
		}
		if (conformloadgroup.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += conformloadgroup.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (conformloadgroup.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += conformloadgroup.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (conformloadgroup.getMRID() != null){
			rdfXmlResource += "\t</cim:ConformLoadGroup>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.EnergyArea energyarea){
		String rdfXmlResource = "";
		if (energyarea.getMRID() != null){
			rdfXmlResource = "\t<cim:EnergyArea rdf:ID = \"_" + energyarea.getMRID() + "\">\n";
		}
		if (energyarea.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += energyarea.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (energyarea.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += energyarea.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (energyarea.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += energyarea.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (energyarea.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += energyarea.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (energyarea.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += energyarea.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (energyarea.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + energyarea.getRpnCondition() + "\"/>\n";
		}
		if (energyarea.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += energyarea.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (energyarea.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + energyarea.getSchemeType() + "\"/>\n";
		}
		if (energyarea.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + energyarea.getSeasonType() + "\"/>\n";
		}
		if (energyarea.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + energyarea.getSubtaskNumber() + "\"/>\n";
		}
		if (energyarea.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += energyarea.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (energyarea.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += energyarea.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (energyarea.getMRID() != null){
			rdfXmlResource += "\t</cim:EnergyArea>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.LoadGroup loadgroup){
		String rdfXmlResource = "";
		if (loadgroup.getMRID() != null){
			rdfXmlResource = "\t<cim:LoadGroup rdf:ID = \"_" + loadgroup.getMRID() + "\">\n";
		}
		if (loadgroup.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += loadgroup.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (loadgroup.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += loadgroup.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (loadgroup.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += loadgroup.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (loadgroup.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += loadgroup.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (loadgroup.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += loadgroup.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (loadgroup.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + loadgroup.getRpnCondition() + "\"/>\n";
		}
		if (loadgroup.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += loadgroup.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (loadgroup.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + loadgroup.getSchemeType() + "\"/>\n";
		}
		if (loadgroup.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + loadgroup.getSeasonType() + "\"/>\n";
		}
		if (loadgroup.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + loadgroup.getSubtaskNumber() + "\"/>\n";
		}
		if (loadgroup.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += loadgroup.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (loadgroup.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += loadgroup.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (loadgroup.getMRID() != null){
			rdfXmlResource += "\t</cim:LoadGroup>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.LoadResponseCharacteristic loadresponsecharacteristic){
		String rdfXmlResource = "";
		if (loadresponsecharacteristic.getMRID() != null){
			rdfXmlResource = "\t<cim:LoadResponseCharacteristic rdf:ID = \"_" + loadresponsecharacteristic.getMRID() + "\">\n";
		}
		if (loadresponsecharacteristic.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += loadresponsecharacteristic.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (loadresponsecharacteristic.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += loadresponsecharacteristic.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (loadresponsecharacteristic.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += loadresponsecharacteristic.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (loadresponsecharacteristic.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += loadresponsecharacteristic.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (loadresponsecharacteristic.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += loadresponsecharacteristic.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (loadresponsecharacteristic.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + loadresponsecharacteristic.getRpnCondition() + "\"/>\n";
		}
		if (loadresponsecharacteristic.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += loadresponsecharacteristic.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (loadresponsecharacteristic.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + loadresponsecharacteristic.getSchemeType() + "\"/>\n";
		}
		if (loadresponsecharacteristic.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + loadresponsecharacteristic.getSeasonType() + "\"/>\n";
		}
		if (loadresponsecharacteristic.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + loadresponsecharacteristic.getSubtaskNumber() + "\"/>\n";
		}
		if (loadresponsecharacteristic.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += loadresponsecharacteristic.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (loadresponsecharacteristic.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += loadresponsecharacteristic.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (loadresponsecharacteristic.getExponentModel() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.exponentModel>";
			rdfXmlResource += loadresponsecharacteristic.getExponentModel().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.exponentModel>\n";
		}
		if (loadresponsecharacteristic.getPConstantCurrent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.pConstantCurrent>";
			rdfXmlResource += loadresponsecharacteristic.getPConstantCurrent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.pConstantCurrent>\n";
		}
		if (loadresponsecharacteristic.getPConstantImpedance() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.pConstantImpedance>";
			rdfXmlResource += loadresponsecharacteristic.getPConstantImpedance().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.pConstantImpedance>\n";
		}
		if (loadresponsecharacteristic.getPConstantPower() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.pConstantPower>";
			rdfXmlResource += loadresponsecharacteristic.getPConstantPower().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.pConstantPower>\n";
		}
		if (loadresponsecharacteristic.getPFrequencyExponent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.pFrequencyExponent>";
			rdfXmlResource += loadresponsecharacteristic.getPFrequencyExponent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.pFrequencyExponent>\n";
		}
		if (loadresponsecharacteristic.getPVoltageExponent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.pVoltageExponent>";
			rdfXmlResource += loadresponsecharacteristic.getPVoltageExponent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.pVoltageExponent>\n";
		}
		if (loadresponsecharacteristic.getQConstantCurrent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.qConstantCurrent>";
			rdfXmlResource += loadresponsecharacteristic.getQConstantCurrent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.qConstantCurrent>\n";
		}
		if (loadresponsecharacteristic.getQConstantImpedance() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.qConstantImpedance>";
			rdfXmlResource += loadresponsecharacteristic.getQConstantImpedance().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.qConstantImpedance>\n";
		}
		if (loadresponsecharacteristic.getQConstantPower() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.qConstantPower>";
			rdfXmlResource += loadresponsecharacteristic.getQConstantPower().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.qConstantPower>\n";
		}
		if (loadresponsecharacteristic.getQFrequencyExponent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.qFrequencyExponent>";
			rdfXmlResource += loadresponsecharacteristic.getQFrequencyExponent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.qFrequencyExponent>\n";
		}
		if (loadresponsecharacteristic.getQVoltageExponent() != null){
			rdfXmlResource += "\t\t<cim:LoadResponseCharacteristic.qVoltageExponent>";
			rdfXmlResource += loadresponsecharacteristic.getQVoltageExponent().toString();
			rdfXmlResource += "</cim:LoadResponseCharacteristic.qVoltageExponent>\n";
		}
		if (loadresponsecharacteristic.getMRID() != null){
			rdfXmlResource += "\t</cim:LoadResponseCharacteristic>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.NonConformLoad nonconformload){
		String rdfXmlResource = "";
		if (nonconformload.getMRID() != null){
			rdfXmlResource = "\t<cim:NonConformLoad rdf:ID = \"_" + nonconformload.getMRID() + "\">\n";
		}
		if (nonconformload.getCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.Cluster rdf:resource=\"#_" + nonconformload.getCluster().getMRID() + "\"/>\n";
		}
		if (nonconformload.getVoltageCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.VoltageCluster rdf:resource=\"#_" + nonconformload.getVoltageCluster().getMRID() + "\"/>\n";
		}
		if (nonconformload.getSubstationFeedingFrom() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.SubstationFeedingFrom rdf:resource=\"#_" + nonconformload.getSubstationFeedingFrom().getMRID() + "\"/>\n";
		}
		if (nonconformload.getLoadResponse() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.LoadResponse rdf:resource=\"#_" + nonconformload.getLoadResponse().getMRID() + "\"/>\n";
		}
		if (nonconformload.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + nonconformload.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (nonconformload.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + nonconformload.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (nonconformload.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + nonconformload.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (nonconformload.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + nonconformload.getSvStatus().getMRID() + "\"/>\n";
		}
		if (nonconformload.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: nonconformload.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (nonconformload.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + nonconformload.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (nonconformload.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + nonconformload.getAssets().getMRID() + "\"/>\n";
		}
		if (nonconformload.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + nonconformload.getLocation().getMRID() + "\"/>\n";
		}
		if (nonconformload.getLoadGroup() != null){
			rdfXmlResource += "\t\t<cim:NonConformLoad.LoadGroup rdf:resource=\"#_" + nonconformload.getLoadGroup().getMRID() + "\"/>\n";
		}
		if (nonconformload.getClusterLabel() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.clusterLabel>";
			rdfXmlResource += nonconformload.getClusterLabel().toString();
			rdfXmlResource += "</nti:EnergyConsumer.clusterLabel>\n";
		}
		if (nonconformload.getCustomerCount() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.customerCount>";
			rdfXmlResource += nonconformload.getCustomerCount().toString();
			rdfXmlResource += "</cim:EnergyConsumer.customerCount>\n";
		}
		if (nonconformload.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.grounded>";
			rdfXmlResource += nonconformload.getGrounded().toString();
			rdfXmlResource += "</cim:EnergyConsumer.grounded>\n";
		}
		if (nonconformload.getIsOutLier() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isOutLier>";
			rdfXmlResource += nonconformload.getIsOutLier().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isOutLier>\n";
		}
		if (nonconformload.getIsTransformerNeedToConnectToSubstation() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>";
			rdfXmlResource += nonconformload.getIsTransformerNeedToConnectToSubstation().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>\n";
		}
		if (nonconformload.getP() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.p>";
			rdfXmlResource += nonconformload.getP().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.p>\n";
		}
		if (nonconformload.getPfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixed>";
			rdfXmlResource += nonconformload.getPfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixed>\n";
		}
		if (nonconformload.getPfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixedPct>";
			rdfXmlResource += nonconformload.getPfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixedPct>\n";
		}
		if (nonconformload.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + nonconformload.getPhaseConnection() + "\"/>\n";
		}
		if (nonconformload.getQ() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.q>";
			rdfXmlResource += nonconformload.getQ().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.q>\n";
		}
		if (nonconformload.getQfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixed>";
			rdfXmlResource += nonconformload.getQfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixed>\n";
		}
		if (nonconformload.getQfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixedPct>";
			rdfXmlResource += nonconformload.getQfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixedPct>\n";
		}
		if (nonconformload.getSubstationPreferredVoltage() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.substationPreferredVoltage>";
			rdfXmlResource += nonconformload.getSubstationPreferredVoltage().toString();
			rdfXmlResource += "</cim:EnergyConsumer.substationPreferredVoltage>\n";
		}
		if (nonconformload.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += nonconformload.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (nonconformload.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += nonconformload.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (nonconformload.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += nonconformload.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (nonconformload.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += nonconformload.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (nonconformload.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += nonconformload.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (nonconformload.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += nonconformload.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (nonconformload.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += nonconformload.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (nonconformload.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += nonconformload.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (nonconformload.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += nonconformload.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (nonconformload.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += nonconformload.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (nonconformload.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += nonconformload.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (nonconformload.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += nonconformload.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (nonconformload.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += nonconformload.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (nonconformload.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += nonconformload.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (nonconformload.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += nonconformload.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (nonconformload.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += nonconformload.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (nonconformload.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += nonconformload.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (nonconformload.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += nonconformload.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (nonconformload.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += nonconformload.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (nonconformload.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += nonconformload.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (nonconformload.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += nonconformload.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (nonconformload.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += nonconformload.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (nonconformload.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += nonconformload.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (nonconformload.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += nonconformload.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (nonconformload.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += nonconformload.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (nonconformload.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += nonconformload.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (nonconformload.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += nonconformload.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (nonconformload.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += nonconformload.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (nonconformload.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += nonconformload.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (nonconformload.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += nonconformload.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (nonconformload.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += nonconformload.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (nonconformload.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + nonconformload.getRpnCondition() + "\"/>\n";
		}
		if (nonconformload.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += nonconformload.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (nonconformload.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + nonconformload.getSchemeType() + "\"/>\n";
		}
		if (nonconformload.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + nonconformload.getSeasonType() + "\"/>\n";
		}
		if (nonconformload.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + nonconformload.getSubtaskNumber() + "\"/>\n";
		}
		if (nonconformload.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += nonconformload.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (nonconformload.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += nonconformload.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (nonconformload.getMRID() != null){
			rdfXmlResource += "\t</cim:NonConformLoad>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.NonConformLoadGroup nonconformloadgroup){
		String rdfXmlResource = "";
		if (nonconformloadgroup.getMRID() != null){
			rdfXmlResource = "\t<cim:NonConformLoadGroup rdf:ID = \"_" + nonconformloadgroup.getMRID() + "\">\n";
		}
		if (nonconformloadgroup.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += nonconformloadgroup.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (nonconformloadgroup.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += nonconformloadgroup.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (nonconformloadgroup.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += nonconformloadgroup.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (nonconformloadgroup.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += nonconformloadgroup.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (nonconformloadgroup.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += nonconformloadgroup.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (nonconformloadgroup.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + nonconformloadgroup.getRpnCondition() + "\"/>\n";
		}
		if (nonconformloadgroup.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += nonconformloadgroup.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (nonconformloadgroup.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + nonconformloadgroup.getSchemeType() + "\"/>\n";
		}
		if (nonconformloadgroup.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + nonconformloadgroup.getSeasonType() + "\"/>\n";
		}
		if (nonconformloadgroup.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + nonconformloadgroup.getSubtaskNumber() + "\"/>\n";
		}
		if (nonconformloadgroup.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += nonconformloadgroup.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (nonconformloadgroup.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += nonconformloadgroup.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (nonconformloadgroup.getMRID() != null){
			rdfXmlResource += "\t</cim:NonConformLoadGroup>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.LoadModel.StationSupply stationsupply){
		String rdfXmlResource = "";
		if (stationsupply.getMRID() != null){
			rdfXmlResource = "\t<cim:StationSupply rdf:ID = \"_" + stationsupply.getMRID() + "\">\n";
		}
		if (stationsupply.getCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.Cluster rdf:resource=\"#_" + stationsupply.getCluster().getMRID() + "\"/>\n";
		}
		if (stationsupply.getVoltageCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.VoltageCluster rdf:resource=\"#_" + stationsupply.getVoltageCluster().getMRID() + "\"/>\n";
		}
		if (stationsupply.getSubstationFeedingFrom() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.SubstationFeedingFrom rdf:resource=\"#_" + stationsupply.getSubstationFeedingFrom().getMRID() + "\"/>\n";
		}
		if (stationsupply.getLoadResponse() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.LoadResponse rdf:resource=\"#_" + stationsupply.getLoadResponse().getMRID() + "\"/>\n";
		}
		if (stationsupply.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + stationsupply.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (stationsupply.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + stationsupply.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (stationsupply.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + stationsupply.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (stationsupply.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + stationsupply.getSvStatus().getMRID() + "\"/>\n";
		}
		if (stationsupply.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: stationsupply.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (stationsupply.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + stationsupply.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (stationsupply.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + stationsupply.getAssets().getMRID() + "\"/>\n";
		}
		if (stationsupply.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + stationsupply.getLocation().getMRID() + "\"/>\n";
		}
		if (stationsupply.getClusterLabel() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.clusterLabel>";
			rdfXmlResource += stationsupply.getClusterLabel().toString();
			rdfXmlResource += "</nti:EnergyConsumer.clusterLabel>\n";
		}
		if (stationsupply.getCustomerCount() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.customerCount>";
			rdfXmlResource += stationsupply.getCustomerCount().toString();
			rdfXmlResource += "</cim:EnergyConsumer.customerCount>\n";
		}
		if (stationsupply.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.grounded>";
			rdfXmlResource += stationsupply.getGrounded().toString();
			rdfXmlResource += "</cim:EnergyConsumer.grounded>\n";
		}
		if (stationsupply.getIsOutLier() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isOutLier>";
			rdfXmlResource += stationsupply.getIsOutLier().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isOutLier>\n";
		}
		if (stationsupply.getIsTransformerNeedToConnectToSubstation() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>";
			rdfXmlResource += stationsupply.getIsTransformerNeedToConnectToSubstation().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>\n";
		}
		if (stationsupply.getP() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.p>";
			rdfXmlResource += stationsupply.getP().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.p>\n";
		}
		if (stationsupply.getPfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixed>";
			rdfXmlResource += stationsupply.getPfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixed>\n";
		}
		if (stationsupply.getPfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixedPct>";
			rdfXmlResource += stationsupply.getPfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixedPct>\n";
		}
		if (stationsupply.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + stationsupply.getPhaseConnection() + "\"/>\n";
		}
		if (stationsupply.getQ() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.q>";
			rdfXmlResource += stationsupply.getQ().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.q>\n";
		}
		if (stationsupply.getQfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixed>";
			rdfXmlResource += stationsupply.getQfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixed>\n";
		}
		if (stationsupply.getQfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixedPct>";
			rdfXmlResource += stationsupply.getQfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixedPct>\n";
		}
		if (stationsupply.getSubstationPreferredVoltage() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.substationPreferredVoltage>";
			rdfXmlResource += stationsupply.getSubstationPreferredVoltage().toString();
			rdfXmlResource += "</cim:EnergyConsumer.substationPreferredVoltage>\n";
		}
		if (stationsupply.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += stationsupply.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (stationsupply.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += stationsupply.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (stationsupply.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += stationsupply.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (stationsupply.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += stationsupply.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (stationsupply.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += stationsupply.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (stationsupply.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += stationsupply.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (stationsupply.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += stationsupply.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (stationsupply.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += stationsupply.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (stationsupply.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += stationsupply.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (stationsupply.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += stationsupply.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (stationsupply.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += stationsupply.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (stationsupply.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += stationsupply.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (stationsupply.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += stationsupply.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (stationsupply.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += stationsupply.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (stationsupply.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += stationsupply.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (stationsupply.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += stationsupply.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (stationsupply.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += stationsupply.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (stationsupply.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += stationsupply.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (stationsupply.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += stationsupply.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (stationsupply.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += stationsupply.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (stationsupply.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += stationsupply.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (stationsupply.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += stationsupply.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (stationsupply.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += stationsupply.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (stationsupply.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += stationsupply.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (stationsupply.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += stationsupply.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (stationsupply.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += stationsupply.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (stationsupply.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += stationsupply.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (stationsupply.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += stationsupply.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (stationsupply.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += stationsupply.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (stationsupply.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += stationsupply.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (stationsupply.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += stationsupply.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (stationsupply.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + stationsupply.getRpnCondition() + "\"/>\n";
		}
		if (stationsupply.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += stationsupply.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (stationsupply.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + stationsupply.getSchemeType() + "\"/>\n";
		}
		if (stationsupply.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + stationsupply.getSeasonType() + "\"/>\n";
		}
		if (stationsupply.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + stationsupply.getSubtaskNumber() + "\"/>\n";
		}
		if (stationsupply.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += stationsupply.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (stationsupply.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += stationsupply.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (stationsupply.getMRID() != null){
			rdfXmlResource += "\t</cim:StationSupply>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Meas.Limit limit){
		String rdfXmlResource = "";
		if (limit.getMRID() != null){
			rdfXmlResource = "\t<cim:Limit rdf:ID = \"_" + limit.getMRID() + "\">\n";
		}
		if (limit.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += limit.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (limit.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += limit.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (limit.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += limit.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (limit.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += limit.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (limit.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += limit.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (limit.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + limit.getRpnCondition() + "\"/>\n";
		}
		if (limit.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += limit.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (limit.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + limit.getSchemeType() + "\"/>\n";
		}
		if (limit.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + limit.getSeasonType() + "\"/>\n";
		}
		if (limit.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + limit.getSubtaskNumber() + "\"/>\n";
		}
		if (limit.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += limit.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (limit.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += limit.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (limit.getMRID() != null){
			rdfXmlResource += "\t</cim:Limit>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Meas.LimitSet limitset){
		String rdfXmlResource = "";
		if (limitset.getMRID() != null){
			rdfXmlResource = "\t<cim:LimitSet rdf:ID = \"_" + limitset.getMRID() + "\">\n";
		}
		if (limitset.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += limitset.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (limitset.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += limitset.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (limitset.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += limitset.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (limitset.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += limitset.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (limitset.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += limitset.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (limitset.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + limitset.getRpnCondition() + "\"/>\n";
		}
		if (limitset.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += limitset.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (limitset.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + limitset.getSchemeType() + "\"/>\n";
		}
		if (limitset.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + limitset.getSeasonType() + "\"/>\n";
		}
		if (limitset.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + limitset.getSubtaskNumber() + "\"/>\n";
		}
		if (limitset.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += limitset.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (limitset.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += limitset.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (limitset.getIsPercentageLimits() != null){
			rdfXmlResource += "\t\t<cim:LimitSet.isPercentageLimits>";
			rdfXmlResource += limitset.getIsPercentageLimits().toString();
			rdfXmlResource += "</cim:LimitSet.isPercentageLimits>\n";
		}
		if (limitset.getMRID() != null){
			rdfXmlResource += "\t</cim:LimitSet>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.CurrentRelay currentrelay){
		String rdfXmlResource = "";
		if (currentrelay.getMRID() != null){
			rdfXmlResource = "\t<cim:CurrentRelay rdf:ID = \"_" + currentrelay.getMRID() + "\">\n";
		}
		if (currentrelay.getConductingEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ConductingEquipment: currentrelay.getConductingEquipments()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ConductingEquipments rdf:resource=\"#_" + ConductingEquipment.getMRID() + "\"/>\n";
			}
		}
		if (currentrelay.getConnectivityNodeForMaxVoltage() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.ConnectivityNodeForMaxVoltage rdf:resource=\"#_" + currentrelay.getConnectivityNodeForMaxVoltage().getMRID() + "\"/>\n";
		}
		if (currentrelay.getTerminalInTheEndOfProtectedObject() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalInTheEndOfProtectedObject rdf:resource=\"#_" + currentrelay.getTerminalInTheEndOfProtectedObject().getMRID() + "\"/>\n";
		}
		if (currentrelay.getterminalsForPowerTransformerForkLV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: currentrelay.getterminalsForPowerTransformerForkLV()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalsForPowerTransformerForkLV rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (currentrelay.getterminalForMaxLoadFlowCurrent() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalForMaxLoadFlowCurrent rdf:resource=\"#_" + currentrelay.getterminalForMaxLoadFlowCurrent().getMRID() + "\"/>\n";
		}
		if (currentrelay.getterminalsForPowerTransformerForkHV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: currentrelay.getterminalsForPowerTransformerForkHV()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalsForPowerTransformerForkHV rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (currentrelay.getTerminalForScCurrentInMainArea() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalForScCurrentInMainArea rdf:resource=\"#_" + currentrelay.getTerminalForScCurrentInMainArea().getMRID() + "\"/>\n";
		}
		if (currentrelay.getTerminalsForACLineSegmentFork() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: currentrelay.getTerminalsForACLineSegmentFork()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalsForACLineSegmentFork rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (currentrelay.getProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel rdf:resource=\"#_" + currentrelay.getProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel().getMRID() + "\"/>\n";
		}
		if (currentrelay.getAdjacentProtectionEquipmentForSecondLevel() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.AdjacentProtectionEquipmentForSecondLevel rdf:resource=\"#_" + currentrelay.getAdjacentProtectionEquipmentForSecondLevel().getMRID() + "\"/>\n";
		}
		if (currentrelay.getProtectionsForWichThisProtectionIsAdjacent() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: currentrelay.getProtectionsForWichThisProtectionIsAdjacent()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectionsForWichThisProtectionIsAdjacent rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (currentrelay.getAdjacentProtections() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: currentrelay.getAdjacentProtections()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.AdjacentProtections rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
//		if (currentrelay.getProtectedSwitches() != null){
//			for (ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectedSwitch: currentrelay.getProtectedSwitches()){
//				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectedSwitches rdf:resource=\"#_" + ProtectedSwitch.getMRID() + "\"/>\n";
//			}
//		}
		if (currentrelay.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + currentrelay.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (currentrelay.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + currentrelay.getAssets().getMRID() + "\"/>\n";
		}
		if (currentrelay.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + currentrelay.getLocation().getMRID() + "\"/>\n";
		}
		if (currentrelay.getHighLimit() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.highLimit>";
			rdfXmlResource += currentrelay.getHighLimit().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.highLimit>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForOnePhaseSCLine() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.koefOfcurrentDistributionForOnePhaseSCLine>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForOnePhaseSCLine().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.koefOfcurrentDistributionForOnePhaseSCLine>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForTwoPhaseSCLine() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.koefOfcurrentDistributionForTwoPhaseSCLine>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForTwoPhaseSCLine().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.koefOfcurrentDistributionForTwoPhaseSCLine>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForTwoPhaseSCTransformer() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.KoefOfcurrentDistributionForTwoPhaseSCTransformer>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForTwoPhaseSCTransformer().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.KoefOfcurrentDistributionForTwoPhaseSCTransformer>\n";
		}
		if (currentrelay.getLowLimit() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.lowLimit>";
			rdfXmlResource += currentrelay.getLowLimit().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.lowLimit>\n";
		}
		if (currentrelay.getMaxLoadFlowCurrent() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxLoadFlowCurrent>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxLoadFlowCurrent>\n";
		}
		if (currentrelay.getMaxSCCurrentPhaseInMainAreaForSensitivity() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxSCCurrentPhaseInMainAreaForSensitivity>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxSCCurrentPhaseInMainAreaForSensitivity>\n";
		}
		if (currentrelay.getMaxScPhInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxScPhInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxScPhInMainArea>\n";
		}
		if (currentrelay.getMaxScSeqInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxScSeqInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxScSeqInMainArea>\n";
		}
		if (currentrelay.getMaxVoltageFromBeginingOfMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxVoltageFromBeginingOfMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxVoltageFromBeginingOfMainArea>\n";
		}
		if (currentrelay.getMinScPhInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minScPhInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minScPhInMainArea>\n";
		}
		if (currentrelay.getMinScSeqInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minScSeqInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minScSeqInMainArea>\n";
		}
		if (currentrelay.getMinVoltageFromBeginingOfMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minVoltageFromBeginingOfMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minVoltageFromBeginingOfMainArea>\n";
		}
		if (currentrelay.getPowerDirectionFlag() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.powerDirectionFlag>";
			rdfXmlResource += currentrelay.getPowerDirectionFlag().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.powerDirectionFlag>\n";
		}
		if (currentrelay.getProtectionType() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.protectionType rdf:resource=\"" + this.baseURI + "#ProtectionType." + currentrelay.getProtectionType() + "\"/>\n";
		}
		if (currentrelay.getRelayDelayTime() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.relayDelayTime>";
			rdfXmlResource += currentrelay.getRelayDelayTime().getValue().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.relayDelayTime>\n";
		}
		if (currentrelay.getSensitivityKoef1() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef1>";
			rdfXmlResource += currentrelay.getSensitivityKoef1().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef1>\n";
		}
		if (currentrelay.getSensitivityKoef2() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef2>";
			rdfXmlResource += currentrelay.getSensitivityKoef2().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef2>\n";
		}
		if (currentrelay.getSensitivityKoef4() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef4>";
			rdfXmlResource += currentrelay.getSensitivityKoef4().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef4>\n";
		}
		if (currentrelay.getSensitivityKoef5() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef5>";
			rdfXmlResource += currentrelay.getSensitivityKoef5().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef5>\n";
		}
		if (currentrelay.getTripTimeOfAdjacentProtection() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.tripTimeOfAdjacentProtection>";
			rdfXmlResource += currentrelay.getTripTimeOfAdjacentProtection().getValue().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.tripTimeOfAdjacentProtection>\n";
		}
		if (currentrelay.getUnitMultiplier() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.unitMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + currentrelay.getUnitMultiplier() + "\"/>\n";
		}
		if (currentrelay.getUnitSymbol() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.unitSymbol rdf:resource=\"" + this.baseURI + "#UnitSymbol." + currentrelay.getUnitSymbol() + "\"/>\n";
		}
		if (currentrelay.getVendor() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.vendor rdf:resource=\"" + this.baseURI + "#ProtectionEquipmentsVendor." + currentrelay.getVendor() + "\"/>\n";
		}
		if (currentrelay.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += currentrelay.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (currentrelay.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += currentrelay.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (currentrelay.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += currentrelay.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (currentrelay.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += currentrelay.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (currentrelay.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += currentrelay.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (currentrelay.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += currentrelay.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (currentrelay.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += currentrelay.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (currentrelay.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += currentrelay.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (currentrelay.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += currentrelay.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (currentrelay.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += currentrelay.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (currentrelay.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += currentrelay.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (currentrelay.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += currentrelay.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (currentrelay.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += currentrelay.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (currentrelay.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += currentrelay.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (currentrelay.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += currentrelay.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (currentrelay.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += currentrelay.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (currentrelay.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += currentrelay.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (currentrelay.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += currentrelay.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (currentrelay.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += currentrelay.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (currentrelay.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += currentrelay.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (currentrelay.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += currentrelay.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (currentrelay.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += currentrelay.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (currentrelay.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += currentrelay.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (currentrelay.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += currentrelay.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (currentrelay.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + currentrelay.getRpnCondition() + "\"/>\n";
		}
		if (currentrelay.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += currentrelay.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (currentrelay.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + currentrelay.getSchemeType() + "\"/>\n";
		}
		if (currentrelay.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + currentrelay.getSeasonType() + "\"/>\n";
		}
		if (currentrelay.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + currentrelay.getSubtaskNumber() + "\"/>\n";
		}
		if (currentrelay.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += currentrelay.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (currentrelay.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += currentrelay.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (currentrelay.getCurrentForCalculationNegSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationNegSeqStep1>";
			rdfXmlResource += currentrelay.getCurrentForCalculationNegSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationNegSeqStep1>\n";
		}
		if (currentrelay.getCurrentForCalculationNegSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationNegSeqStep2>";
			rdfXmlResource += currentrelay.getCurrentForCalculationNegSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationNegSeqStep2>\n";
		}
		if (currentrelay.getCurrentForCalculationNegSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationNegSeqStep3>";
			rdfXmlResource += currentrelay.getCurrentForCalculationNegSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationNegSeqStep3>\n";
		}
		if (currentrelay.getCurrentForCalculationPosSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationPosSeqStep1>";
			rdfXmlResource += currentrelay.getCurrentForCalculationPosSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationPosSeqStep1>\n";
		}
		if (currentrelay.getCurrentForCalculationPosSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationPosSeqStep2>";
			rdfXmlResource += currentrelay.getCurrentForCalculationPosSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationPosSeqStep2>\n";
		}
		if (currentrelay.getCurrentForCalculationPosSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationPosSeqStep3>";
			rdfXmlResource += currentrelay.getCurrentForCalculationPosSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationPosSeqStep3>\n";
		}
		if (currentrelay.getCurrentForCalculationZeroSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationZeroSeqStep1>";
			rdfXmlResource += currentrelay.getCurrentForCalculationZeroSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationZeroSeqStep1>\n";
		}
		if (currentrelay.getCurrentForCalculationZeroSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationZeroSeqStep2>";
			rdfXmlResource += currentrelay.getCurrentForCalculationZeroSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationZeroSeqStep2>\n";
		}
		if (currentrelay.getCurrentForCalculationZeroSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentForCalculationZeroSeqStep3>";
			rdfXmlResource += currentrelay.getCurrentForCalculationZeroSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentForCalculationZeroSeqStep3>\n";
		}
		if (currentrelay.getCurrentLimit1() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.currentLimit1>";
			rdfXmlResource += currentrelay.getCurrentLimit1().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.currentLimit1>\n";
		}
		if (currentrelay.getCurrentLimit2() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.currentLimit2>";
			rdfXmlResource += currentrelay.getCurrentLimit2().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.currentLimit2>\n";
		}
		if (currentrelay.getCurrentLimit3() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.currentLimit3>";
			rdfXmlResource += currentrelay.getCurrentLimit3().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.currentLimit3>\n";
		}
		if (currentrelay.getCurrentLimit4() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentLimit4>";
			rdfXmlResource += currentrelay.getCurrentLimit4().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentLimit4>\n";
		}
		if (currentrelay.getCurrentLimit5() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentLimit5>";
			rdfXmlResource += currentrelay.getCurrentLimit5().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentLimit5>\n";
		}
		if (currentrelay.getCurrentOfAdjacentProtectionStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentOfAdjacentProtectionStep1>";
			rdfXmlResource += currentrelay.getCurrentOfAdjacentProtectionStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentOfAdjacentProtectionStep1>\n";
		}
		if (currentrelay.getCurrentOfAdjacentProtectionStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentOfAdjacentProtectionStep2>";
			rdfXmlResource += currentrelay.getCurrentOfAdjacentProtectionStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentOfAdjacentProtectionStep2>\n";
		}
		if (currentrelay.getCurrentOfAdjacentProtectionStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.currentOfAdjacentProtectionStep3>";
			rdfXmlResource += currentrelay.getCurrentOfAdjacentProtectionStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.currentOfAdjacentProtectionStep3>\n";
		}
		if (currentrelay.getInverseTimeFlag() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.inverseTimeFlag>";
			rdfXmlResource += currentrelay.getInverseTimeFlag().toString();
			rdfXmlResource += "</cim:CurrentRelay.inverseTimeFlag>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.koefOfcurrentDistributionForStep1>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForStep1().toString();
			rdfXmlResource += "</nti:CurrentRelay.koefOfcurrentDistributionForStep1>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.koefOfcurrentDistributionForStep2>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForStep2().toString();
			rdfXmlResource += "</nti:CurrentRelay.koefOfcurrentDistributionForStep2>\n";
		}
		if (currentrelay.getKoefOfcurrentDistributionForStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.koefOfcurrentDistributionForStep3>";
			rdfXmlResource += currentrelay.getKoefOfcurrentDistributionForStep3().toString();
			rdfXmlResource += "</nti:CurrentRelay.koefOfcurrentDistributionForStep3>\n";
		}
		if (currentrelay.getPowerTransformerForkNominalCurrent() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.powerTransformerForkNominalCurrent>";
			rdfXmlResource += currentrelay.getPowerTransformerForkNominalCurrent().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.powerTransformerForkNominalCurrent>\n";
		}
		if (currentrelay.getTimeDelay1() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.timeDelay1>";
			rdfXmlResource += currentrelay.getTimeDelay1().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.timeDelay1>\n";
		}
		if (currentrelay.getTimeDelay2() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.timeDelay2>";
			rdfXmlResource += currentrelay.getTimeDelay2().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.timeDelay2>\n";
		}
		if (currentrelay.getTimeDelay3() != null){
			rdfXmlResource += "\t\t<cim:CurrentRelay.timeDelay3>";
			rdfXmlResource += currentrelay.getTimeDelay3().getValue().toString();
			rdfXmlResource += "</cim:CurrentRelay.timeDelay3>\n";
		}
		if (currentrelay.getTimeDelay4() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.timeDelay4>";
			rdfXmlResource += currentrelay.getTimeDelay4().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.timeDelay4>\n";
		}
		if (currentrelay.getTimeDelay5() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.timeDelay5>";
			rdfXmlResource += currentrelay.getTimeDelay5().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.timeDelay5>\n";
		}
		if (currentrelay.getVoltageForCalculationNegSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationNegSeqStep1>";
			rdfXmlResource += currentrelay.getVoltageForCalculationNegSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationNegSeqStep1>\n";
		}
		if (currentrelay.getVoltageForCalculationNegSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationNegSeqStep2>";
			rdfXmlResource += currentrelay.getVoltageForCalculationNegSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationNegSeqStep2>\n";
		}
		if (currentrelay.getVoltageForCalculationNegSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationNegSeqStep3>";
			rdfXmlResource += currentrelay.getVoltageForCalculationNegSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationNegSeqStep3>\n";
		}
		if (currentrelay.getVoltageForCalculationPosSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationPosSeqStep1>";
			rdfXmlResource += currentrelay.getVoltageForCalculationPosSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationPosSeqStep1>\n";
		}
		if (currentrelay.getVoltageForCalculationPosSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationPosSeqStep2>";
			rdfXmlResource += currentrelay.getVoltageForCalculationPosSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationPosSeqStep2>\n";
		}
		if (currentrelay.getVoltageForCalculationPosSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationPosSeqStep3>";
			rdfXmlResource += currentrelay.getVoltageForCalculationPosSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationPosSeqStep3>\n";
		}
		if (currentrelay.getVoltageForCalculationZeroSeqStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationZeroSeqStep1>";
			rdfXmlResource += currentrelay.getVoltageForCalculationZeroSeqStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationZeroSeqStep1>\n";
		}
		if (currentrelay.getVoltageForCalculationZeroSeqStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationZeroSeqStep2>";
			rdfXmlResource += currentrelay.getVoltageForCalculationZeroSeqStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationZeroSeqStep2>\n";
		}
		if (currentrelay.getVoltageForCalculationZeroSeqStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageForCalculationZeroSeqStep3>";
			rdfXmlResource += currentrelay.getVoltageForCalculationZeroSeqStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageForCalculationZeroSeqStep3>\n";
		}
		if (currentrelay.getVoltageLimit1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageLimit1>";
			rdfXmlResource += currentrelay.getVoltageLimit1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageLimit1>\n";
		}
		if (currentrelay.getVoltageLimit2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageLimit2>";
			rdfXmlResource += currentrelay.getVoltageLimit2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageLimit2>\n";
		}
		if (currentrelay.getVoltageLimit3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageLimit3>";
			rdfXmlResource += currentrelay.getVoltageLimit3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageLimit3>\n";
		}
		if (currentrelay.getVoltageOfAdjacentProtectionStep1() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageOfAdjacentProtectionStep1>";
			rdfXmlResource += currentrelay.getVoltageOfAdjacentProtectionStep1().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageOfAdjacentProtectionStep1>\n";
		}
		if (currentrelay.getVoltageOfAdjacentProtectionStep2() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageOfAdjacentProtectionStep2>";
			rdfXmlResource += currentrelay.getVoltageOfAdjacentProtectionStep2().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageOfAdjacentProtectionStep2>\n";
		}
		if (currentrelay.getVoltageOfAdjacentProtectionStep3() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.voltageOfAdjacentProtectionStep3>";
			rdfXmlResource += currentrelay.getVoltageOfAdjacentProtectionStep3().getValue().toString();
			rdfXmlResource += "</nti:CurrentRelay.voltageOfAdjacentProtectionStep3>\n";
		}
		if (currentrelay.getСalculationSequence() != null){
			rdfXmlResource += "\t\t<nti:CurrentRelay.сalculationSequence>";
			rdfXmlResource += currentrelay.getСalculationSequence().toString();
			rdfXmlResource += "</nti:CurrentRelay.сalculationSequence>\n";
		}
		if (currentrelay.getMRID() != null){
			rdfXmlResource += "\t</cim:CurrentRelay>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.ProtectionEquipment protectionequipment){
		String rdfXmlResource = "";
		if (protectionequipment.getMRID() != null){
			rdfXmlResource = "\t<cim:ProtectionEquipment rdf:ID = \"_" + protectionequipment.getMRID() + "\">\n";
		}
		if (protectionequipment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + protectionequipment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + protectionequipment.getAssets().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + protectionequipment.getLocation().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getConductingEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ConductingEquipment: protectionequipment.getConductingEquipments()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ConductingEquipments rdf:resource=\"#_" + ConductingEquipment.getMRID() + "\"/>\n";
			}
		}
		if (protectionequipment.getConnectivityNodeForMaxVoltage() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.ConnectivityNodeForMaxVoltage rdf:resource=\"#_" + protectionequipment.getConnectivityNodeForMaxVoltage().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getTerminalInTheEndOfProtectedObject() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalInTheEndOfProtectedObject rdf:resource=\"#_" + protectionequipment.getTerminalInTheEndOfProtectedObject().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getterminalsForPowerTransformerForkLV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: protectionequipment.getterminalsForPowerTransformerForkLV()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalsForPowerTransformerForkLV rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (protectionequipment.getterminalForMaxLoadFlowCurrent() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalForMaxLoadFlowCurrent rdf:resource=\"#_" + protectionequipment.getterminalForMaxLoadFlowCurrent().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getterminalsForPowerTransformerForkHV() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: protectionequipment.getterminalsForPowerTransformerForkHV()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.terminalsForPowerTransformerForkHV rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (protectionequipment.getTerminalForScCurrentInMainArea() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalForScCurrentInMainArea rdf:resource=\"#_" + protectionequipment.getTerminalForScCurrentInMainArea().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getTerminalsForACLineSegmentFork() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject Terminal: protectionequipment.getTerminalsForACLineSegmentFork()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.TerminalsForACLineSegmentFork rdf:resource=\"#_" + Terminal.getMRID() + "\"/>\n";
			}
		}
		if (protectionequipment.getProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel rdf:resource=\"#_" + protectionequipment.getProtectionEquipmentForWichThisProtectionIsProtectionEquipmentSecondLevel().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getAdjacentProtectionEquipmentForSecondLevel() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.AdjacentProtectionEquipmentForSecondLevel rdf:resource=\"#_" + protectionequipment.getAdjacentProtectionEquipmentForSecondLevel().getMRID() + "\"/>\n";
		}
		if (protectionequipment.getProtectionsForWichThisProtectionIsAdjacent() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: protectionequipment.getProtectionsForWichThisProtectionIsAdjacent()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectionsForWichThisProtectionIsAdjacent rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (protectionequipment.getAdjacentProtections() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: protectionequipment.getAdjacentProtections()){
				rdfXmlResource += "\t\t<cim:ProtectionEquipment.AdjacentProtections rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
//		if (protectionequipment.getProtectedSwitches() != null){
//			for (ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectedSwitch: protectionequipment.getProtectedSwitches()){
//				rdfXmlResource += "\t\t<cim:ProtectionEquipment.ProtectedSwitches rdf:resource=\"#_" + ProtectedSwitch.getMRID() + "\"/>\n";
//			}
//		}
		if (protectionequipment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += protectionequipment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (protectionequipment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += protectionequipment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (protectionequipment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += protectionequipment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (protectionequipment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += protectionequipment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (protectionequipment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += protectionequipment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (protectionequipment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += protectionequipment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (protectionequipment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += protectionequipment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (protectionequipment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += protectionequipment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (protectionequipment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += protectionequipment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (protectionequipment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += protectionequipment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (protectionequipment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += protectionequipment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (protectionequipment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += protectionequipment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (protectionequipment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += protectionequipment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (protectionequipment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += protectionequipment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (protectionequipment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += protectionequipment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (protectionequipment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += protectionequipment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (protectionequipment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += protectionequipment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (protectionequipment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += protectionequipment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (protectionequipment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += protectionequipment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (protectionequipment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += protectionequipment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (protectionequipment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += protectionequipment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (protectionequipment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += protectionequipment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (protectionequipment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += protectionequipment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (protectionequipment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += protectionequipment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (protectionequipment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + protectionequipment.getRpnCondition() + "\"/>\n";
		}
		if (protectionequipment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += protectionequipment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (protectionequipment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + protectionequipment.getSchemeType() + "\"/>\n";
		}
		if (protectionequipment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + protectionequipment.getSeasonType() + "\"/>\n";
		}
		if (protectionequipment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + protectionequipment.getSubtaskNumber() + "\"/>\n";
		}
		if (protectionequipment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += protectionequipment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (protectionequipment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += protectionequipment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (protectionequipment.getHighLimit() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.highLimit>";
			rdfXmlResource += protectionequipment.getHighLimit().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.highLimit>\n";
		}
		if (protectionequipment.getKoefOfcurrentDistributionForOnePhaseSCLine() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.koefOfcurrentDistributionForOnePhaseSCLine>";
			rdfXmlResource += protectionequipment.getKoefOfcurrentDistributionForOnePhaseSCLine().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.koefOfcurrentDistributionForOnePhaseSCLine>\n";
		}
		if (protectionequipment.getKoefOfcurrentDistributionForTwoPhaseSCLine() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.koefOfcurrentDistributionForTwoPhaseSCLine>";
			rdfXmlResource += protectionequipment.getKoefOfcurrentDistributionForTwoPhaseSCLine().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.koefOfcurrentDistributionForTwoPhaseSCLine>\n";
		}
		if (protectionequipment.getKoefOfcurrentDistributionForTwoPhaseSCTransformer() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.KoefOfcurrentDistributionForTwoPhaseSCTransformer>";
			rdfXmlResource += protectionequipment.getKoefOfcurrentDistributionForTwoPhaseSCTransformer().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.KoefOfcurrentDistributionForTwoPhaseSCTransformer>\n";
		}
		if (protectionequipment.getLowLimit() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.lowLimit>";
			rdfXmlResource += protectionequipment.getLowLimit().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.lowLimit>\n";
		}
		if (protectionequipment.getMaxLoadFlowCurrent() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxLoadFlowCurrent>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxLoadFlowCurrent>\n";
		}
		if (protectionequipment.getMaxSCCurrentPhaseInMainAreaForSensitivity() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxSCCurrentPhaseInMainAreaForSensitivity>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxSCCurrentPhaseInMainAreaForSensitivity>\n";
		}
		if (protectionequipment.getMaxScPhInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxScPhInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxScPhInMainArea>\n";
		}
		if (protectionequipment.getMaxScSeqInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxScSeqInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxScSeqInMainArea>\n";
		}
		if (protectionequipment.getMaxVoltageFromBeginingOfMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.maxVoltageFromBeginingOfMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.maxVoltageFromBeginingOfMainArea>\n";
		}
		if (protectionequipment.getMinScPhInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minScPhInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minScPhInMainArea>\n";
		}
		if (protectionequipment.getMinScSeqInMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minScSeqInMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minScSeqInMainArea>\n";
		}
		if (protectionequipment.getMinVoltageFromBeginingOfMainArea() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.minVoltageFromBeginingOfMainArea>";
			rdfXmlResource += "</nti:ProtectionEquipment.minVoltageFromBeginingOfMainArea>\n";
		}
		if (protectionequipment.getPowerDirectionFlag() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.powerDirectionFlag>";
			rdfXmlResource += protectionequipment.getPowerDirectionFlag().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.powerDirectionFlag>\n";
		}
		if (protectionequipment.getProtectionType() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.protectionType rdf:resource=\"" + this.baseURI + "#ProtectionType." + protectionequipment.getProtectionType() + "\"/>\n";
		}
		if (protectionequipment.getRelayDelayTime() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.relayDelayTime>";
			rdfXmlResource += protectionequipment.getRelayDelayTime().getValue().toString();
			rdfXmlResource += "</cim:ProtectionEquipment.relayDelayTime>\n";
		}
		if (protectionequipment.getSensitivityKoef1() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef1>";
			rdfXmlResource += protectionequipment.getSensitivityKoef1().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef1>\n";
		}
		if (protectionequipment.getSensitivityKoef2() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef2>";
			rdfXmlResource += protectionequipment.getSensitivityKoef2().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef2>\n";
		}
		if (protectionequipment.getSensitivityKoef4() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef4>";
			rdfXmlResource += protectionequipment.getSensitivityKoef4().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef4>\n";
		}
		if (protectionequipment.getSensitivityKoef5() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.sensitivityKoef5>";
			rdfXmlResource += protectionequipment.getSensitivityKoef5().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.sensitivityKoef5>\n";
		}
		if (protectionequipment.getTripTimeOfAdjacentProtection() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.tripTimeOfAdjacentProtection>";
			rdfXmlResource += protectionequipment.getTripTimeOfAdjacentProtection().getValue().toString();
			rdfXmlResource += "</nti:ProtectionEquipment.tripTimeOfAdjacentProtection>\n";
		}
		if (protectionequipment.getUnitMultiplier() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.unitMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + protectionequipment.getUnitMultiplier() + "\"/>\n";
		}
		if (protectionequipment.getUnitSymbol() != null){
			rdfXmlResource += "\t\t<cim:ProtectionEquipment.unitSymbol rdf:resource=\"" + this.baseURI + "#UnitSymbol." + protectionequipment.getUnitSymbol() + "\"/>\n";
		}
		if (protectionequipment.getVendor() != null){
			rdfXmlResource += "\t\t<nti:ProtectionEquipment.vendor rdf:resource=\"" + this.baseURI + "#ProtectionEquipmentsVendor." + protectionequipment.getVendor() + "\"/>\n";
		}
		if (protectionequipment.getMRID() != null){
			rdfXmlResource += "\t</cim:ProtectionEquipment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.RecloseSequence reclosesequence){
		String rdfXmlResource = "";
		if (reclosesequence.getMRID() != null){
			rdfXmlResource = "\t<cim:RecloseSequence rdf:ID = \"_" + reclosesequence.getMRID() + "\">\n";
		}
		if (reclosesequence.getProtectedSwitch() != null){
			rdfXmlResource += "\t\t<cim:RecloseSequence.ProtectedSwitch rdf:resource=\"#_" + reclosesequence.getProtectedSwitch().getMRID() + "\"/>\n";
		}
		if (reclosesequence.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += reclosesequence.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (reclosesequence.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += reclosesequence.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (reclosesequence.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += reclosesequence.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (reclosesequence.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += reclosesequence.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (reclosesequence.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += reclosesequence.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (reclosesequence.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + reclosesequence.getRpnCondition() + "\"/>\n";
		}
		if (reclosesequence.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += reclosesequence.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (reclosesequence.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + reclosesequence.getSchemeType() + "\"/>\n";
		}
		if (reclosesequence.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + reclosesequence.getSeasonType() + "\"/>\n";
		}
		if (reclosesequence.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + reclosesequence.getSubtaskNumber() + "\"/>\n";
		}
		if (reclosesequence.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += reclosesequence.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (reclosesequence.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += reclosesequence.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (reclosesequence.getRecloseDelay() != null){
			rdfXmlResource += "\t\t<cim:RecloseSequence.recloseDelay>";
			rdfXmlResource += reclosesequence.getRecloseDelay().getValue().toString();
			rdfXmlResource += "</cim:RecloseSequence.recloseDelay>\n";
		}
		if (reclosesequence.getRecloseStep() != null){
			rdfXmlResource += "\t\t<cim:RecloseSequence.recloseStep>";
			rdfXmlResource += reclosesequence.getRecloseStep().toString();
			rdfXmlResource += "</cim:RecloseSequence.recloseStep>\n";
		}
		if (reclosesequence.getMRID() != null){
			rdfXmlResource += "\t</cim:RecloseSequence>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.CILO cilo){
		String rdfXmlResource = "";
		if (cilo.getMRID() != null){
			rdfXmlResource = "\t<cim:CILO rdf:ID = \"_" + cilo.getMRID() + "\">\n";
		}
		if (cilo.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + cilo.getAssets().getMRID() + "\"/>\n";
		}
		if (cilo.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + cilo.getLocation().getMRID() + "\"/>\n";
		}
		if (cilo.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += cilo.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (cilo.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += cilo.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (cilo.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += cilo.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (cilo.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += cilo.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (cilo.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += cilo.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (cilo.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += cilo.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (cilo.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += cilo.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (cilo.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += cilo.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (cilo.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += cilo.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (cilo.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += cilo.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (cilo.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += cilo.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (cilo.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += cilo.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (cilo.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += cilo.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (cilo.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += cilo.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (cilo.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += cilo.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (cilo.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += cilo.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (cilo.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += cilo.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (cilo.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += cilo.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (cilo.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += cilo.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (cilo.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += cilo.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (cilo.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + cilo.getRpnCondition() + "\"/>\n";
		}
		if (cilo.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += cilo.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (cilo.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + cilo.getSchemeType() + "\"/>\n";
		}
		if (cilo.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + cilo.getSeasonType() + "\"/>\n";
		}
		if (cilo.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + cilo.getSubtaskNumber() + "\"/>\n";
		}
		if (cilo.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += cilo.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (cilo.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += cilo.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (cilo.getMRID() != null){
			rdfXmlResource += "\t</cim:CILO>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.Common_LN common_ln){
		String rdfXmlResource = "";
		if (common_ln.getMRID() != null){
			rdfXmlResource = "\t<cim:Common_LN rdf:ID = \"_" + common_ln.getMRID() + "\">\n";
		}
		if (common_ln.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + common_ln.getAssets().getMRID() + "\"/>\n";
		}
		if (common_ln.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + common_ln.getLocation().getMRID() + "\"/>\n";
		}
		if (common_ln.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += common_ln.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (common_ln.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += common_ln.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (common_ln.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += common_ln.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (common_ln.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += common_ln.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (common_ln.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += common_ln.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (common_ln.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += common_ln.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (common_ln.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += common_ln.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (common_ln.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += common_ln.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (common_ln.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += common_ln.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (common_ln.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += common_ln.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (common_ln.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += common_ln.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (common_ln.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += common_ln.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (common_ln.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += common_ln.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (common_ln.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += common_ln.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (common_ln.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += common_ln.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (common_ln.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += common_ln.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (common_ln.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += common_ln.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (common_ln.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += common_ln.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (common_ln.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += common_ln.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (common_ln.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += common_ln.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (common_ln.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + common_ln.getRpnCondition() + "\"/>\n";
		}
		if (common_ln.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += common_ln.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (common_ln.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + common_ln.getSchemeType() + "\"/>\n";
		}
		if (common_ln.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + common_ln.getSeasonType() + "\"/>\n";
		}
		if (common_ln.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + common_ln.getSubtaskNumber() + "\"/>\n";
		}
		if (common_ln.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += common_ln.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (common_ln.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += common_ln.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (common_ln.getMRID() != null){
			rdfXmlResource += "\t</cim:Common_LN>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.CSWI cswi){
		String rdfXmlResource = "";
		if (cswi.getMRID() != null){
			rdfXmlResource = "\t<cim:CSWI rdf:ID = \"_" + cswi.getMRID() + "\">\n";
		}
		if (cswi.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + cswi.getAssets().getMRID() + "\"/>\n";
		}
		if (cswi.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + cswi.getLocation().getMRID() + "\"/>\n";
		}
		if (cswi.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += cswi.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (cswi.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += cswi.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (cswi.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += cswi.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (cswi.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += cswi.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (cswi.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += cswi.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (cswi.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += cswi.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (cswi.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += cswi.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (cswi.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += cswi.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (cswi.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += cswi.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (cswi.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += cswi.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (cswi.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += cswi.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (cswi.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += cswi.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (cswi.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += cswi.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (cswi.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += cswi.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (cswi.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += cswi.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (cswi.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += cswi.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (cswi.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += cswi.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (cswi.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += cswi.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (cswi.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += cswi.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (cswi.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += cswi.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (cswi.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + cswi.getRpnCondition() + "\"/>\n";
		}
		if (cswi.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += cswi.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (cswi.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + cswi.getSchemeType() + "\"/>\n";
		}
		if (cswi.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + cswi.getSeasonType() + "\"/>\n";
		}
		if (cswi.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + cswi.getSubtaskNumber() + "\"/>\n";
		}
		if (cswi.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += cswi.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (cswi.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += cswi.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (cswi.getMRID() != null){
			rdfXmlResource += "\t</cim:CSWI>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIF pdif){
		String rdfXmlResource = "";
		if (pdif.getMRID() != null){
			rdfXmlResource = "\t<cim:PDIF rdf:ID = \"_" + pdif.getMRID() + "\">\n";
		}
		if (pdif.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + pdif.getAssets().getMRID() + "\"/>\n";
		}
		if (pdif.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + pdif.getLocation().getMRID() + "\"/>\n";
		}
		if (pdif.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += pdif.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (pdif.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += pdif.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (pdif.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += pdif.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (pdif.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += pdif.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (pdif.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += pdif.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (pdif.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += pdif.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (pdif.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += pdif.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (pdif.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += pdif.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (pdif.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += pdif.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (pdif.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += pdif.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (pdif.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += pdif.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (pdif.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += pdif.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (pdif.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += pdif.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (pdif.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += pdif.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (pdif.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += pdif.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (pdif.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += pdif.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (pdif.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += pdif.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (pdif.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += pdif.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (pdif.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += pdif.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (pdif.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += pdif.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (pdif.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + pdif.getRpnCondition() + "\"/>\n";
		}
		if (pdif.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += pdif.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (pdif.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + pdif.getSchemeType() + "\"/>\n";
		}
		if (pdif.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + pdif.getSeasonType() + "\"/>\n";
		}
		if (pdif.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + pdif.getSubtaskNumber() + "\"/>\n";
		}
		if (pdif.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += pdif.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (pdif.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += pdif.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (pdif.getMRID() != null){
			rdfXmlResource += "\t</cim:PDIF>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIS pdis){
		String rdfXmlResource = "";
		if (pdis.getMRID() != null){
			rdfXmlResource = "\t<cim:PDIS rdf:ID = \"_" + pdis.getMRID() + "\">\n";
		}
		if (pdis.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + pdis.getAssets().getMRID() + "\"/>\n";
		}
		if (pdis.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + pdis.getLocation().getMRID() + "\"/>\n";
		}
		if (pdis.getPDIS_Settings() != null){
			rdfXmlResource += "\t\t<cim:PDIS.PDIS_Settings rdf:resource=\"#_" + pdis.getPDIS_Settings().getMRID() + "\"/>\n";
		}
		if (pdis.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += pdis.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (pdis.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += pdis.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (pdis.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += pdis.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (pdis.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += pdis.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (pdis.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += pdis.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (pdis.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += pdis.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (pdis.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += pdis.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (pdis.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += pdis.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (pdis.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += pdis.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (pdis.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += pdis.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (pdis.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += pdis.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (pdis.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += pdis.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (pdis.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += pdis.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (pdis.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += pdis.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (pdis.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += pdis.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (pdis.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += pdis.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (pdis.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += pdis.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (pdis.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += pdis.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (pdis.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += pdis.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (pdis.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += pdis.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (pdis.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + pdis.getRpnCondition() + "\"/>\n";
		}
		if (pdis.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += pdis.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (pdis.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + pdis.getSchemeType() + "\"/>\n";
		}
		if (pdis.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + pdis.getSeasonType() + "\"/>\n";
		}
		if (pdis.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + pdis.getSubtaskNumber() + "\"/>\n";
		}
		if (pdis.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += pdis.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (pdis.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += pdis.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (pdis.getMRID() != null){
			rdfXmlResource += "\t</cim:PDIS>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Protection.LN_61850.PDIS_Settings pdis_settings){
		String rdfXmlResource = "";
		if (pdis_settings.getMRID() != null){
			rdfXmlResource = "\t<cim:PDIS_Settings rdf:ID = \"_" + pdis_settings.getMRID() + "\">\n";
		}
		if (pdis_settings.getPDIS() != null){
			rdfXmlResource += "\t\t<cim:PDIS_Settings.PDIS rdf:resource=\"#_" + pdis_settings.getPDIS().getMRID() + "\"/>\n";
		}
		if (pdis_settings.getMRID() != null){
			rdfXmlResource += "\t</cim:PDIS_Settings>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.StateVariable statevariable){
		String rdfXmlResource = "";
		if (statevariable.getMRID() != null){
			rdfXmlResource = "\t<cim:StateVariable rdf:ID = \"_" + statevariable.getMRID() + "\">\n";
		}
		if (statevariable.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += statevariable.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (statevariable.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += statevariable.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (statevariable.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += statevariable.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (statevariable.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += statevariable.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (statevariable.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += statevariable.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (statevariable.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + statevariable.getRpnCondition() + "\"/>\n";
		}
		if (statevariable.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += statevariable.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (statevariable.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + statevariable.getSchemeType() + "\"/>\n";
		}
		if (statevariable.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + statevariable.getSeasonType() + "\"/>\n";
		}
		if (statevariable.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + statevariable.getSubtaskNumber() + "\"/>\n";
		}
		if (statevariable.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += statevariable.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (statevariable.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += statevariable.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (statevariable.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += statevariable.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (statevariable.getMRID() != null){
			rdfXmlResource += "\t</cim:StateVariable>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvInjection svinjection){
		String rdfXmlResource = "";
		if (svinjection.getMRID() != null){
			rdfXmlResource = "\t<cim:SvInjection rdf:ID = \"_" + svinjection.getMRID() + "\">\n";
		}
		if (svinjection.getTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:SvInjection.TopologicalNode rdf:resource=\"#_" + svinjection.getTopologicalNode().getMRID() + "\"/>\n";
		}
		if (svinjection.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svinjection.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svinjection.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svinjection.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svinjection.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svinjection.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svinjection.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svinjection.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svinjection.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svinjection.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svinjection.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svinjection.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svinjection.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svinjection.getRpnCondition() + "\"/>\n";
		}
		if (svinjection.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svinjection.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svinjection.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svinjection.getSchemeType() + "\"/>\n";
		}
		if (svinjection.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svinjection.getSeasonType() + "\"/>\n";
		}
		if (svinjection.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svinjection.getSubtaskNumber() + "\"/>\n";
		}
		if (svinjection.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svinjection.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svinjection.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svinjection.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svinjection.getMaxQ() != null){
			rdfXmlResource += "\t\t<nti:SvInjection.maxQ>";
			rdfXmlResource += svinjection.getMaxQ().getValue().toString();
			rdfXmlResource += "</nti:SvInjection.maxQ>\n";
		}
		if (svinjection.getMinQ() != null){
			rdfXmlResource += "\t\t<nti:SvInjection.minQ>";
			rdfXmlResource += svinjection.getMinQ().getValue().toString();
			rdfXmlResource += "</nti:SvInjection.minQ>\n";
		}
		if (svinjection.getPInjection() != null){
			rdfXmlResource += "\t\t<cim:SvInjection.pInjection>";
			rdfXmlResource += svinjection.getPInjection().getValue().toString();
			rdfXmlResource += "</cim:SvInjection.pInjection>\n";
		}
		if (svinjection.getPLoad() != null){
			rdfXmlResource += "\t\t<nti:SvInjection.pLoad>";
			rdfXmlResource += svinjection.getPLoad().getValue().toString();
			rdfXmlResource += "</nti:SvInjection.pLoad>\n";
		}
		if (svinjection.getQInjection() != null){
			rdfXmlResource += "\t\t<cim:SvInjection.qInjection>";
			rdfXmlResource += svinjection.getQInjection().getValue().toString();
			rdfXmlResource += "</cim:SvInjection.qInjection>\n";
		}
		if (svinjection.getQLoad() != null){
			rdfXmlResource += "\t\t<nti:SvInjection.qLoad>";
			rdfXmlResource += svinjection.getQLoad().getValue().toString();
			rdfXmlResource += "</nti:SvInjection.qLoad>\n";
		}
		if (svinjection.getMRID() != null){
			rdfXmlResource += "\t</cim:SvInjection>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvPowerFlow svpowerflow){
		String rdfXmlResource = "";
		if (svpowerflow.getMRID() != null){
			rdfXmlResource = "\t<cim:SvPowerFlow rdf:ID = \"_" + svpowerflow.getMRID() + "\">\n";
		}
		if (svpowerflow.getTerminalForResult() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.TerminalForResult rdf:resource=\"#_" + svpowerflow.getTerminalForResult().getMRID() + "\"/>\n";
		}
		if (svpowerflow.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.Terminal rdf:resource=\"#_" + svpowerflow.getTerminal().getMRID() + "\"/>\n";
		}
		if (svpowerflow.getEquipmentFault() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.EquipmentFault rdf:resource=\"#_" + svpowerflow.getEquipmentFault().getMRID() + "\"/>\n";
		}
		if (svpowerflow.getFault() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.Fault rdf:resource=\"#_" + svpowerflow.getFault().getMRID() + "\"/>\n";
		}
		if (svpowerflow.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svpowerflow.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svpowerflow.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svpowerflow.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svpowerflow.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svpowerflow.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svpowerflow.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svpowerflow.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svpowerflow.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svpowerflow.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svpowerflow.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svpowerflow.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svpowerflow.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svpowerflow.getRpnCondition() + "\"/>\n";
		}
		if (svpowerflow.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svpowerflow.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svpowerflow.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svpowerflow.getSchemeType() + "\"/>\n";
		}
		if (svpowerflow.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svpowerflow.getSeasonType() + "\"/>\n";
		}
		if (svpowerflow.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svpowerflow.getSubtaskNumber() + "\"/>\n";
		}
		if (svpowerflow.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svpowerflow.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svpowerflow.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svpowerflow.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svpowerflow.getAngle() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.angle>";
			rdfXmlResource += svpowerflow.getAngle().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.angle>\n";
		}
		if (svpowerflow.getAngleNegativeSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.angleNegativeSeq>";
			rdfXmlResource += svpowerflow.getAngleNegativeSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.angleNegativeSeq>\n";
		}
		if (svpowerflow.getAnglePositiveSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.anglePositiveSeq>";
			rdfXmlResource += svpowerflow.getAnglePositiveSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.anglePositiveSeq>\n";
		}
		if (svpowerflow.getAngleZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.angleZeroSeq>";
			rdfXmlResource += svpowerflow.getAngleZeroSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.angleZeroSeq>\n";
		}
		if (svpowerflow.getCurrent() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.current>";
			rdfXmlResource += svpowerflow.getCurrent().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.current>\n";
		}
		if (svpowerflow.getCurrentNegativeSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.currentNegativeSeq>";
			rdfXmlResource += svpowerflow.getCurrentNegativeSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.currentNegativeSeq>\n";
		}
		if (svpowerflow.getCurrentPositiveSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.currentPositiveSeq>";
			rdfXmlResource += svpowerflow.getCurrentPositiveSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.currentPositiveSeq>\n";
		}
		if (svpowerflow.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:SvPowerFlow.currentZeroSeq>";
			rdfXmlResource += svpowerflow.getCurrentZeroSeq().getValue().toString();
			rdfXmlResource += "</nti:SvPowerFlow.currentZeroSeq>\n";
		}
		if (svpowerflow.getP() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.p>";
			rdfXmlResource += svpowerflow.getP().getValue().toString();
			rdfXmlResource += "</cim:SvPowerFlow.p>\n";
		}
		if (svpowerflow.getQ() != null){
			rdfXmlResource += "\t\t<cim:SvPowerFlow.q>";
			rdfXmlResource += svpowerflow.getQ().getValue().toString();
			rdfXmlResource += "</cim:SvPowerFlow.q>\n";
		}
		if (svpowerflow.getMRID() != null){
			rdfXmlResource += "\t</cim:SvPowerFlow>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvShuntCompensatorSections svshuntcompensatorsections){
		String rdfXmlResource = "";
		if (svshuntcompensatorsections.getMRID() != null){
			rdfXmlResource = "\t<cim:SvShuntCompensatorSections rdf:ID = \"_" + svshuntcompensatorsections.getMRID() + "\">\n";
		}
		if (svshuntcompensatorsections.getShuntCompensator() != null){
			rdfXmlResource += "\t\t<cim:SvShuntCompensatorSections.ShuntCompensator rdf:resource=\"#_" + svshuntcompensatorsections.getShuntCompensator().getMRID() + "\"/>\n";
		}
		if (svshuntcompensatorsections.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svshuntcompensatorsections.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svshuntcompensatorsections.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svshuntcompensatorsections.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svshuntcompensatorsections.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svshuntcompensatorsections.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svshuntcompensatorsections.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svshuntcompensatorsections.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svshuntcompensatorsections.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svshuntcompensatorsections.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svshuntcompensatorsections.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svshuntcompensatorsections.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svshuntcompensatorsections.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svshuntcompensatorsections.getRpnCondition() + "\"/>\n";
		}
		if (svshuntcompensatorsections.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svshuntcompensatorsections.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svshuntcompensatorsections.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svshuntcompensatorsections.getSchemeType() + "\"/>\n";
		}
		if (svshuntcompensatorsections.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svshuntcompensatorsections.getSeasonType() + "\"/>\n";
		}
		if (svshuntcompensatorsections.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svshuntcompensatorsections.getSubtaskNumber() + "\"/>\n";
		}
		if (svshuntcompensatorsections.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svshuntcompensatorsections.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svshuntcompensatorsections.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svshuntcompensatorsections.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svshuntcompensatorsections.getSections() != null){
			rdfXmlResource += "\t\t<cim:SvShuntCompensatorSections.sections>";
			rdfXmlResource += svshuntcompensatorsections.getSections().toString();
			rdfXmlResource += "</cim:SvShuntCompensatorSections.sections>\n";
		}
		if (svshuntcompensatorsections.getMRID() != null){
			rdfXmlResource += "\t</cim:SvShuntCompensatorSections>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvStatus svstatus){
		String rdfXmlResource = "";
		if (svstatus.getMRID() != null){
			rdfXmlResource = "\t<cim:SvStatus rdf:ID = \"_" + svstatus.getMRID() + "\">\n";
		}
		if (svstatus.getConductingEquipment() != null){
			rdfXmlResource += "\t\t<cim:SvStatus.ConductingEquipment rdf:resource=\"#_" + svstatus.getConductingEquipment().getMRID() + "\"/>\n";
		}
		if (svstatus.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svstatus.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svstatus.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svstatus.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svstatus.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svstatus.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svstatus.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svstatus.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svstatus.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svstatus.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svstatus.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svstatus.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svstatus.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svstatus.getRpnCondition() + "\"/>\n";
		}
		if (svstatus.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svstatus.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svstatus.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svstatus.getSchemeType() + "\"/>\n";
		}
		if (svstatus.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svstatus.getSeasonType() + "\"/>\n";
		}
		if (svstatus.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svstatus.getSubtaskNumber() + "\"/>\n";
		}
		if (svstatus.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svstatus.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svstatus.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svstatus.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svstatus.getInService() != null){
			rdfXmlResource += "\t\t<cim:SvStatus.inService>";
			rdfXmlResource += svstatus.getInService().toString();
			rdfXmlResource += "</cim:SvStatus.inService>\n";
		}
		if (svstatus.getMRID() != null){
			rdfXmlResource += "\t</cim:SvStatus>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvTapStep svtapstep){
		String rdfXmlResource = "";
		if (svtapstep.getMRID() != null){
			rdfXmlResource = "\t<cim:SvTapStep rdf:ID = \"_" + svtapstep.getMRID() + "\">\n";
		}
		if (svtapstep.getTapChanger() != null){
			rdfXmlResource += "\t\t<cim:SvTapStep.TapChanger rdf:resource=\"#_" + svtapstep.getTapChanger().getMRID() + "\"/>\n";
		}
		if (svtapstep.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svtapstep.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svtapstep.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svtapstep.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svtapstep.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svtapstep.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svtapstep.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svtapstep.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svtapstep.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svtapstep.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svtapstep.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svtapstep.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svtapstep.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svtapstep.getRpnCondition() + "\"/>\n";
		}
		if (svtapstep.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svtapstep.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svtapstep.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svtapstep.getSchemeType() + "\"/>\n";
		}
		if (svtapstep.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svtapstep.getSeasonType() + "\"/>\n";
		}
		if (svtapstep.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svtapstep.getSubtaskNumber() + "\"/>\n";
		}
		if (svtapstep.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svtapstep.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svtapstep.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svtapstep.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svtapstep.getPosition() != null){
			rdfXmlResource += "\t\t<cim:SvTapStep.position>";
			rdfXmlResource += svtapstep.getPosition().toString();
			rdfXmlResource += "</cim:SvTapStep.position>\n";
		}
		if (svtapstep.getMRID() != null){
			rdfXmlResource += "\t</cim:SvTapStep>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.StateVariables.SvVoltage svvoltage){
		String rdfXmlResource = "";
		if (svvoltage.getMRID() != null){
			rdfXmlResource = "\t<cim:SvVoltage rdf:ID = \"_" + svvoltage.getMRID() + "\">\n";
		}
		if (svvoltage.getConnectivityNodes() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ConnectivityNode: svvoltage.getConnectivityNodes()){
				rdfXmlResource += "\t\t<cim:SvVoltage.ConnectivityNodes rdf:resource=\"#_" + ConnectivityNode.getMRID() + "\"/>\n";
			}
		}
		if (svvoltage.getEquipmentFault() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.EquipmentFault rdf:resource=\"#_" + svvoltage.getEquipmentFault().getMRID() + "\"/>\n";
		}
		if (svvoltage.getFault() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.Fault rdf:resource=\"#_" + svvoltage.getFault().getMRID() + "\"/>\n";
		}
		if (svvoltage.getTopologicalNodeForResult() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.TopologicalNodeForResult rdf:resource=\"#_" + svvoltage.getTopologicalNodeForResult().getMRID() + "\"/>\n";
		}
		if (svvoltage.getTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.TopologicalNode rdf:resource=\"#_" + svvoltage.getTopologicalNode().getMRID() + "\"/>\n";
		}
		if (svvoltage.getIsCalculated() != null){
			rdfXmlResource += "\t\t<nti:StateVariable.isCalculated>";
			rdfXmlResource += svvoltage.getIsCalculated().toString();
			rdfXmlResource += "</nti:StateVariable.isCalculated>\n";
		}
		if (svvoltage.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += svvoltage.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (svvoltage.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += svvoltage.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (svvoltage.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += svvoltage.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (svvoltage.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += svvoltage.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (svvoltage.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += svvoltage.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (svvoltage.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + svvoltage.getRpnCondition() + "\"/>\n";
		}
		if (svvoltage.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += svvoltage.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (svvoltage.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + svvoltage.getSchemeType() + "\"/>\n";
		}
		if (svvoltage.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + svvoltage.getSeasonType() + "\"/>\n";
		}
		if (svvoltage.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + svvoltage.getSubtaskNumber() + "\"/>\n";
		}
		if (svvoltage.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += svvoltage.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (svvoltage.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += svvoltage.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (svvoltage.getAngle() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.angle>";
			rdfXmlResource += svvoltage.getAngle().getValue().toString();
			rdfXmlResource += "</cim:SvVoltage.angle>\n";
		}
		if (svvoltage.getV() != null){
			rdfXmlResource += "\t\t<cim:SvVoltage.v>";
			rdfXmlResource += svvoltage.getV().getValue().toString();
			rdfXmlResource += "</cim:SvVoltage.v>\n";
		}
		if (svvoltage.getMRID() != null){
			rdfXmlResource += "\t</cim:SvVoltage>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.BusNameMarker busnamemarker){
		String rdfXmlResource = "";
		if (busnamemarker.getMRID() != null){
			rdfXmlResource = "\t<cim:BusNameMarker rdf:ID = \"_" + busnamemarker.getMRID() + "\">\n";
		}
		if (busnamemarker.getReportingGroup() != null){
			rdfXmlResource += "\t\t<cim:BusNameMarker.ReportingGroup rdf:resource=\"#_" + busnamemarker.getReportingGroup().getMRID() + "\"/>\n";
		}
		if (busnamemarker.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += busnamemarker.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (busnamemarker.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += busnamemarker.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (busnamemarker.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += busnamemarker.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (busnamemarker.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += busnamemarker.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (busnamemarker.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += busnamemarker.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (busnamemarker.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + busnamemarker.getRpnCondition() + "\"/>\n";
		}
		if (busnamemarker.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += busnamemarker.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (busnamemarker.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + busnamemarker.getSchemeType() + "\"/>\n";
		}
		if (busnamemarker.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + busnamemarker.getSeasonType() + "\"/>\n";
		}
		if (busnamemarker.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + busnamemarker.getSubtaskNumber() + "\"/>\n";
		}
		if (busnamemarker.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += busnamemarker.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (busnamemarker.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += busnamemarker.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (busnamemarker.getPriority() != null){
			rdfXmlResource += "\t\t<cim:BusNameMarker.priority>";
			rdfXmlResource += busnamemarker.getPriority().toString();
			rdfXmlResource += "</cim:BusNameMarker.priority>\n";
		}
		if (busnamemarker.getMRID() != null){
			rdfXmlResource += "\t</cim:BusNameMarker>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.DCTopologicalNode dctopologicalnode){
		String rdfXmlResource = "";
		if (dctopologicalnode.getMRID() != null){
			rdfXmlResource = "\t<cim:DCTopologicalNode rdf:ID = \"_" + dctopologicalnode.getMRID() + "\">\n";
		}
		if (dctopologicalnode.getDCTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:DCTopologicalNode.DCTopologicalIsland rdf:resource=\"#_" + dctopologicalnode.getDCTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (dctopologicalnode.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += dctopologicalnode.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (dctopologicalnode.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += dctopologicalnode.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (dctopologicalnode.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += dctopologicalnode.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (dctopologicalnode.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += dctopologicalnode.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (dctopologicalnode.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += dctopologicalnode.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (dctopologicalnode.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + dctopologicalnode.getRpnCondition() + "\"/>\n";
		}
		if (dctopologicalnode.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += dctopologicalnode.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (dctopologicalnode.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + dctopologicalnode.getSchemeType() + "\"/>\n";
		}
		if (dctopologicalnode.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + dctopologicalnode.getSeasonType() + "\"/>\n";
		}
		if (dctopologicalnode.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + dctopologicalnode.getSubtaskNumber() + "\"/>\n";
		}
		if (dctopologicalnode.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += dctopologicalnode.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (dctopologicalnode.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += dctopologicalnode.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (dctopologicalnode.getMRID() != null){
			rdfXmlResource += "\t</cim:DCTopologicalNode>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalIsland topologicalisland){
		String rdfXmlResource = "";
		if (topologicalisland.getMRID() != null){
			rdfXmlResource = "\t<cim:TopologicalIsland rdf:ID = \"_" + topologicalisland.getMRID() + "\">\n";
		}
		if (topologicalisland.getAngleRefTopologicalNode() != null){
			rdfXmlResource += "\t\t<cim:TopologicalIsland.AngleRefTopologicalNode rdf:resource=\"#_" + topologicalisland.getAngleRefTopologicalNode().getMRID() + "\"/>\n";
		}
		if (topologicalisland.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += topologicalisland.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (topologicalisland.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += topologicalisland.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (topologicalisland.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += topologicalisland.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (topologicalisland.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += topologicalisland.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (topologicalisland.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += topologicalisland.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (topologicalisland.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + topologicalisland.getRpnCondition() + "\"/>\n";
		}
		if (topologicalisland.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += topologicalisland.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (topologicalisland.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + topologicalisland.getSchemeType() + "\"/>\n";
		}
		if (topologicalisland.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + topologicalisland.getSeasonType() + "\"/>\n";
		}
		if (topologicalisland.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + topologicalisland.getSubtaskNumber() + "\"/>\n";
		}
		if (topologicalisland.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += topologicalisland.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (topologicalisland.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += topologicalisland.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (topologicalisland.getGroundSchemeBranchesNumber() != null){
			rdfXmlResource += "\t\t<nti:TopologicalIsland.groundSchemeBranchesNumber>";
			rdfXmlResource += topologicalisland.getGroundSchemeBranchesNumber().toString();
			rdfXmlResource += "</nti:TopologicalIsland.groundSchemeBranchesNumber>\n";
		}
		if (topologicalisland.getInternalNodesNumber() != null){
			rdfXmlResource += "\t\t<nti:TopologicalIsland.internalNodesNumber>";
			rdfXmlResource += topologicalisland.getInternalNodesNumber().toString();
			rdfXmlResource += "</nti:TopologicalIsland.internalNodesNumber>\n";
		}
		if (topologicalisland.getNormalSchemeBranchesNumber() != null){
			rdfXmlResource += "\t\t<nti:TopologicalIsland.normalSchemeBranchesNumber>";
			rdfXmlResource += topologicalisland.getNormalSchemeBranchesNumber().toString();
			rdfXmlResource += "</nti:TopologicalIsland.normalSchemeBranchesNumber>\n";
		}
		if (topologicalisland.getPosSeqSchemeBranchesNumber() != null){
			rdfXmlResource += "\t\t<nti:TopologicalIsland.posSeqSchemeBranchesNumber>";
			rdfXmlResource += topologicalisland.getPosSeqSchemeBranchesNumber().toString();
			rdfXmlResource += "</nti:TopologicalIsland.posSeqSchemeBranchesNumber>\n";
		}
		if (topologicalisland.getMRID() != null){
			rdfXmlResource += "\t</cim:TopologicalIsland>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode topologicalnode){
		String rdfXmlResource = "";
		if (topologicalnode.getMRID() != null){
			rdfXmlResource = "\t<cim:TopologicalNode rdf:ID = \"_" + topologicalnode.getMRID() + "\">\n";
		}
		if (topologicalnode.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.BaseVoltage rdf:resource=\"#_" + topologicalnode.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getConnectivityNodeContainer() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.ConnectivityNodeContainer rdf:resource=\"#_" + topologicalnode.getConnectivityNodeContainer().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getReportingGroup() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.ReportingGroup rdf:resource=\"#_" + topologicalnode.getReportingGroup().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getSvInjection() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.SvInjection rdf:resource=\"#_" + topologicalnode.getSvInjection().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getSvVoltage() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.SvVoltage rdf:resource=\"#_" + topologicalnode.getSvVoltage().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getAngleRefTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.AngleRefTopologicalIsland rdf:resource=\"#_" + topologicalnode.getAngleRefTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.TopologicalIsland rdf:resource=\"#_" + topologicalnode.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (topologicalnode.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += topologicalnode.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (topologicalnode.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += topologicalnode.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (topologicalnode.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += topologicalnode.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (topologicalnode.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += topologicalnode.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (topologicalnode.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += topologicalnode.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (topologicalnode.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + topologicalnode.getRpnCondition() + "\"/>\n";
		}
		if (topologicalnode.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += topologicalnode.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (topologicalnode.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + topologicalnode.getSchemeType() + "\"/>\n";
		}
		if (topologicalnode.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + topologicalnode.getSeasonType() + "\"/>\n";
		}
		if (topologicalnode.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + topologicalnode.getSubtaskNumber() + "\"/>\n";
		}
		if (topologicalnode.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += topologicalnode.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (topologicalnode.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += topologicalnode.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (topologicalnode.getIsGenerativeNode() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.isGenerativeNode>";
			rdfXmlResource += topologicalnode.getIsGenerativeNode().toString();
			rdfXmlResource += "</nti:TopologicalNode.isGenerativeNode>\n";
		}
		if (topologicalnode.getIsMaxVoltageNode() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.isMaxVoltageNode>";
			rdfXmlResource += topologicalnode.getIsMaxVoltageNode().toString();
			rdfXmlResource += "</nti:TopologicalNode.isMaxVoltageNode>\n";
		}
		if (topologicalnode.getNodeType() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.nodeType rdf:resource=\"" + this.baseURI + "#NodeTypes." + topologicalnode.getNodeType() + "\"/>\n";
		}
		if (topologicalnode.getNormalSchemeNodeNumber() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.normalSchemeNodeNumber>";
			rdfXmlResource += topologicalnode.getNormalSchemeNodeNumber().toString();
			rdfXmlResource += "</nti:TopologicalNode.normalSchemeNodeNumber>\n";
		}
		if (topologicalnode.getPInjection() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.pInjection>";
			rdfXmlResource += topologicalnode.getPInjection().getValue().toString();
			rdfXmlResource += "</cim:TopologicalNode.pInjection>\n";
		}
		if (topologicalnode.getQInjection() != null){
			rdfXmlResource += "\t\t<cim:TopologicalNode.qInjection>";
			rdfXmlResource += topologicalnode.getQInjection().getValue().toString();
			rdfXmlResource += "</cim:TopologicalNode.qInjection>\n";
		}
		if (topologicalnode.getShuntB() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.shuntB>";
			rdfXmlResource += topologicalnode.getShuntB().getValue().toString();
			rdfXmlResource += "</nti:TopologicalNode.shuntB>\n";
		}
		if (topologicalnode.getTotalB() != null){
			rdfXmlResource += "\t\t<nti:TopologicalNode.totalB>";
			rdfXmlResource += topologicalnode.getTotalB().getValue().toString();
			rdfXmlResource += "</nti:TopologicalNode.totalB>\n";
		}
		if (topologicalnode.getMRID() != null){
			rdfXmlResource += "\t</cim:TopologicalNode>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ACLineSegment aclinesegment){
		String rdfXmlResource = "";
		if (aclinesegment.getMRID() != null){
			rdfXmlResource = "\t<cim:ACLineSegment rdf:ID = \"_" + aclinesegment.getMRID() + "\">\n";
		}
		if (aclinesegment.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + aclinesegment.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + aclinesegment.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + aclinesegment.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + aclinesegment.getSvStatus().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: aclinesegment.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (aclinesegment.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + aclinesegment.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + aclinesegment.getAssets().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + aclinesegment.getLocation().getMRID() + "\"/>\n";
		}
		if (aclinesegment.getLength() != null){
			rdfXmlResource += "\t\t<cim:Conductor.length>";
			rdfXmlResource += aclinesegment.getLength().getValue().toString();
			rdfXmlResource += "</cim:Conductor.length>\n";
		}
		if (aclinesegment.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += aclinesegment.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (aclinesegment.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += aclinesegment.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (aclinesegment.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += aclinesegment.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (aclinesegment.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += aclinesegment.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (aclinesegment.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += aclinesegment.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (aclinesegment.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += aclinesegment.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (aclinesegment.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += aclinesegment.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (aclinesegment.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += aclinesegment.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (aclinesegment.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += aclinesegment.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (aclinesegment.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += aclinesegment.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (aclinesegment.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += aclinesegment.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (aclinesegment.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += aclinesegment.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (aclinesegment.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += aclinesegment.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (aclinesegment.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += aclinesegment.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (aclinesegment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += aclinesegment.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (aclinesegment.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += aclinesegment.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (aclinesegment.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += aclinesegment.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (aclinesegment.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += aclinesegment.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (aclinesegment.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += aclinesegment.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (aclinesegment.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += aclinesegment.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (aclinesegment.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += aclinesegment.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (aclinesegment.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += aclinesegment.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (aclinesegment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += aclinesegment.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (aclinesegment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += aclinesegment.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (aclinesegment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += aclinesegment.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (aclinesegment.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += aclinesegment.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (aclinesegment.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += aclinesegment.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (aclinesegment.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += aclinesegment.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (aclinesegment.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += aclinesegment.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (aclinesegment.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += aclinesegment.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (aclinesegment.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += aclinesegment.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (aclinesegment.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + aclinesegment.getRpnCondition() + "\"/>\n";
		}
		if (aclinesegment.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += aclinesegment.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (aclinesegment.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + aclinesegment.getSchemeType() + "\"/>\n";
		}
		if (aclinesegment.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + aclinesegment.getSeasonType() + "\"/>\n";
		}
		if (aclinesegment.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + aclinesegment.getSubtaskNumber() + "\"/>\n";
		}
		if (aclinesegment.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += aclinesegment.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (aclinesegment.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += aclinesegment.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (aclinesegment.getB0ch() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.b0ch>";
			rdfXmlResource += aclinesegment.getB0ch().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.b0ch>\n";
		}
		if (aclinesegment.getBch() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.bch>";
			rdfXmlResource += aclinesegment.getBch().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.bch>\n";
		}
		if (aclinesegment.getC0PerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.c0PerLength>";
			rdfXmlResource += aclinesegment.getC0PerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.c0PerLength>\n";
		}
		if (aclinesegment.getCapacityCurrent() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.capacityCurrent>";
			rdfXmlResource += aclinesegment.getCapacityCurrent().toString();
			rdfXmlResource += "</nti:ACLineSegment.capacityCurrent>\n";
		}
		if (aclinesegment.getComplicationFactor() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.complicationFactor>";
			rdfXmlResource += aclinesegment.getComplicationFactor().toString();
			rdfXmlResource += "</nti:ACLineSegment.complicationFactor>\n";
		}
		if (aclinesegment.getConstructionLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.constructionLength>";
			rdfXmlResource += aclinesegment.getConstructionLength().toString();
			rdfXmlResource += "</nti:ACLineSegment.constructionLength>\n";
		}
		if (aclinesegment.getCPerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.cPerLength>";
			rdfXmlResource += aclinesegment.getCPerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.cPerLength>\n";
		}
		if (aclinesegment.getCrossSectionalArea() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.crossSectionalArea>";
			rdfXmlResource += aclinesegment.getCrossSectionalArea().toString();
			rdfXmlResource += "</nti:ACLineSegment.crossSectionalArea>\n";
		}
		if (aclinesegment.getFactorOper() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.factorOper>";
			rdfXmlResource += aclinesegment.getFactorOper().toString();
			rdfXmlResource += "</nti:ACLineSegment.factorOper>\n";
		}
		if (aclinesegment.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.factorTech>";
			rdfXmlResource += aclinesegment.getFactorTech().toString();
			rdfXmlResource += "</nti:ACLineSegment.factorTech>\n";
		}
		if (aclinesegment.getG0ch() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.g0ch>";
			rdfXmlResource += aclinesegment.getG0ch().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.g0ch>\n";
		}
		if (aclinesegment.getGch() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.gch>";
			rdfXmlResource += aclinesegment.getGch().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.gch>\n";
		}
		if (aclinesegment.getL0PerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.l0PerLength>";
			rdfXmlResource += aclinesegment.getL0PerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.l0PerLength>\n";
		}
		if (aclinesegment.getLongPermissibleCurrent() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.longPermissibleCurrent>";
			rdfXmlResource += aclinesegment.getLongPermissibleCurrent().toString();
			rdfXmlResource += "</nti:ACLineSegment.longPermissibleCurrent>\n";
		}
		if (aclinesegment.getLPerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.lPerLength>";
			rdfXmlResource += aclinesegment.getLPerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.lPerLength>\n";
		}
		if (aclinesegment.getMaxPermissibleVoltage() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.maxPermissibleVoltage>";
			rdfXmlResource += aclinesegment.getMaxPermissibleVoltage().toString();
			rdfXmlResource += "</nti:ACLineSegment.maxPermissibleVoltage>\n";
		}
		if (aclinesegment.getPeriod() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.period>";
			rdfXmlResource += aclinesegment.getPeriod().toString();
			rdfXmlResource += "</nti:ACLineSegment.period>\n";
		}
		if (aclinesegment.getPriceAdditionalValue() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceAdditionalValue>";
			rdfXmlResource += aclinesegment.getPriceAdditionalValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceAdditionalValue>\n";
		}
		if (aclinesegment.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceBase>";
			rdfXmlResource += aclinesegment.getPriceBase().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceBase>\n";
		}
		if (aclinesegment.getPriceCollector() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceCollector>";
			rdfXmlResource += aclinesegment.getPriceCollector().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceCollector>\n";
		}
		if (aclinesegment.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceOper>";
			rdfXmlResource += aclinesegment.getPriceOper().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceOper>\n";
		}
		if (aclinesegment.getPriceSwitchPoint() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceSwitchPoint>";
			rdfXmlResource += aclinesegment.getPriceSwitchPoint().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceSwitchPoint>\n";
		}
		if (aclinesegment.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.priceTech>";
			rdfXmlResource += aclinesegment.getPriceTech().toString();
			rdfXmlResource += "</nti:ACLineSegment.priceTech>\n";
		}
		if (aclinesegment.getR() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.r>";
			rdfXmlResource += aclinesegment.getR().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.r>\n";
		}
		if (aclinesegment.getR0() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.r0>";
			rdfXmlResource += aclinesegment.getR0().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.r0>\n";
		}
		if (aclinesegment.getR0PerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.r0PerLength>";
			rdfXmlResource += aclinesegment.getR0PerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.r0PerLength>\n";
		}
		if (aclinesegment.getRPerLength() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.rPerLength>";
			rdfXmlResource += aclinesegment.getRPerLength().getValue().toString();
			rdfXmlResource += "</nti:ACLineSegment.rPerLength>\n";
		}
		if (aclinesegment.getShortCircuitEndTemperature() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.shortCircuitEndTemperature>";
			rdfXmlResource += aclinesegment.getShortCircuitEndTemperature().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.shortCircuitEndTemperature>\n";
		}
		if (aclinesegment.getSwitchPointsNumber() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.switchPointsNumber>";
			rdfXmlResource += aclinesegment.getSwitchPointsNumber().toString();
			rdfXmlResource += "</nti:ACLineSegment.switchPointsNumber>\n";
		}
		if (aclinesegment.getType() != null){
			rdfXmlResource += "\t\t<nti:ACLineSegment.type rdf:resource=\"" + this.baseURI + "#ACLineSegmentType." + aclinesegment.getType() + "\"/>\n";
		}
		if (aclinesegment.getX() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.x>";
			rdfXmlResource += aclinesegment.getX().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.x>\n";
		}
		if (aclinesegment.getX0() != null){
			rdfXmlResource += "\t\t<cim:ACLineSegment.x0>";
			rdfXmlResource += aclinesegment.getX0().getValue().toString();
			rdfXmlResource += "</cim:ACLineSegment.x0>\n";
		}
		if (aclinesegment.getMRID() != null){
			rdfXmlResource += "\t</cim:ACLineSegment>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.AsynchronousMachine asynchronousmachine){
		String rdfXmlResource = "";
		if (asynchronousmachine.getMRID() != null){
			rdfXmlResource = "\t<cim:AsynchronousMachine rdf:ID = \"_" + asynchronousmachine.getMRID() + "\">\n";
		}
		if (asynchronousmachine.getGeneratingUnit() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.GeneratingUnit rdf:resource=\"#_" + asynchronousmachine.getGeneratingUnit().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getHydroPump() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.HydroPump rdf:resource=\"#_" + asynchronousmachine.getHydroPump().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + asynchronousmachine.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + asynchronousmachine.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + asynchronousmachine.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + asynchronousmachine.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + asynchronousmachine.getSvStatus().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: asynchronousmachine.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (asynchronousmachine.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + asynchronousmachine.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + asynchronousmachine.getAssets().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + asynchronousmachine.getLocation().getMRID() + "\"/>\n";
		}
		if (asynchronousmachine.getConnectionKind() != null){
			rdfXmlResource += "\t\t<nti:RotatingMachine.connectionKind rdf:resource=\"" + this.baseURI + "#WindingConnection." + asynchronousmachine.getConnectionKind() + "\"/>\n";
		}
		if (asynchronousmachine.getP() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.p>";
			rdfXmlResource += asynchronousmachine.getP().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.p>\n";
		}
		if (asynchronousmachine.getQ() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.q>";
			rdfXmlResource += asynchronousmachine.getQ().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.q>\n";
		}
		if (asynchronousmachine.getRatedPowerFactor() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedPowerFactor>";
			rdfXmlResource += asynchronousmachine.getRatedPowerFactor().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedPowerFactor>\n";
		}
		if (asynchronousmachine.getRatedS() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedS>";
			rdfXmlResource += asynchronousmachine.getRatedS().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedS>\n";
		}
		if (asynchronousmachine.getRatedU() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedU>";
			rdfXmlResource += asynchronousmachine.getRatedU().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedU>\n";
		}
		if (asynchronousmachine.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += asynchronousmachine.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (asynchronousmachine.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += asynchronousmachine.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (asynchronousmachine.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += asynchronousmachine.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (asynchronousmachine.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += asynchronousmachine.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (asynchronousmachine.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += asynchronousmachine.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (asynchronousmachine.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += asynchronousmachine.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (asynchronousmachine.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += asynchronousmachine.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (asynchronousmachine.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += asynchronousmachine.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (asynchronousmachine.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += asynchronousmachine.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (asynchronousmachine.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += asynchronousmachine.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (asynchronousmachine.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += asynchronousmachine.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (asynchronousmachine.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += asynchronousmachine.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (asynchronousmachine.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += asynchronousmachine.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (asynchronousmachine.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += asynchronousmachine.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (asynchronousmachine.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += asynchronousmachine.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (asynchronousmachine.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += asynchronousmachine.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (asynchronousmachine.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += asynchronousmachine.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (asynchronousmachine.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += asynchronousmachine.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (asynchronousmachine.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += asynchronousmachine.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (asynchronousmachine.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += asynchronousmachine.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (asynchronousmachine.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += asynchronousmachine.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (asynchronousmachine.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += asynchronousmachine.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (asynchronousmachine.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += asynchronousmachine.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (asynchronousmachine.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += asynchronousmachine.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (asynchronousmachine.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += asynchronousmachine.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (asynchronousmachine.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += asynchronousmachine.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (asynchronousmachine.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += asynchronousmachine.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (asynchronousmachine.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += asynchronousmachine.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (asynchronousmachine.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += asynchronousmachine.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (asynchronousmachine.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += asynchronousmachine.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (asynchronousmachine.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += asynchronousmachine.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (asynchronousmachine.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += asynchronousmachine.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (asynchronousmachine.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + asynchronousmachine.getRpnCondition() + "\"/>\n";
		}
		if (asynchronousmachine.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += asynchronousmachine.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (asynchronousmachine.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + asynchronousmachine.getSchemeType() + "\"/>\n";
		}
		if (asynchronousmachine.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + asynchronousmachine.getSeasonType() + "\"/>\n";
		}
		if (asynchronousmachine.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + asynchronousmachine.getSubtaskNumber() + "\"/>\n";
		}
		if (asynchronousmachine.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += asynchronousmachine.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (asynchronousmachine.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += asynchronousmachine.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (asynchronousmachine.getAsynchronousMachineType() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.asynchronousMachineType rdf:resource=\"" + this.baseURI + "#AsynchronousMachineKind." + asynchronousmachine.getAsynchronousMachineType() + "\"/>\n";
		}
		if (asynchronousmachine.getConverterFedDrive() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.converterFedDrive>";
			rdfXmlResource += asynchronousmachine.getConverterFedDrive().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.converterFedDrive>\n";
		}
		if (asynchronousmachine.getEfficiency() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.efficiency>";
			rdfXmlResource += asynchronousmachine.getEfficiency().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.efficiency>\n";
		}
		if (asynchronousmachine.getIaIrRatio() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.iaIrRatio>";
			rdfXmlResource += asynchronousmachine.getIaIrRatio().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.iaIrRatio>\n";
		}
		if (asynchronousmachine.getNominalFrequency() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.nominalFrequency>";
			rdfXmlResource += asynchronousmachine.getNominalFrequency().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.nominalFrequency>\n";
		}
		if (asynchronousmachine.getNominalSpeed() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.nominalSpeed>";
			rdfXmlResource += asynchronousmachine.getNominalSpeed().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.nominalSpeed>\n";
		}
		if (asynchronousmachine.getPolePairNumber() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.polePairNumber>";
			rdfXmlResource += asynchronousmachine.getPolePairNumber().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.polePairNumber>\n";
		}
		if (asynchronousmachine.getRatedMechanicalPower() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.ratedMechanicalPower>";
			rdfXmlResource += asynchronousmachine.getRatedMechanicalPower().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.ratedMechanicalPower>\n";
		}
		if (asynchronousmachine.getReversible() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.reversible>";
			rdfXmlResource += asynchronousmachine.getReversible().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.reversible>\n";
		}
		if (asynchronousmachine.getRr1() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.rr1>";
			rdfXmlResource += asynchronousmachine.getRr1().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.rr1>\n";
		}
		if (asynchronousmachine.getRr2() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.rr2>";
			rdfXmlResource += asynchronousmachine.getRr2().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.rr2>\n";
		}
		if (asynchronousmachine.getRxLockedRotorRatio() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.rxLockedRotorRatio>";
			rdfXmlResource += asynchronousmachine.getRxLockedRotorRatio().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.rxLockedRotorRatio>\n";
		}
		if (asynchronousmachine.getTpo() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.tpo>";
			rdfXmlResource += asynchronousmachine.getTpo().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.tpo>\n";
		}
		if (asynchronousmachine.getTppo() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.tppo>";
			rdfXmlResource += asynchronousmachine.getTppo().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.tppo>\n";
		}
		if (asynchronousmachine.getXlr1() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xlr1>";
			rdfXmlResource += asynchronousmachine.getXlr1().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xlr1>\n";
		}
		if (asynchronousmachine.getXlr2() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xlr2>";
			rdfXmlResource += asynchronousmachine.getXlr2().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xlr2>\n";
		}
		if (asynchronousmachine.getXm() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xm>";
			rdfXmlResource += asynchronousmachine.getXm().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xm>\n";
		}
		if (asynchronousmachine.getXp() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xp>";
			rdfXmlResource += asynchronousmachine.getXp().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xp>\n";
		}
		if (asynchronousmachine.getXpp() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xpp>";
			rdfXmlResource += asynchronousmachine.getXpp().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xpp>\n";
		}
		if (asynchronousmachine.getXs() != null){
			rdfXmlResource += "\t\t<cim:AsynchronousMachine.xs>";
			rdfXmlResource += asynchronousmachine.getXs().getValue().toString();
			rdfXmlResource += "</cim:AsynchronousMachine.xs>\n";
		}
		if (asynchronousmachine.getMRID() != null){
			rdfXmlResource += "\t</cim:AsynchronousMachine>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Breaker breaker){
		String rdfXmlResource = "";
		if (breaker.getMRID() != null){
			rdfXmlResource = "\t<cim:Breaker rdf:ID = \"_" + breaker.getMRID() + "\">\n";
		}
		if (breaker.getOperatedByProtectionEquipment() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: breaker.getOperatedByProtectionEquipment()){
				rdfXmlResource += "\t\t<cim:ProtectedSwitch.OperatedByProtectionEquipment rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (breaker.getLN_Base() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.LN_Base rdf:resource=\"#_" + breaker.getLN_Base().getMRID() + "\"/>\n";
		}
		if (breaker.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + breaker.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (breaker.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + breaker.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (breaker.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + breaker.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (breaker.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + breaker.getSvStatus().getMRID() + "\"/>\n";
		}
		if (breaker.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: breaker.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (breaker.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + breaker.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (breaker.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + breaker.getAssets().getMRID() + "\"/>\n";
		}
		if (breaker.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + breaker.getLocation().getMRID() + "\"/>\n";
		}
		if (breaker.getBreakingCapacity() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.breakingCapacity>";
			rdfXmlResource += breaker.getBreakingCapacity().getValue().toString();
			rdfXmlResource += "</cim:ProtectedSwitch.breakingCapacity>\n";
		}
		if (breaker.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += breaker.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (breaker.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += breaker.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (breaker.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += breaker.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (breaker.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += breaker.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (breaker.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += breaker.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (breaker.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += breaker.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (breaker.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += breaker.getSwitchOnDate().getYear() + "-" + breaker.getSwitchOnDate().getMonth() + "-" + breaker.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (breaker.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += breaker.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (breaker.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += breaker.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (breaker.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += breaker.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (breaker.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += breaker.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (breaker.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += breaker.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (breaker.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += breaker.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (breaker.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += breaker.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (breaker.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += breaker.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (breaker.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += breaker.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (breaker.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += breaker.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (breaker.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += breaker.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (breaker.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += breaker.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (breaker.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += breaker.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (breaker.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += breaker.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (breaker.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += breaker.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (breaker.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += breaker.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (breaker.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += breaker.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (breaker.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += breaker.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (breaker.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += breaker.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (breaker.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += breaker.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (breaker.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += breaker.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (breaker.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += breaker.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (breaker.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += breaker.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (breaker.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += breaker.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (breaker.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += breaker.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (breaker.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += breaker.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (breaker.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += breaker.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (breaker.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += breaker.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (breaker.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += breaker.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (breaker.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += breaker.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (breaker.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += breaker.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (breaker.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + breaker.getRpnCondition() + "\"/>\n";
		}
		if (breaker.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += breaker.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (breaker.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + breaker.getSchemeType() + "\"/>\n";
		}
		if (breaker.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + breaker.getSeasonType() + "\"/>\n";
		}
		if (breaker.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + breaker.getSubtaskNumber() + "\"/>\n";
		}
		if (breaker.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += breaker.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (breaker.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += breaker.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (breaker.getInTransitTime() != null){
			rdfXmlResource += "\t\t<cim:Breaker.inTransitTime>";
			rdfXmlResource += breaker.getInTransitTime().getValue().toString();
			rdfXmlResource += "</cim:Breaker.inTransitTime>\n";
		}
		if (breaker.getType() != null){
			rdfXmlResource += "\t\t<nti:Breaker.type rdf:resource=\"" + this.baseURI + "#BreakerType." + breaker.getType() + "\"/>\n";
		}
		if (breaker.getMRID() != null){
			rdfXmlResource += "\t</cim:Breaker>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.BusbarSection busbarsection){
		String rdfXmlResource = "";
		if (busbarsection.getMRID() != null){
			rdfXmlResource = "\t<cim:BusbarSection rdf:ID = \"_" + busbarsection.getMRID() + "\">\n";
		}
		if (busbarsection.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + busbarsection.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (busbarsection.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + busbarsection.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (busbarsection.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + busbarsection.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (busbarsection.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + busbarsection.getSvStatus().getMRID() + "\"/>\n";
		}
		if (busbarsection.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: busbarsection.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (busbarsection.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + busbarsection.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (busbarsection.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + busbarsection.getAssets().getMRID() + "\"/>\n";
		}
		if (busbarsection.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + busbarsection.getLocation().getMRID() + "\"/>\n";
		}
		if (busbarsection.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += busbarsection.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (busbarsection.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += busbarsection.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (busbarsection.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += busbarsection.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (busbarsection.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += busbarsection.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (busbarsection.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += busbarsection.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (busbarsection.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += busbarsection.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (busbarsection.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += busbarsection.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (busbarsection.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += busbarsection.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (busbarsection.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += busbarsection.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (busbarsection.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += busbarsection.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (busbarsection.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += busbarsection.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (busbarsection.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += busbarsection.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (busbarsection.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += busbarsection.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (busbarsection.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += busbarsection.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (busbarsection.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += busbarsection.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (busbarsection.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += busbarsection.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (busbarsection.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += busbarsection.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (busbarsection.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += busbarsection.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (busbarsection.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += busbarsection.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (busbarsection.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += busbarsection.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (busbarsection.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += busbarsection.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (busbarsection.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += busbarsection.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (busbarsection.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += busbarsection.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (busbarsection.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += busbarsection.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (busbarsection.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += busbarsection.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (busbarsection.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += busbarsection.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (busbarsection.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += busbarsection.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (busbarsection.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += busbarsection.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (busbarsection.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += busbarsection.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (busbarsection.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += busbarsection.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (busbarsection.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += busbarsection.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (busbarsection.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + busbarsection.getRpnCondition() + "\"/>\n";
		}
		if (busbarsection.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += busbarsection.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (busbarsection.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + busbarsection.getSchemeType() + "\"/>\n";
		}
		if (busbarsection.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + busbarsection.getSeasonType() + "\"/>\n";
		}
		if (busbarsection.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + busbarsection.getSubtaskNumber() + "\"/>\n";
		}
		if (busbarsection.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += busbarsection.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (busbarsection.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += busbarsection.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (busbarsection.getIpMax() != null){
			rdfXmlResource += "\t\t<cim:BusbarSection.ipMax>";
			rdfXmlResource += busbarsection.getIpMax().getValue().toString();
			rdfXmlResource += "</cim:BusbarSection.ipMax>\n";
		}
		if (busbarsection.getMRID() != null){
			rdfXmlResource += "\t</cim:BusbarSection>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Conductor conductor){
		String rdfXmlResource = "";
		if (conductor.getMRID() != null){
			rdfXmlResource = "\t<cim:Conductor rdf:ID = \"_" + conductor.getMRID() + "\">\n";
		}
		if (conductor.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + conductor.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (conductor.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + conductor.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (conductor.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + conductor.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (conductor.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + conductor.getSvStatus().getMRID() + "\"/>\n";
		}
		if (conductor.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: conductor.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (conductor.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + conductor.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (conductor.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + conductor.getAssets().getMRID() + "\"/>\n";
		}
		if (conductor.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + conductor.getLocation().getMRID() + "\"/>\n";
		}
		if (conductor.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += conductor.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (conductor.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += conductor.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (conductor.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += conductor.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (conductor.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += conductor.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (conductor.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += conductor.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (conductor.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += conductor.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (conductor.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += conductor.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (conductor.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += conductor.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (conductor.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += conductor.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (conductor.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += conductor.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (conductor.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += conductor.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (conductor.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += conductor.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (conductor.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += conductor.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (conductor.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += conductor.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (conductor.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += conductor.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (conductor.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += conductor.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (conductor.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += conductor.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (conductor.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += conductor.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (conductor.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += conductor.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (conductor.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += conductor.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (conductor.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += conductor.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (conductor.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += conductor.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (conductor.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += conductor.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (conductor.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += conductor.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (conductor.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += conductor.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (conductor.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += conductor.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (conductor.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += conductor.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (conductor.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += conductor.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (conductor.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += conductor.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (conductor.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += conductor.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (conductor.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += conductor.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (conductor.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + conductor.getRpnCondition() + "\"/>\n";
		}
		if (conductor.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += conductor.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (conductor.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + conductor.getSchemeType() + "\"/>\n";
		}
		if (conductor.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + conductor.getSeasonType() + "\"/>\n";
		}
		if (conductor.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + conductor.getSubtaskNumber() + "\"/>\n";
		}
		if (conductor.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += conductor.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (conductor.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += conductor.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (conductor.getLength() != null){
			rdfXmlResource += "\t\t<cim:Conductor.length>";
			rdfXmlResource += conductor.getLength().getValue().toString();
			rdfXmlResource += "</cim:Conductor.length>\n";
		}
		if (conductor.getMRID() != null){
			rdfXmlResource += "\t</cim:Conductor>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Connector connector){
		String rdfXmlResource = "";
		if (connector.getMRID() != null){
			rdfXmlResource = "\t<cim:Connector rdf:ID = \"_" + connector.getMRID() + "\">\n";
		}
		if (connector.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + connector.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (connector.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + connector.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (connector.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + connector.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (connector.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + connector.getSvStatus().getMRID() + "\"/>\n";
		}
		if (connector.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: connector.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (connector.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + connector.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (connector.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + connector.getAssets().getMRID() + "\"/>\n";
		}
		if (connector.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + connector.getLocation().getMRID() + "\"/>\n";
		}
		if (connector.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += connector.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (connector.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += connector.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (connector.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += connector.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (connector.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += connector.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (connector.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += connector.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (connector.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += connector.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (connector.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += connector.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (connector.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += connector.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (connector.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += connector.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (connector.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += connector.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (connector.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += connector.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (connector.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += connector.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (connector.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += connector.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (connector.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += connector.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (connector.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += connector.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (connector.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += connector.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (connector.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += connector.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (connector.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += connector.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (connector.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += connector.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (connector.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += connector.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (connector.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += connector.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (connector.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += connector.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (connector.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += connector.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (connector.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += connector.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (connector.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += connector.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (connector.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += connector.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (connector.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += connector.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (connector.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += connector.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (connector.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += connector.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (connector.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += connector.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (connector.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += connector.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (connector.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + connector.getRpnCondition() + "\"/>\n";
		}
		if (connector.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += connector.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (connector.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + connector.getSchemeType() + "\"/>\n";
		}
		if (connector.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + connector.getSeasonType() + "\"/>\n";
		}
		if (connector.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + connector.getSubtaskNumber() + "\"/>\n";
		}
		if (connector.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += connector.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (connector.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += connector.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (connector.getMRID() != null){
			rdfXmlResource += "\t</cim:Connector>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Disconnector disconnector){
		String rdfXmlResource = "";
		if (disconnector.getMRID() != null){
			rdfXmlResource = "\t<cim:Disconnector rdf:ID = \"_" + disconnector.getMRID() + "\">\n";
		}
		if (disconnector.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + disconnector.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (disconnector.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + disconnector.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (disconnector.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + disconnector.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (disconnector.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + disconnector.getSvStatus().getMRID() + "\"/>\n";
		}
		if (disconnector.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: disconnector.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (disconnector.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + disconnector.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (disconnector.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + disconnector.getAssets().getMRID() + "\"/>\n";
		}
		if (disconnector.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + disconnector.getLocation().getMRID() + "\"/>\n";
		}
		if (disconnector.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += disconnector.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (disconnector.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += disconnector.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (disconnector.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += disconnector.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (disconnector.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += disconnector.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (disconnector.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += disconnector.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (disconnector.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += disconnector.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (disconnector.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += disconnector.getSwitchOnDate().getYear() + "-" + disconnector.getSwitchOnDate().getMonth() + "-" + disconnector.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (disconnector.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += disconnector.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (disconnector.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += disconnector.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (disconnector.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += disconnector.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (disconnector.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += disconnector.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (disconnector.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += disconnector.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (disconnector.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += disconnector.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (disconnector.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += disconnector.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (disconnector.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += disconnector.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (disconnector.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += disconnector.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (disconnector.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += disconnector.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (disconnector.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += disconnector.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (disconnector.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += disconnector.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (disconnector.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += disconnector.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (disconnector.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += disconnector.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (disconnector.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += disconnector.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (disconnector.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += disconnector.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (disconnector.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += disconnector.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (disconnector.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += disconnector.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (disconnector.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += disconnector.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (disconnector.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += disconnector.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (disconnector.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += disconnector.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (disconnector.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += disconnector.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (disconnector.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += disconnector.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (disconnector.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += disconnector.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (disconnector.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += disconnector.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (disconnector.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += disconnector.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (disconnector.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += disconnector.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (disconnector.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += disconnector.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (disconnector.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += disconnector.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (disconnector.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += disconnector.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (disconnector.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += disconnector.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (disconnector.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + disconnector.getRpnCondition() + "\"/>\n";
		}
		if (disconnector.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += disconnector.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (disconnector.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + disconnector.getSchemeType() + "\"/>\n";
		}
		if (disconnector.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + disconnector.getSeasonType() + "\"/>\n";
		}
		if (disconnector.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + disconnector.getSubtaskNumber() + "\"/>\n";
		}
		if (disconnector.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += disconnector.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (disconnector.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += disconnector.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (disconnector.getMRID() != null){
			rdfXmlResource += "\t</cim:Disconnector>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EarthFaultCompensator earthfaultcompensator){
		String rdfXmlResource = "";
		if (earthfaultcompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:EarthFaultCompensator rdf:ID = \"_" + earthfaultcompensator.getMRID() + "\">\n";
		}
		if (earthfaultcompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + earthfaultcompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + earthfaultcompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + earthfaultcompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + earthfaultcompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: earthfaultcompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (earthfaultcompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + earthfaultcompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + earthfaultcompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + earthfaultcompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (earthfaultcompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += earthfaultcompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (earthfaultcompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += earthfaultcompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (earthfaultcompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += earthfaultcompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (earthfaultcompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += earthfaultcompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (earthfaultcompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += earthfaultcompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (earthfaultcompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += earthfaultcompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (earthfaultcompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += earthfaultcompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (earthfaultcompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += earthfaultcompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (earthfaultcompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += earthfaultcompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (earthfaultcompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += earthfaultcompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (earthfaultcompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += earthfaultcompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (earthfaultcompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += earthfaultcompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (earthfaultcompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += earthfaultcompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (earthfaultcompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += earthfaultcompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (earthfaultcompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += earthfaultcompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (earthfaultcompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += earthfaultcompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (earthfaultcompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += earthfaultcompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (earthfaultcompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += earthfaultcompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (earthfaultcompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += earthfaultcompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (earthfaultcompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += earthfaultcompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (earthfaultcompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += earthfaultcompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (earthfaultcompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += earthfaultcompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (earthfaultcompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += earthfaultcompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (earthfaultcompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += earthfaultcompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (earthfaultcompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += earthfaultcompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (earthfaultcompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += earthfaultcompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (earthfaultcompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += earthfaultcompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (earthfaultcompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += earthfaultcompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (earthfaultcompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += earthfaultcompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (earthfaultcompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += earthfaultcompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (earthfaultcompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += earthfaultcompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (earthfaultcompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + earthfaultcompensator.getRpnCondition() + "\"/>\n";
		}
		if (earthfaultcompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += earthfaultcompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (earthfaultcompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + earthfaultcompensator.getSchemeType() + "\"/>\n";
		}
		if (earthfaultcompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + earthfaultcompensator.getSeasonType() + "\"/>\n";
		}
		if (earthfaultcompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + earthfaultcompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (earthfaultcompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += earthfaultcompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (earthfaultcompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += earthfaultcompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (earthfaultcompensator.getR() != null){
			rdfXmlResource += "\t\t<cim:EarthFaultCompensator.r>";
			rdfXmlResource += earthfaultcompensator.getR().getValue().toString();
			rdfXmlResource += "</cim:EarthFaultCompensator.r>\n";
		}
		if (earthfaultcompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:EarthFaultCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EnergyConsumer energyconsumer){
		String rdfXmlResource = "";
		if (energyconsumer.getMRID() != null){
			rdfXmlResource = "\t<cim:EnergyConsumer rdf:ID = \"_" + energyconsumer.getMRID() + "\">\n";
		}
		if (energyconsumer.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + energyconsumer.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + energyconsumer.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + energyconsumer.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + energyconsumer.getSvStatus().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: energyconsumer.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (energyconsumer.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + energyconsumer.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + energyconsumer.getAssets().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + energyconsumer.getLocation().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.Cluster rdf:resource=\"#_" + energyconsumer.getCluster().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getVoltageCluster() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.VoltageCluster rdf:resource=\"#_" + energyconsumer.getVoltageCluster().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getSubstationFeedingFrom() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.SubstationFeedingFrom rdf:resource=\"#_" + energyconsumer.getSubstationFeedingFrom().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getLoadResponse() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.LoadResponse rdf:resource=\"#_" + energyconsumer.getLoadResponse().getMRID() + "\"/>\n";
		}
		if (energyconsumer.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += energyconsumer.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (energyconsumer.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += energyconsumer.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (energyconsumer.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += energyconsumer.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (energyconsumer.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += energyconsumer.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (energyconsumer.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += energyconsumer.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (energyconsumer.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += energyconsumer.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (energyconsumer.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += energyconsumer.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (energyconsumer.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += energyconsumer.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (energyconsumer.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += energyconsumer.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (energyconsumer.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += energyconsumer.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (energyconsumer.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += energyconsumer.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (energyconsumer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += energyconsumer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (energyconsumer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += energyconsumer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (energyconsumer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += energyconsumer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (energyconsumer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += energyconsumer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (energyconsumer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += energyconsumer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (energyconsumer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += energyconsumer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (energyconsumer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += energyconsumer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (energyconsumer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += energyconsumer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (energyconsumer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += energyconsumer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (energyconsumer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += energyconsumer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (energyconsumer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += energyconsumer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (energyconsumer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += energyconsumer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (energyconsumer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += energyconsumer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (energyconsumer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += energyconsumer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (energyconsumer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += energyconsumer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (energyconsumer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += energyconsumer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (energyconsumer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += energyconsumer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (energyconsumer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += energyconsumer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (energyconsumer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += energyconsumer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (energyconsumer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += energyconsumer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (energyconsumer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + energyconsumer.getRpnCondition() + "\"/>\n";
		}
		if (energyconsumer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += energyconsumer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (energyconsumer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + energyconsumer.getSchemeType() + "\"/>\n";
		}
		if (energyconsumer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + energyconsumer.getSeasonType() + "\"/>\n";
		}
		if (energyconsumer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + energyconsumer.getSubtaskNumber() + "\"/>\n";
		}
		if (energyconsumer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += energyconsumer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (energyconsumer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += energyconsumer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (energyconsumer.getClusterLabel() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.clusterLabel>";
			rdfXmlResource += energyconsumer.getClusterLabel().toString();
			rdfXmlResource += "</nti:EnergyConsumer.clusterLabel>\n";
		}
		if (energyconsumer.getCustomerCount() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.customerCount>";
			rdfXmlResource += energyconsumer.getCustomerCount().toString();
			rdfXmlResource += "</cim:EnergyConsumer.customerCount>\n";
		}
		if (energyconsumer.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.grounded>";
			rdfXmlResource += energyconsumer.getGrounded().toString();
			rdfXmlResource += "</cim:EnergyConsumer.grounded>\n";
		}
		if (energyconsumer.getIsOutLier() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isOutLier>";
			rdfXmlResource += energyconsumer.getIsOutLier().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isOutLier>\n";
		}
		if (energyconsumer.getIsTransformerNeedToConnectToSubstation() != null){
			rdfXmlResource += "\t\t<nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>";
			rdfXmlResource += energyconsumer.getIsTransformerNeedToConnectToSubstation().toString();
			rdfXmlResource += "</nti:EnergyConsumer.isTransformerNeedToConnectToSubstation>\n";
		}
		if (energyconsumer.getP() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.p>";
			rdfXmlResource += energyconsumer.getP().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.p>\n";
		}
		if (energyconsumer.getPfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixed>";
			rdfXmlResource += energyconsumer.getPfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixed>\n";
		}
		if (energyconsumer.getPfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.pfixedPct>";
			rdfXmlResource += energyconsumer.getPfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.pfixedPct>\n";
		}
		if (energyconsumer.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + energyconsumer.getPhaseConnection() + "\"/>\n";
		}
		if (energyconsumer.getQ() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.q>";
			rdfXmlResource += energyconsumer.getQ().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.q>\n";
		}
		if (energyconsumer.getQfixed() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixed>";
			rdfXmlResource += energyconsumer.getQfixed().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixed>\n";
		}
		if (energyconsumer.getQfixedPct() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.qfixedPct>";
			rdfXmlResource += energyconsumer.getQfixedPct().getValue().toString();
			rdfXmlResource += "</cim:EnergyConsumer.qfixedPct>\n";
		}
		if (energyconsumer.getSubstationPreferredVoltage() != null){
			rdfXmlResource += "\t\t<cim:EnergyConsumer.substationPreferredVoltage>";
			rdfXmlResource += energyconsumer.getSubstationPreferredVoltage().toString();
			rdfXmlResource += "</cim:EnergyConsumer.substationPreferredVoltage>\n";
		}
		if (energyconsumer.getMRID() != null){
			rdfXmlResource += "\t</cim:EnergyConsumer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.EnergySource energysource){
		String rdfXmlResource = "";
		if (energysource.getMRID() != null){
			rdfXmlResource = "\t<cim:EnergySource rdf:ID = \"_" + energysource.getMRID() + "\">\n";
		}
		if (energysource.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + energysource.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (energysource.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + energysource.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (energysource.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + energysource.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (energysource.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + energysource.getSvStatus().getMRID() + "\"/>\n";
		}
		if (energysource.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: energysource.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (energysource.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + energysource.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (energysource.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + energysource.getAssets().getMRID() + "\"/>\n";
		}
		if (energysource.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + energysource.getLocation().getMRID() + "\"/>\n";
		}
		if (energysource.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += energysource.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (energysource.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += energysource.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (energysource.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += energysource.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (energysource.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += energysource.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (energysource.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += energysource.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (energysource.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += energysource.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (energysource.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += energysource.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (energysource.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += energysource.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (energysource.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += energysource.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (energysource.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += energysource.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (energysource.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += energysource.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (energysource.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += energysource.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (energysource.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += energysource.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (energysource.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += energysource.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (energysource.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += energysource.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (energysource.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += energysource.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (energysource.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += energysource.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (energysource.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += energysource.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (energysource.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += energysource.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (energysource.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += energysource.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (energysource.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += energysource.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (energysource.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += energysource.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (energysource.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += energysource.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (energysource.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += energysource.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (energysource.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += energysource.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (energysource.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += energysource.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (energysource.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += energysource.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (energysource.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += energysource.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (energysource.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += energysource.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (energysource.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += energysource.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (energysource.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += energysource.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (energysource.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + energysource.getRpnCondition() + "\"/>\n";
		}
		if (energysource.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += energysource.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (energysource.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + energysource.getSchemeType() + "\"/>\n";
		}
		if (energysource.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + energysource.getSeasonType() + "\"/>\n";
		}
		if (energysource.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + energysource.getSubtaskNumber() + "\"/>\n";
		}
		if (energysource.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += energysource.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (energysource.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += energysource.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (energysource.getActivePower() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.activePower>";
			rdfXmlResource += energysource.getActivePower().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.activePower>\n";
		}
		if (energysource.getNominalVoltage() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.nominalVoltage>";
			rdfXmlResource += energysource.getNominalVoltage().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.nominalVoltage>\n";
		}
		if (energysource.getR() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.r>";
			rdfXmlResource += energysource.getR().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.r>\n";
		}
		if (energysource.getR0() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.r0>";
			rdfXmlResource += energysource.getR0().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.r0>\n";
		}
		if (energysource.getReactivePower() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.reactivePower>";
			rdfXmlResource += energysource.getReactivePower().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.reactivePower>\n";
		}
		if (energysource.getRn() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.rn>";
			rdfXmlResource += energysource.getRn().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.rn>\n";
		}
		if (energysource.getVoltageAngle() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.voltageAngle>";
			rdfXmlResource += energysource.getVoltageAngle().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.voltageAngle>\n";
		}
		if (energysource.getVoltageMagnitude() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.voltageMagnitude>";
			rdfXmlResource += energysource.getVoltageMagnitude().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.voltageMagnitude>\n";
		}
		if (energysource.getX() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.x>";
			rdfXmlResource += energysource.getX().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.x>\n";
		}
		if (energysource.getX0() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.x0>";
			rdfXmlResource += energysource.getX0().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.x0>\n";
		}
		if (energysource.getXn() != null){
			rdfXmlResource += "\t\t<cim:EnergySource.xn>";
			rdfXmlResource += energysource.getXn().getValue().toString();
			rdfXmlResource += "</cim:EnergySource.xn>\n";
		}
		if (energysource.getMRID() != null){
			rdfXmlResource += "\t</cim:EnergySource>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ExternalNetworkInjection externalnetworkinjection){
		String rdfXmlResource = "";
		if (externalnetworkinjection.getMRID() != null){
			rdfXmlResource = "\t<cim:ExternalNetworkInjection rdf:ID = \"_" + externalnetworkinjection.getMRID() + "\">\n";
		}
		if (externalnetworkinjection.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + externalnetworkinjection.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + externalnetworkinjection.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + externalnetworkinjection.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + externalnetworkinjection.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + externalnetworkinjection.getSvStatus().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: externalnetworkinjection.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (externalnetworkinjection.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + externalnetworkinjection.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + externalnetworkinjection.getAssets().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + externalnetworkinjection.getLocation().getMRID() + "\"/>\n";
		}
		if (externalnetworkinjection.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += externalnetworkinjection.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (externalnetworkinjection.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += externalnetworkinjection.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (externalnetworkinjection.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += externalnetworkinjection.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (externalnetworkinjection.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += externalnetworkinjection.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (externalnetworkinjection.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += externalnetworkinjection.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (externalnetworkinjection.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += externalnetworkinjection.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (externalnetworkinjection.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += externalnetworkinjection.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (externalnetworkinjection.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += externalnetworkinjection.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (externalnetworkinjection.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += externalnetworkinjection.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (externalnetworkinjection.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += externalnetworkinjection.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (externalnetworkinjection.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += externalnetworkinjection.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (externalnetworkinjection.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += externalnetworkinjection.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (externalnetworkinjection.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += externalnetworkinjection.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (externalnetworkinjection.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += externalnetworkinjection.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (externalnetworkinjection.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += externalnetworkinjection.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (externalnetworkinjection.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += externalnetworkinjection.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (externalnetworkinjection.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += externalnetworkinjection.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (externalnetworkinjection.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += externalnetworkinjection.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (externalnetworkinjection.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += externalnetworkinjection.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (externalnetworkinjection.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += externalnetworkinjection.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (externalnetworkinjection.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += externalnetworkinjection.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (externalnetworkinjection.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += externalnetworkinjection.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (externalnetworkinjection.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += externalnetworkinjection.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (externalnetworkinjection.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += externalnetworkinjection.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (externalnetworkinjection.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += externalnetworkinjection.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (externalnetworkinjection.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += externalnetworkinjection.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (externalnetworkinjection.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += externalnetworkinjection.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (externalnetworkinjection.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += externalnetworkinjection.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (externalnetworkinjection.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += externalnetworkinjection.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (externalnetworkinjection.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += externalnetworkinjection.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (externalnetworkinjection.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += externalnetworkinjection.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (externalnetworkinjection.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += externalnetworkinjection.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (externalnetworkinjection.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + externalnetworkinjection.getRpnCondition() + "\"/>\n";
		}
		if (externalnetworkinjection.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += externalnetworkinjection.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (externalnetworkinjection.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + externalnetworkinjection.getSchemeType() + "\"/>\n";
		}
		if (externalnetworkinjection.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + externalnetworkinjection.getSeasonType() + "\"/>\n";
		}
		if (externalnetworkinjection.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + externalnetworkinjection.getSubtaskNumber() + "\"/>\n";
		}
		if (externalnetworkinjection.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += externalnetworkinjection.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (externalnetworkinjection.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += externalnetworkinjection.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (externalnetworkinjection.getGovernorSCD() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.governorSCD>";
			rdfXmlResource += externalnetworkinjection.getGovernorSCD().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.governorSCD>\n";
		}
		if (externalnetworkinjection.getIkSecond() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.ikSecond>";
			rdfXmlResource += externalnetworkinjection.getIkSecond().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.ikSecond>\n";
		}
		if (externalnetworkinjection.getMaxInitialSymShCCurrent() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxInitialSymShCCurrent>";
			rdfXmlResource += externalnetworkinjection.getMaxInitialSymShCCurrent().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxInitialSymShCCurrent>\n";
		}
		if (externalnetworkinjection.getMaxP() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxP>";
			rdfXmlResource += externalnetworkinjection.getMaxP().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxP>\n";
		}
		if (externalnetworkinjection.getMaxQ() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxQ>";
			rdfXmlResource += externalnetworkinjection.getMaxQ().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxQ>\n";
		}
		if (externalnetworkinjection.getMaxR0ToX0Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxR0ToX0Ratio>";
			rdfXmlResource += externalnetworkinjection.getMaxR0ToX0Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxR0ToX0Ratio>\n";
		}
		if (externalnetworkinjection.getMaxR1ToX1Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxR1ToX1Ratio>";
			rdfXmlResource += externalnetworkinjection.getMaxR1ToX1Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxR1ToX1Ratio>\n";
		}
		if (externalnetworkinjection.getMaxZ0ToZ1Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.maxZ0ToZ1Ratio>";
			rdfXmlResource += externalnetworkinjection.getMaxZ0ToZ1Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.maxZ0ToZ1Ratio>\n";
		}
		if (externalnetworkinjection.getMinInitialSymShCCurrent() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minInitialSymShCCurrent>";
			rdfXmlResource += externalnetworkinjection.getMinInitialSymShCCurrent().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minInitialSymShCCurrent>\n";
		}
		if (externalnetworkinjection.getMinP() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minP>";
			rdfXmlResource += externalnetworkinjection.getMinP().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minP>\n";
		}
		if (externalnetworkinjection.getMinQ() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minQ>";
			rdfXmlResource += externalnetworkinjection.getMinQ().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minQ>\n";
		}
		if (externalnetworkinjection.getMinR0ToX0Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minR0ToX0Ratio>";
			rdfXmlResource += externalnetworkinjection.getMinR0ToX0Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minR0ToX0Ratio>\n";
		}
		if (externalnetworkinjection.getMinR1ToX1Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minR1ToX1Ratio>";
			rdfXmlResource += externalnetworkinjection.getMinR1ToX1Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minR1ToX1Ratio>\n";
		}
		if (externalnetworkinjection.getMinZ0ToZ1Ratio() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.minZ0ToZ1Ratio>";
			rdfXmlResource += externalnetworkinjection.getMinZ0ToZ1Ratio().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.minZ0ToZ1Ratio>\n";
		}
		if (externalnetworkinjection.getP() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.p>";
			rdfXmlResource += externalnetworkinjection.getP().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.p>\n";
		}
		if (externalnetworkinjection.getQ() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.q>";
			rdfXmlResource += externalnetworkinjection.getQ().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.q>\n";
		}
		if (externalnetworkinjection.getReferencePriority() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.referencePriority>";
			rdfXmlResource += externalnetworkinjection.getReferencePriority().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.referencePriority>\n";
		}
		if (externalnetworkinjection.getVoltageFactor() != null){
			rdfXmlResource += "\t\t<cim:ExternalNetworkInjection.voltageFactor>";
			rdfXmlResource += externalnetworkinjection.getVoltageFactor().getValue().toString();
			rdfXmlResource += "</cim:ExternalNetworkInjection.voltageFactor>\n";
		}
		if (externalnetworkinjection.getMRID() != null){
			rdfXmlResource += "\t</cim:ExternalNetworkInjection>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.GroundDisconnector grounddisconnector){
		String rdfXmlResource = "";
		if (grounddisconnector.getMRID() != null){
			rdfXmlResource = "\t<cim:GroundDisconnector rdf:ID = \"_" + grounddisconnector.getMRID() + "\">\n";
		}
		if (grounddisconnector.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + grounddisconnector.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + grounddisconnector.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + grounddisconnector.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + grounddisconnector.getSvStatus().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: grounddisconnector.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (grounddisconnector.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + grounddisconnector.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + grounddisconnector.getAssets().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + grounddisconnector.getLocation().getMRID() + "\"/>\n";
		}
		if (grounddisconnector.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += grounddisconnector.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (grounddisconnector.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += grounddisconnector.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (grounddisconnector.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += grounddisconnector.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (grounddisconnector.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += grounddisconnector.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (grounddisconnector.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += grounddisconnector.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (grounddisconnector.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += grounddisconnector.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (grounddisconnector.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += grounddisconnector.getSwitchOnDate().getYear() + "-" + grounddisconnector.getSwitchOnDate().getMonth() + "-" + grounddisconnector.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (grounddisconnector.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += grounddisconnector.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (grounddisconnector.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += grounddisconnector.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (grounddisconnector.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += grounddisconnector.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (grounddisconnector.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += grounddisconnector.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (grounddisconnector.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += grounddisconnector.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (grounddisconnector.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += grounddisconnector.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (grounddisconnector.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += grounddisconnector.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (grounddisconnector.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += grounddisconnector.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (grounddisconnector.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += grounddisconnector.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (grounddisconnector.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += grounddisconnector.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (grounddisconnector.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += grounddisconnector.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (grounddisconnector.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += grounddisconnector.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (grounddisconnector.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += grounddisconnector.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (grounddisconnector.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += grounddisconnector.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (grounddisconnector.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += grounddisconnector.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (grounddisconnector.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += grounddisconnector.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (grounddisconnector.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += grounddisconnector.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (grounddisconnector.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += grounddisconnector.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (grounddisconnector.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += grounddisconnector.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (grounddisconnector.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += grounddisconnector.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (grounddisconnector.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += grounddisconnector.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (grounddisconnector.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += grounddisconnector.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (grounddisconnector.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += grounddisconnector.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (grounddisconnector.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += grounddisconnector.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (grounddisconnector.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += grounddisconnector.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (grounddisconnector.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += grounddisconnector.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (grounddisconnector.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += grounddisconnector.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (grounddisconnector.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += grounddisconnector.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (grounddisconnector.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += grounddisconnector.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (grounddisconnector.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += grounddisconnector.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (grounddisconnector.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += grounddisconnector.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (grounddisconnector.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + grounddisconnector.getRpnCondition() + "\"/>\n";
		}
		if (grounddisconnector.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += grounddisconnector.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (grounddisconnector.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + grounddisconnector.getSchemeType() + "\"/>\n";
		}
		if (grounddisconnector.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + grounddisconnector.getSeasonType() + "\"/>\n";
		}
		if (grounddisconnector.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + grounddisconnector.getSubtaskNumber() + "\"/>\n";
		}
		if (grounddisconnector.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += grounddisconnector.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (grounddisconnector.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += grounddisconnector.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (grounddisconnector.getMRID() != null){
			rdfXmlResource += "\t</cim:GroundDisconnector>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Junction junction){
		String rdfXmlResource = "";
		if (junction.getMRID() != null){
			rdfXmlResource = "\t<cim:Junction rdf:ID = \"_" + junction.getMRID() + "\">\n";
		}
		if (junction.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + junction.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (junction.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + junction.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (junction.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + junction.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (junction.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + junction.getSvStatus().getMRID() + "\"/>\n";
		}
		if (junction.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: junction.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (junction.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + junction.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (junction.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + junction.getAssets().getMRID() + "\"/>\n";
		}
		if (junction.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + junction.getLocation().getMRID() + "\"/>\n";
		}
		if (junction.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += junction.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (junction.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += junction.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (junction.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += junction.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (junction.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += junction.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (junction.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += junction.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (junction.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += junction.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (junction.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += junction.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (junction.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += junction.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (junction.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += junction.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (junction.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += junction.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (junction.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += junction.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (junction.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += junction.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (junction.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += junction.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (junction.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += junction.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (junction.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += junction.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (junction.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += junction.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (junction.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += junction.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (junction.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += junction.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (junction.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += junction.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (junction.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += junction.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (junction.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += junction.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (junction.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += junction.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (junction.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += junction.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (junction.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += junction.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (junction.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += junction.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (junction.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += junction.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (junction.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += junction.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (junction.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += junction.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (junction.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += junction.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (junction.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += junction.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (junction.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += junction.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (junction.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + junction.getRpnCondition() + "\"/>\n";
		}
		if (junction.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += junction.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (junction.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + junction.getSchemeType() + "\"/>\n";
		}
		if (junction.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + junction.getSeasonType() + "\"/>\n";
		}
		if (junction.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + junction.getSubtaskNumber() + "\"/>\n";
		}
		if (junction.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += junction.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (junction.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += junction.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (junction.getMRID() != null){
			rdfXmlResource += "\t</cim:Junction>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Line line){
		String rdfXmlResource = "";
		if (line.getMRID() != null){
			rdfXmlResource = "\t<cim:Line rdf:ID = \"_" + line.getMRID() + "\">\n";
		}
		if (line.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + line.getAssets().getMRID() + "\"/>\n";
		}
		if (line.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + line.getLocation().getMRID() + "\"/>\n";
		}
		if (line.getRegion() != null){
			rdfXmlResource += "\t\t<cim:Line.Region rdf:resource=\"#_" + line.getRegion().getMRID() + "\"/>\n";
		}
		if (line.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += line.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (line.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += line.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (line.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += line.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (line.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += line.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (line.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += line.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (line.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += line.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (line.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += line.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (line.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += line.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (line.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += line.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (line.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += line.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (line.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += line.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (line.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += line.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (line.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += line.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (line.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += line.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (line.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += line.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (line.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += line.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (line.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += line.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (line.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += line.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (line.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += line.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (line.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += line.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (line.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + line.getRpnCondition() + "\"/>\n";
		}
		if (line.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += line.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (line.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + line.getSchemeType() + "\"/>\n";
		}
		if (line.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + line.getSeasonType() + "\"/>\n";
		}
		if (line.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + line.getSubtaskNumber() + "\"/>\n";
		}
		if (line.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += line.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (line.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += line.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (line.getMRID() != null){
			rdfXmlResource += "\t</cim:Line>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.LinearShuntCompensator linearshuntcompensator){
		String rdfXmlResource = "";
		if (linearshuntcompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:LinearShuntCompensator rdf:ID = \"_" + linearshuntcompensator.getMRID() + "\">\n";
		}
		if (linearshuntcompensator.getSvShuntCompensatorSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.SvShuntCompensatorSections rdf:resource=\"#_" + linearshuntcompensator.getSvShuntCompensatorSections().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + linearshuntcompensator.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + linearshuntcompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + linearshuntcompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + linearshuntcompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + linearshuntcompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: linearshuntcompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (linearshuntcompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + linearshuntcompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + linearshuntcompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + linearshuntcompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (linearshuntcompensator.getAVRDelay() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.aVRDelay>";
			rdfXmlResource += linearshuntcompensator.getAVRDelay().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.aVRDelay>\n";
		}
		if (linearshuntcompensator.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.grounded>";
			rdfXmlResource += linearshuntcompensator.getGrounded().toString();
			rdfXmlResource += "</cim:ShuntCompensator.grounded>\n";
		}
		if (linearshuntcompensator.getMaximumSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.maximumSections>";
			rdfXmlResource += linearshuntcompensator.getMaximumSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.maximumSections>\n";
		}
		if (linearshuntcompensator.getNomU() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.nomU>";
			rdfXmlResource += linearshuntcompensator.getNomU().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.nomU>\n";
		}
		if (linearshuntcompensator.getNormalSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.normalSections>";
			rdfXmlResource += linearshuntcompensator.getNormalSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.normalSections>\n";
		}
		if (linearshuntcompensator.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + linearshuntcompensator.getPhaseConnection() + "\"/>\n";
		}
		if (linearshuntcompensator.getSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.sections>";
			rdfXmlResource += linearshuntcompensator.getSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.sections>\n";
		}
		if (linearshuntcompensator.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnCount>";
			rdfXmlResource += linearshuntcompensator.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnCount>\n";
		}
		if (linearshuntcompensator.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnDate>";
			rdfXmlResource += linearshuntcompensator.getSwitchOnDate().getYear() + "-" + linearshuntcompensator.getSwitchOnDate().getMonth() + "-" + linearshuntcompensator.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnDate>\n";
		}
		if (linearshuntcompensator.getVoltageSensitivity() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.voltageSensitivity>";
			rdfXmlResource += linearshuntcompensator.getVoltageSensitivity().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.voltageSensitivity>\n";
		}
		if (linearshuntcompensator.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += linearshuntcompensator.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (linearshuntcompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += linearshuntcompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (linearshuntcompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += linearshuntcompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (linearshuntcompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += linearshuntcompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (linearshuntcompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += linearshuntcompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (linearshuntcompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += linearshuntcompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (linearshuntcompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += linearshuntcompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (linearshuntcompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += linearshuntcompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (linearshuntcompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += linearshuntcompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (linearshuntcompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += linearshuntcompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (linearshuntcompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += linearshuntcompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (linearshuntcompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += linearshuntcompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (linearshuntcompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += linearshuntcompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (linearshuntcompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += linearshuntcompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (linearshuntcompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += linearshuntcompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (linearshuntcompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += linearshuntcompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (linearshuntcompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += linearshuntcompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (linearshuntcompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += linearshuntcompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (linearshuntcompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += linearshuntcompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (linearshuntcompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += linearshuntcompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (linearshuntcompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += linearshuntcompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (linearshuntcompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += linearshuntcompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (linearshuntcompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += linearshuntcompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (linearshuntcompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += linearshuntcompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (linearshuntcompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += linearshuntcompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (linearshuntcompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += linearshuntcompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (linearshuntcompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += linearshuntcompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (linearshuntcompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += linearshuntcompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (linearshuntcompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += linearshuntcompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (linearshuntcompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += linearshuntcompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (linearshuntcompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += linearshuntcompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (linearshuntcompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += linearshuntcompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (linearshuntcompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + linearshuntcompensator.getRpnCondition() + "\"/>\n";
		}
		if (linearshuntcompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += linearshuntcompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (linearshuntcompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + linearshuntcompensator.getSchemeType() + "\"/>\n";
		}
		if (linearshuntcompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + linearshuntcompensator.getSeasonType() + "\"/>\n";
		}
		if (linearshuntcompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + linearshuntcompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (linearshuntcompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += linearshuntcompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (linearshuntcompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += linearshuntcompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (linearshuntcompensator.getB0PerSection() != null){
			rdfXmlResource += "\t\t<cim:LinearShuntCompensator.b0PerSection>";
			rdfXmlResource += linearshuntcompensator.getB0PerSection().getValue().toString();
			rdfXmlResource += "</cim:LinearShuntCompensator.b0PerSection>\n";
		}
		if (linearshuntcompensator.getBPerSection() != null){
			rdfXmlResource += "\t\t<cim:LinearShuntCompensator.bPerSection>";
			rdfXmlResource += linearshuntcompensator.getBPerSection().getValue().toString();
			rdfXmlResource += "</cim:LinearShuntCompensator.bPerSection>\n";
		}
		if (linearshuntcompensator.getG0PerSection() != null){
			rdfXmlResource += "\t\t<cim:LinearShuntCompensator.g0PerSection>";
			rdfXmlResource += linearshuntcompensator.getG0PerSection().getValue().toString();
			rdfXmlResource += "</cim:LinearShuntCompensator.g0PerSection>\n";
		}
		if (linearshuntcompensator.getGPerSection() != null){
			rdfXmlResource += "\t\t<cim:LinearShuntCompensator.gPerSection>";
			rdfXmlResource += linearshuntcompensator.getGPerSection().getValue().toString();
			rdfXmlResource += "</cim:LinearShuntCompensator.gPerSection>\n";
		}
		if (linearshuntcompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:LinearShuntCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.LoadBreakSwitch loadbreakswitch){
		String rdfXmlResource = "";
		if (loadbreakswitch.getMRID() != null){
			rdfXmlResource = "\t<cim:LoadBreakSwitch rdf:ID = \"_" + loadbreakswitch.getMRID() + "\">\n";
		}
		if (loadbreakswitch.getOperatedByProtectionEquipment() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: loadbreakswitch.getOperatedByProtectionEquipment()){
				rdfXmlResource += "\t\t<cim:ProtectedSwitch.OperatedByProtectionEquipment rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (loadbreakswitch.getLN_Base() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.LN_Base rdf:resource=\"#_" + loadbreakswitch.getLN_Base().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + loadbreakswitch.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + loadbreakswitch.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + loadbreakswitch.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + loadbreakswitch.getSvStatus().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: loadbreakswitch.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (loadbreakswitch.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + loadbreakswitch.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + loadbreakswitch.getAssets().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + loadbreakswitch.getLocation().getMRID() + "\"/>\n";
		}
		if (loadbreakswitch.getBreakingCapacity() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.breakingCapacity>";
			rdfXmlResource += loadbreakswitch.getBreakingCapacity().getValue().toString();
			rdfXmlResource += "</cim:ProtectedSwitch.breakingCapacity>\n";
		}
		if (loadbreakswitch.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += loadbreakswitch.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (loadbreakswitch.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += loadbreakswitch.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (loadbreakswitch.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += loadbreakswitch.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (loadbreakswitch.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += loadbreakswitch.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (loadbreakswitch.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += loadbreakswitch.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (loadbreakswitch.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += loadbreakswitch.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (loadbreakswitch.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += loadbreakswitch.getSwitchOnDate().getYear() + "-" + loadbreakswitch.getSwitchOnDate().getMonth() + "-" + loadbreakswitch.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (loadbreakswitch.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += loadbreakswitch.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (loadbreakswitch.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += loadbreakswitch.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (loadbreakswitch.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += loadbreakswitch.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (loadbreakswitch.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += loadbreakswitch.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (loadbreakswitch.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += loadbreakswitch.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (loadbreakswitch.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += loadbreakswitch.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (loadbreakswitch.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += loadbreakswitch.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (loadbreakswitch.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += loadbreakswitch.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (loadbreakswitch.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += loadbreakswitch.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (loadbreakswitch.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += loadbreakswitch.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (loadbreakswitch.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += loadbreakswitch.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (loadbreakswitch.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += loadbreakswitch.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (loadbreakswitch.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += loadbreakswitch.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (loadbreakswitch.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += loadbreakswitch.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (loadbreakswitch.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += loadbreakswitch.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (loadbreakswitch.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += loadbreakswitch.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (loadbreakswitch.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += loadbreakswitch.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (loadbreakswitch.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += loadbreakswitch.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (loadbreakswitch.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += loadbreakswitch.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (loadbreakswitch.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += loadbreakswitch.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (loadbreakswitch.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += loadbreakswitch.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (loadbreakswitch.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += loadbreakswitch.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (loadbreakswitch.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += loadbreakswitch.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (loadbreakswitch.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += loadbreakswitch.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (loadbreakswitch.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += loadbreakswitch.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (loadbreakswitch.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += loadbreakswitch.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (loadbreakswitch.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += loadbreakswitch.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (loadbreakswitch.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += loadbreakswitch.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (loadbreakswitch.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += loadbreakswitch.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (loadbreakswitch.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += loadbreakswitch.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (loadbreakswitch.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += loadbreakswitch.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (loadbreakswitch.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + loadbreakswitch.getRpnCondition() + "\"/>\n";
		}
		if (loadbreakswitch.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += loadbreakswitch.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (loadbreakswitch.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + loadbreakswitch.getSchemeType() + "\"/>\n";
		}
		if (loadbreakswitch.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + loadbreakswitch.getSeasonType() + "\"/>\n";
		}
		if (loadbreakswitch.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + loadbreakswitch.getSubtaskNumber() + "\"/>\n";
		}
		if (loadbreakswitch.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += loadbreakswitch.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (loadbreakswitch.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += loadbreakswitch.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (loadbreakswitch.getMRID() != null){
			rdfXmlResource += "\t</cim:LoadBreakSwitch>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.NonlinearShuntCompensator nonlinearshuntcompensator){
		String rdfXmlResource = "";
		if (nonlinearshuntcompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:NonlinearShuntCompensator rdf:ID = \"_" + nonlinearshuntcompensator.getMRID() + "\">\n";
		}
		if (nonlinearshuntcompensator.getSvShuntCompensatorSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.SvShuntCompensatorSections rdf:resource=\"#_" + nonlinearshuntcompensator.getSvShuntCompensatorSections().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + nonlinearshuntcompensator.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + nonlinearshuntcompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + nonlinearshuntcompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + nonlinearshuntcompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + nonlinearshuntcompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: nonlinearshuntcompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (nonlinearshuntcompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + nonlinearshuntcompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + nonlinearshuntcompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + nonlinearshuntcompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getAVRDelay() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.aVRDelay>";
			rdfXmlResource += nonlinearshuntcompensator.getAVRDelay().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.aVRDelay>\n";
		}
		if (nonlinearshuntcompensator.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.grounded>";
			rdfXmlResource += nonlinearshuntcompensator.getGrounded().toString();
			rdfXmlResource += "</cim:ShuntCompensator.grounded>\n";
		}
		if (nonlinearshuntcompensator.getMaximumSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.maximumSections>";
			rdfXmlResource += nonlinearshuntcompensator.getMaximumSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.maximumSections>\n";
		}
		if (nonlinearshuntcompensator.getNomU() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.nomU>";
			rdfXmlResource += nonlinearshuntcompensator.getNomU().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.nomU>\n";
		}
		if (nonlinearshuntcompensator.getNormalSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.normalSections>";
			rdfXmlResource += nonlinearshuntcompensator.getNormalSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.normalSections>\n";
		}
		if (nonlinearshuntcompensator.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + nonlinearshuntcompensator.getPhaseConnection() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.sections>";
			rdfXmlResource += nonlinearshuntcompensator.getSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.sections>\n";
		}
		if (nonlinearshuntcompensator.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnCount>";
			rdfXmlResource += nonlinearshuntcompensator.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnCount>\n";
		}
		if (nonlinearshuntcompensator.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnDate>";
			rdfXmlResource += nonlinearshuntcompensator.getSwitchOnDate().getYear() + "-" + nonlinearshuntcompensator.getSwitchOnDate().getMonth() + "-" + nonlinearshuntcompensator.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnDate>\n";
		}
		if (nonlinearshuntcompensator.getVoltageSensitivity() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.voltageSensitivity>";
			rdfXmlResource += nonlinearshuntcompensator.getVoltageSensitivity().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.voltageSensitivity>\n";
		}
		if (nonlinearshuntcompensator.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += nonlinearshuntcompensator.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (nonlinearshuntcompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += nonlinearshuntcompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (nonlinearshuntcompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += nonlinearshuntcompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (nonlinearshuntcompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += nonlinearshuntcompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (nonlinearshuntcompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += nonlinearshuntcompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (nonlinearshuntcompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += nonlinearshuntcompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (nonlinearshuntcompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += nonlinearshuntcompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (nonlinearshuntcompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += nonlinearshuntcompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (nonlinearshuntcompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += nonlinearshuntcompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (nonlinearshuntcompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += nonlinearshuntcompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (nonlinearshuntcompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += nonlinearshuntcompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (nonlinearshuntcompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += nonlinearshuntcompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (nonlinearshuntcompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += nonlinearshuntcompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (nonlinearshuntcompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += nonlinearshuntcompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (nonlinearshuntcompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += nonlinearshuntcompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (nonlinearshuntcompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += nonlinearshuntcompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (nonlinearshuntcompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += nonlinearshuntcompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (nonlinearshuntcompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += nonlinearshuntcompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (nonlinearshuntcompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += nonlinearshuntcompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (nonlinearshuntcompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += nonlinearshuntcompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (nonlinearshuntcompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += nonlinearshuntcompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (nonlinearshuntcompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += nonlinearshuntcompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (nonlinearshuntcompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += nonlinearshuntcompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (nonlinearshuntcompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += nonlinearshuntcompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (nonlinearshuntcompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += nonlinearshuntcompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (nonlinearshuntcompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += nonlinearshuntcompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (nonlinearshuntcompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += nonlinearshuntcompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (nonlinearshuntcompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += nonlinearshuntcompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (nonlinearshuntcompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += nonlinearshuntcompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (nonlinearshuntcompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += nonlinearshuntcompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (nonlinearshuntcompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += nonlinearshuntcompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (nonlinearshuntcompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += nonlinearshuntcompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (nonlinearshuntcompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + nonlinearshuntcompensator.getRpnCondition() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += nonlinearshuntcompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (nonlinearshuntcompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + nonlinearshuntcompensator.getSchemeType() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + nonlinearshuntcompensator.getSeasonType() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + nonlinearshuntcompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (nonlinearshuntcompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += nonlinearshuntcompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (nonlinearshuntcompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += nonlinearshuntcompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (nonlinearshuntcompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:NonlinearShuntCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.NonlinearShuntCompensatorPoint nonlinearshuntcompensatorpoint){
		String rdfXmlResource = "";
		if (nonlinearshuntcompensatorpoint.getMRID() != null){
			rdfXmlResource = "\t<cim:NonlinearShuntCompensatorPoint rdf:ID = \"_" + nonlinearshuntcompensatorpoint.getMRID() + "\">\n";
		}
		if (nonlinearshuntcompensatorpoint.getNonlinearShuntCompensator() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.NonlinearShuntCompensator rdf:resource=\"#_" + nonlinearshuntcompensatorpoint.getNonlinearShuntCompensator().getMRID() + "\"/>\n";
		}
		if (nonlinearshuntcompensatorpoint.getB() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.b>";
			rdfXmlResource += nonlinearshuntcompensatorpoint.getB().getValue().toString();
			rdfXmlResource += "</cim:NonlinearShuntCompensatorPoint.b>\n";
		}
		if (nonlinearshuntcompensatorpoint.getB0() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.b0>";
			rdfXmlResource += nonlinearshuntcompensatorpoint.getB0().getValue().toString();
			rdfXmlResource += "</cim:NonlinearShuntCompensatorPoint.b0>\n";
		}
		if (nonlinearshuntcompensatorpoint.getG() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.g>";
			rdfXmlResource += nonlinearshuntcompensatorpoint.getG().getValue().toString();
			rdfXmlResource += "</cim:NonlinearShuntCompensatorPoint.g>\n";
		}
		if (nonlinearshuntcompensatorpoint.getG0() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.g0>";
			rdfXmlResource += nonlinearshuntcompensatorpoint.getG0().getValue().toString();
			rdfXmlResource += "</cim:NonlinearShuntCompensatorPoint.g0>\n";
		}
		if (nonlinearshuntcompensatorpoint.getSectionNumber() != null){
			rdfXmlResource += "\t\t<cim:NonlinearShuntCompensatorPoint.sectionNumber>";
			rdfXmlResource += nonlinearshuntcompensatorpoint.getSectionNumber().toString();
			rdfXmlResource += "</cim:NonlinearShuntCompensatorPoint.sectionNumber>\n";
		}
		if (nonlinearshuntcompensatorpoint.getMRID() != null){
			rdfXmlResource += "\t</cim:NonlinearShuntCompensatorPoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PerLengthLineParameter perlengthlineparameter){
		String rdfXmlResource = "";
		if (perlengthlineparameter.getMRID() != null){
			rdfXmlResource = "\t<cim:PerLengthLineParameter rdf:ID = \"_" + perlengthlineparameter.getMRID() + "\">\n";
		}
		if (perlengthlineparameter.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += perlengthlineparameter.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (perlengthlineparameter.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += perlengthlineparameter.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (perlengthlineparameter.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += perlengthlineparameter.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (perlengthlineparameter.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += perlengthlineparameter.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (perlengthlineparameter.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += perlengthlineparameter.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (perlengthlineparameter.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + perlengthlineparameter.getRpnCondition() + "\"/>\n";
		}
		if (perlengthlineparameter.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += perlengthlineparameter.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (perlengthlineparameter.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + perlengthlineparameter.getSchemeType() + "\"/>\n";
		}
		if (perlengthlineparameter.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + perlengthlineparameter.getSeasonType() + "\"/>\n";
		}
		if (perlengthlineparameter.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + perlengthlineparameter.getSubtaskNumber() + "\"/>\n";
		}
		if (perlengthlineparameter.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += perlengthlineparameter.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (perlengthlineparameter.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += perlengthlineparameter.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (perlengthlineparameter.getMRID() != null){
			rdfXmlResource += "\t</cim:PerLengthLineParameter>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PetersenCoil petersencoil){
		String rdfXmlResource = "";
		if (petersencoil.getMRID() != null){
			rdfXmlResource = "\t<cim:PetersenCoil rdf:ID = \"_" + petersencoil.getMRID() + "\">\n";
		}
		if (petersencoil.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + petersencoil.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (petersencoil.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + petersencoil.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (petersencoil.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + petersencoil.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (petersencoil.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + petersencoil.getSvStatus().getMRID() + "\"/>\n";
		}
		if (petersencoil.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: petersencoil.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (petersencoil.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + petersencoil.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (petersencoil.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + petersencoil.getAssets().getMRID() + "\"/>\n";
		}
		if (petersencoil.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + petersencoil.getLocation().getMRID() + "\"/>\n";
		}
		if (petersencoil.getR() != null){
			rdfXmlResource += "\t\t<cim:EarthFaultCompensator.r>";
			rdfXmlResource += petersencoil.getR().getValue().toString();
			rdfXmlResource += "</cim:EarthFaultCompensator.r>\n";
		}
		if (petersencoil.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += petersencoil.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (petersencoil.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += petersencoil.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (petersencoil.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += petersencoil.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (petersencoil.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += petersencoil.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (petersencoil.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += petersencoil.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (petersencoil.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += petersencoil.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (petersencoil.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += petersencoil.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (petersencoil.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += petersencoil.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (petersencoil.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += petersencoil.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (petersencoil.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += petersencoil.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (petersencoil.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += petersencoil.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (petersencoil.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += petersencoil.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (petersencoil.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += petersencoil.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (petersencoil.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += petersencoil.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (petersencoil.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += petersencoil.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (petersencoil.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += petersencoil.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (petersencoil.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += petersencoil.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (petersencoil.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += petersencoil.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (petersencoil.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += petersencoil.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (petersencoil.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += petersencoil.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (petersencoil.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += petersencoil.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (petersencoil.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += petersencoil.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (petersencoil.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += petersencoil.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (petersencoil.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += petersencoil.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (petersencoil.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += petersencoil.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (petersencoil.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += petersencoil.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (petersencoil.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += petersencoil.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (petersencoil.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += petersencoil.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (petersencoil.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += petersencoil.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (petersencoil.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += petersencoil.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (petersencoil.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += petersencoil.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (petersencoil.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + petersencoil.getRpnCondition() + "\"/>\n";
		}
		if (petersencoil.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += petersencoil.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (petersencoil.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + petersencoil.getSchemeType() + "\"/>\n";
		}
		if (petersencoil.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + petersencoil.getSeasonType() + "\"/>\n";
		}
		if (petersencoil.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + petersencoil.getSubtaskNumber() + "\"/>\n";
		}
		if (petersencoil.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += petersencoil.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (petersencoil.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += petersencoil.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (petersencoil.getMode() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.mode rdf:resource=\"" + this.baseURI + "#PetersenCoilModeKind." + petersencoil.getMode() + "\"/>\n";
		}
		if (petersencoil.getNominalU() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.nominalU>";
			rdfXmlResource += petersencoil.getNominalU().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.nominalU>\n";
		}
		if (petersencoil.getOffsetCurrent() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.offsetCurrent>";
			rdfXmlResource += petersencoil.getOffsetCurrent().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.offsetCurrent>\n";
		}
		if (petersencoil.getPositionCurrent() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.positionCurrent>";
			rdfXmlResource += petersencoil.getPositionCurrent().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.positionCurrent>\n";
		}
		if (petersencoil.getXGroundMax() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.xGroundMax>";
			rdfXmlResource += petersencoil.getXGroundMax().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.xGroundMax>\n";
		}
		if (petersencoil.getXGroundMin() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.xGroundMin>";
			rdfXmlResource += petersencoil.getXGroundMin().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.xGroundMin>\n";
		}
		if (petersencoil.getXGroundNominal() != null){
			rdfXmlResource += "\t\t<cim:PetersenCoil.xGroundNominal>";
			rdfXmlResource += petersencoil.getXGroundNominal().getValue().toString();
			rdfXmlResource += "</cim:PetersenCoil.xGroundNominal>\n";
		}
		if (petersencoil.getMRID() != null){
			rdfXmlResource += "\t</cim:PetersenCoil>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChanger phasetapchanger){
		String rdfXmlResource = "";
		if (phasetapchanger.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChanger rdf:ID = \"_" + phasetapchanger.getMRID() + "\">\n";
		}
		if (phasetapchanger.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchanger.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchanger.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchanger.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchanger.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchanger.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchanger.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchanger.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchanger.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchanger.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchanger.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchanger.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchanger.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchanger.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchanger.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchanger.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchanger.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchanger.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchanger.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchanger.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchanger.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchanger.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchanger.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchanger.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchanger.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchanger.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchanger.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchanger.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchanger.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchanger.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchanger.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchanger.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchanger.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchanger.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchanger.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchanger.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchanger.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchanger.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchanger.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchanger.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchanger.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchanger.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchanger.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchanger.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchanger.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchanger.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchanger.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchanger.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchanger.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchanger.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchanger.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchanger.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchanger.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchanger.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchanger.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchanger.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchanger.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchanger.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchanger.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchanger.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchanger.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchanger.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchanger.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchanger.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchanger.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchanger.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchanger.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchanger.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchanger.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchanger.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchanger.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchanger.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchanger.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchanger.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchanger.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchanger.getSchemeType() + "\"/>\n";
		}
		if (phasetapchanger.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchanger.getSeasonType() + "\"/>\n";
		}
		if (phasetapchanger.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchanger.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchanger.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchanger.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchanger.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchanger.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchanger.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChanger>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerAsymmetrical phasetapchangerasymmetrical){
		String rdfXmlResource = "";
		if (phasetapchangerasymmetrical.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerAsymmetrical rdf:ID = \"_" + phasetapchangerasymmetrical.getMRID() + "\">\n";
		}
		if (phasetapchangerasymmetrical.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchangerasymmetrical.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchangerasymmetrical.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchangerasymmetrical.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchangerasymmetrical.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchangerasymmetrical.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getVoltageStepIncrement() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.voltageStepIncrement>";
			rdfXmlResource += phasetapchangerasymmetrical.getVoltageStepIncrement().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.voltageStepIncrement>\n";
		}
		if (phasetapchangerasymmetrical.getXMax() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMax>";
			rdfXmlResource += phasetapchangerasymmetrical.getXMax().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMax>\n";
		}
		if (phasetapchangerasymmetrical.getXMin() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMin>";
			rdfXmlResource += phasetapchangerasymmetrical.getXMin().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMin>\n";
		}
		if (phasetapchangerasymmetrical.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchangerasymmetrical.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchangerasymmetrical.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchangerasymmetrical.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchangerasymmetrical.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchangerasymmetrical.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchangerasymmetrical.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchangerasymmetrical.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchangerasymmetrical.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchangerasymmetrical.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchangerasymmetrical.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchangerasymmetrical.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchangerasymmetrical.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchangerasymmetrical.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchangerasymmetrical.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchangerasymmetrical.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchangerasymmetrical.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchangerasymmetrical.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchangerasymmetrical.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchangerasymmetrical.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchangerasymmetrical.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchangerasymmetrical.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchangerasymmetrical.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchangerasymmetrical.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchangerasymmetrical.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchangerasymmetrical.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchangerasymmetrical.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchangerasymmetrical.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchangerasymmetrical.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchangerasymmetrical.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchangerasymmetrical.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchangerasymmetrical.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchangerasymmetrical.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchangerasymmetrical.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchangerasymmetrical.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchangerasymmetrical.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchangerasymmetrical.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchangerasymmetrical.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchangerasymmetrical.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchangerasymmetrical.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchangerasymmetrical.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchangerasymmetrical.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchangerasymmetrical.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchangerasymmetrical.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchangerasymmetrical.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchangerasymmetrical.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchangerasymmetrical.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchangerasymmetrical.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchangerasymmetrical.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchangerasymmetrical.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchangerasymmetrical.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangerasymmetrical.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangerasymmetrical.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangerasymmetrical.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangerasymmetrical.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangerasymmetrical.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangerasymmetrical.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangerasymmetrical.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangerasymmetrical.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangerasymmetrical.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangerasymmetrical.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangerasymmetrical.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangerasymmetrical.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangerasymmetrical.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangerasymmetrical.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangerasymmetrical.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangerasymmetrical.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangerasymmetrical.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangerasymmetrical.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangerasymmetrical.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangerasymmetrical.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangerasymmetrical.getWindingConnectionAngle() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerAsymmetrical.windingConnectionAngle>";
			rdfXmlResource += phasetapchangerasymmetrical.getWindingConnectionAngle().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerAsymmetrical.windingConnectionAngle>\n";
		}
		if (phasetapchangerasymmetrical.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerAsymmetrical>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerLinear phasetapchangerlinear){
		String rdfXmlResource = "";
		if (phasetapchangerlinear.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerLinear rdf:ID = \"_" + phasetapchangerlinear.getMRID() + "\">\n";
		}
		if (phasetapchangerlinear.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchangerlinear.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchangerlinear.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchangerlinear.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchangerlinear.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchangerlinear.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchangerlinear.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchangerlinear.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchangerlinear.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchangerlinear.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchangerlinear.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchangerlinear.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchangerlinear.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchangerlinear.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchangerlinear.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchangerlinear.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchangerlinear.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchangerlinear.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchangerlinear.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchangerlinear.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchangerlinear.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchangerlinear.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchangerlinear.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchangerlinear.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchangerlinear.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchangerlinear.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchangerlinear.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchangerlinear.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchangerlinear.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchangerlinear.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchangerlinear.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchangerlinear.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchangerlinear.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchangerlinear.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchangerlinear.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchangerlinear.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchangerlinear.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchangerlinear.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchangerlinear.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchangerlinear.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchangerlinear.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchangerlinear.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchangerlinear.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchangerlinear.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchangerlinear.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchangerlinear.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchangerlinear.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchangerlinear.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchangerlinear.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchangerlinear.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchangerlinear.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchangerlinear.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchangerlinear.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchangerlinear.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchangerlinear.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchangerlinear.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchangerlinear.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchangerlinear.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchangerlinear.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchangerlinear.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchangerlinear.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangerlinear.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangerlinear.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangerlinear.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangerlinear.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangerlinear.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangerlinear.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangerlinear.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangerlinear.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangerlinear.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangerlinear.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangerlinear.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangerlinear.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangerlinear.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangerlinear.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangerlinear.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangerlinear.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangerlinear.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangerlinear.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangerlinear.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangerlinear.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangerlinear.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangerlinear.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangerlinear.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangerlinear.getStepPhaseShiftIncrement() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerLinear.stepPhaseShiftIncrement>";
			rdfXmlResource += phasetapchangerlinear.getStepPhaseShiftIncrement().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerLinear.stepPhaseShiftIncrement>\n";
		}
		if (phasetapchangerlinear.getXMax() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerLinear.xMax>";
			rdfXmlResource += phasetapchangerlinear.getXMax().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerLinear.xMax>\n";
		}
		if (phasetapchangerlinear.getXMin() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerLinear.xMin>";
			rdfXmlResource += phasetapchangerlinear.getXMin().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerLinear.xMin>\n";
		}
		if (phasetapchangerlinear.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerLinear>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerNonLinear phasetapchangernonlinear){
		String rdfXmlResource = "";
		if (phasetapchangernonlinear.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerNonLinear rdf:ID = \"_" + phasetapchangernonlinear.getMRID() + "\">\n";
		}
		if (phasetapchangernonlinear.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchangernonlinear.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchangernonlinear.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchangernonlinear.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchangernonlinear.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchangernonlinear.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchangernonlinear.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchangernonlinear.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchangernonlinear.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchangernonlinear.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchangernonlinear.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchangernonlinear.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchangernonlinear.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchangernonlinear.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchangernonlinear.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchangernonlinear.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchangernonlinear.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchangernonlinear.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchangernonlinear.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchangernonlinear.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchangernonlinear.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchangernonlinear.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchangernonlinear.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchangernonlinear.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchangernonlinear.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchangernonlinear.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchangernonlinear.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchangernonlinear.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchangernonlinear.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchangernonlinear.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchangernonlinear.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchangernonlinear.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchangernonlinear.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchangernonlinear.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchangernonlinear.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchangernonlinear.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchangernonlinear.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchangernonlinear.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchangernonlinear.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchangernonlinear.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchangernonlinear.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchangernonlinear.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchangernonlinear.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchangernonlinear.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchangernonlinear.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchangernonlinear.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchangernonlinear.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchangernonlinear.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchangernonlinear.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchangernonlinear.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchangernonlinear.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchangernonlinear.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchangernonlinear.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchangernonlinear.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchangernonlinear.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchangernonlinear.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangernonlinear.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangernonlinear.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangernonlinear.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangernonlinear.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangernonlinear.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangernonlinear.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangernonlinear.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangernonlinear.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangernonlinear.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangernonlinear.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangernonlinear.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangernonlinear.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangernonlinear.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangernonlinear.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangernonlinear.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangernonlinear.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangernonlinear.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangernonlinear.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangernonlinear.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangernonlinear.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangernonlinear.getVoltageStepIncrement() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.voltageStepIncrement>";
			rdfXmlResource += phasetapchangernonlinear.getVoltageStepIncrement().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.voltageStepIncrement>\n";
		}
		if (phasetapchangernonlinear.getXMax() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMax>";
			rdfXmlResource += phasetapchangernonlinear.getXMax().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMax>\n";
		}
		if (phasetapchangernonlinear.getXMin() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMin>";
			rdfXmlResource += phasetapchangernonlinear.getXMin().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMin>\n";
		}
		if (phasetapchangernonlinear.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerNonLinear>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerSymmetrical phasetapchangersymmetrical){
		String rdfXmlResource = "";
		if (phasetapchangersymmetrical.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerSymmetrical rdf:ID = \"_" + phasetapchangersymmetrical.getMRID() + "\">\n";
		}
		if (phasetapchangersymmetrical.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchangersymmetrical.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchangersymmetrical.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchangersymmetrical.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchangersymmetrical.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchangersymmetrical.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getVoltageStepIncrement() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.voltageStepIncrement>";
			rdfXmlResource += phasetapchangersymmetrical.getVoltageStepIncrement().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.voltageStepIncrement>\n";
		}
		if (phasetapchangersymmetrical.getXMax() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMax>";
			rdfXmlResource += phasetapchangersymmetrical.getXMax().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMax>\n";
		}
		if (phasetapchangersymmetrical.getXMin() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerNonLinear.xMin>";
			rdfXmlResource += phasetapchangersymmetrical.getXMin().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerNonLinear.xMin>\n";
		}
		if (phasetapchangersymmetrical.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchangersymmetrical.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchangersymmetrical.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchangersymmetrical.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchangersymmetrical.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchangersymmetrical.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchangersymmetrical.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchangersymmetrical.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchangersymmetrical.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchangersymmetrical.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchangersymmetrical.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchangersymmetrical.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchangersymmetrical.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchangersymmetrical.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchangersymmetrical.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchangersymmetrical.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchangersymmetrical.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchangersymmetrical.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchangersymmetrical.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchangersymmetrical.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchangersymmetrical.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchangersymmetrical.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchangersymmetrical.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchangersymmetrical.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchangersymmetrical.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchangersymmetrical.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchangersymmetrical.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchangersymmetrical.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchangersymmetrical.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchangersymmetrical.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchangersymmetrical.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchangersymmetrical.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchangersymmetrical.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchangersymmetrical.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchangersymmetrical.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchangersymmetrical.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchangersymmetrical.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchangersymmetrical.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchangersymmetrical.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchangersymmetrical.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchangersymmetrical.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchangersymmetrical.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchangersymmetrical.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchangersymmetrical.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchangersymmetrical.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchangersymmetrical.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchangersymmetrical.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchangersymmetrical.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchangersymmetrical.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchangersymmetrical.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchangersymmetrical.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangersymmetrical.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangersymmetrical.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangersymmetrical.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangersymmetrical.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangersymmetrical.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangersymmetrical.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangersymmetrical.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangersymmetrical.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangersymmetrical.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangersymmetrical.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangersymmetrical.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangersymmetrical.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangersymmetrical.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangersymmetrical.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangersymmetrical.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangersymmetrical.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangersymmetrical.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangersymmetrical.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangersymmetrical.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangersymmetrical.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangersymmetrical.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerSymmetrical>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTable phasetapchangertable){
		String rdfXmlResource = "";
		if (phasetapchangertable.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerTable rdf:ID = \"_" + phasetapchangertable.getMRID() + "\">\n";
		}
		if (phasetapchangertable.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangertable.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangertable.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangertable.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangertable.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangertable.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangertable.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangertable.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangertable.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangertable.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangertable.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangertable.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangertable.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangertable.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangertable.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangertable.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangertable.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangertable.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangertable.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangertable.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangertable.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangertable.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangertable.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangertable.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangertable.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerTable>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTablePoint phasetapchangertablepoint){
		String rdfXmlResource = "";
		if (phasetapchangertablepoint.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerTablePoint rdf:ID = \"_" + phasetapchangertablepoint.getMRID() + "\">\n";
		}
		if (phasetapchangertablepoint.getPhaseTapChangerTable() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerTablePoint.PhaseTapChangerTable rdf:resource=\"#_" + phasetapchangertablepoint.getPhaseTapChangerTable().getMRID() + "\"/>\n";
		}
		if (phasetapchangertablepoint.getB() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.b>";
			rdfXmlResource += phasetapchangertablepoint.getB().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.b>\n";
		}
		if (phasetapchangertablepoint.getG() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.g>";
			rdfXmlResource += phasetapchangertablepoint.getG().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.g>\n";
		}
		if (phasetapchangertablepoint.getR() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.r>";
			rdfXmlResource += phasetapchangertablepoint.getR().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.r>\n";
		}
		if (phasetapchangertablepoint.getRatio() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.ratio>";
			rdfXmlResource += phasetapchangertablepoint.getRatio().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.ratio>\n";
		}
		if (phasetapchangertablepoint.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.step>";
			rdfXmlResource += phasetapchangertablepoint.getStep().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.step>\n";
		}
		if (phasetapchangertablepoint.getX() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.x>";
			rdfXmlResource += phasetapchangertablepoint.getX().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.x>\n";
		}
		if (phasetapchangertablepoint.getAngle() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerTablePoint.angle>";
			rdfXmlResource += phasetapchangertablepoint.getAngle().getValue().toString();
			rdfXmlResource += "</cim:PhaseTapChangerTablePoint.angle>\n";
		}
		if (phasetapchangertablepoint.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerTablePoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PhaseTapChangerTabular phasetapchangertabular){
		String rdfXmlResource = "";
		if (phasetapchangertabular.getMRID() != null){
			rdfXmlResource = "\t<cim:PhaseTapChangerTabular rdf:ID = \"_" + phasetapchangertabular.getMRID() + "\">\n";
		}
		if (phasetapchangertabular.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChanger.TransformerEnd rdf:resource=\"#_" + phasetapchangertabular.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + phasetapchangertabular.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + phasetapchangertabular.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + phasetapchangertabular.getAssets().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + phasetapchangertabular.getLocation().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getPhaseTapChangerTable() != null){
			rdfXmlResource += "\t\t<cim:PhaseTapChangerTabular.PhaseTapChangerTable rdf:resource=\"#_" + phasetapchangertabular.getPhaseTapChangerTable().getMRID() + "\"/>\n";
		}
		if (phasetapchangertabular.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += phasetapchangertabular.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (phasetapchangertabular.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += phasetapchangertabular.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (phasetapchangertabular.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += phasetapchangertabular.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (phasetapchangertabular.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += phasetapchangertabular.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (phasetapchangertabular.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += phasetapchangertabular.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (phasetapchangertabular.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += phasetapchangertabular.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (phasetapchangertabular.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += phasetapchangertabular.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (phasetapchangertabular.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += phasetapchangertabular.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (phasetapchangertabular.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += phasetapchangertabular.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (phasetapchangertabular.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += phasetapchangertabular.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (phasetapchangertabular.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += phasetapchangertabular.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (phasetapchangertabular.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += phasetapchangertabular.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (phasetapchangertabular.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += phasetapchangertabular.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (phasetapchangertabular.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += phasetapchangertabular.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (phasetapchangertabular.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += phasetapchangertabular.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (phasetapchangertabular.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += phasetapchangertabular.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (phasetapchangertabular.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += phasetapchangertabular.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (phasetapchangertabular.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += phasetapchangertabular.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (phasetapchangertabular.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += phasetapchangertabular.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (phasetapchangertabular.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += phasetapchangertabular.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (phasetapchangertabular.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += phasetapchangertabular.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (phasetapchangertabular.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += phasetapchangertabular.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (phasetapchangertabular.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += phasetapchangertabular.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (phasetapchangertabular.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += phasetapchangertabular.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (phasetapchangertabular.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += phasetapchangertabular.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (phasetapchangertabular.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += phasetapchangertabular.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (phasetapchangertabular.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += phasetapchangertabular.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (phasetapchangertabular.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += phasetapchangertabular.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (phasetapchangertabular.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += phasetapchangertabular.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (phasetapchangertabular.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += phasetapchangertabular.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (phasetapchangertabular.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + phasetapchangertabular.getRpnCondition() + "\"/>\n";
		}
		if (phasetapchangertabular.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += phasetapchangertabular.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (phasetapchangertabular.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + phasetapchangertabular.getSchemeType() + "\"/>\n";
		}
		if (phasetapchangertabular.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + phasetapchangertabular.getSeasonType() + "\"/>\n";
		}
		if (phasetapchangertabular.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + phasetapchangertabular.getSubtaskNumber() + "\"/>\n";
		}
		if (phasetapchangertabular.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += phasetapchangertabular.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (phasetapchangertabular.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += phasetapchangertabular.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (phasetapchangertabular.getMRID() != null){
			rdfXmlResource += "\t</cim:PhaseTapChangerTabular>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PowerTransformer powertransformer){
		String rdfXmlResource = "";
		if (powertransformer.getMRID() != null){
			rdfXmlResource = "\t<cim:PowerTransformer rdf:ID = \"_" + powertransformer.getMRID() + "\">\n";
		}
		if (powertransformer.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + powertransformer.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (powertransformer.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + powertransformer.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (powertransformer.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + powertransformer.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (powertransformer.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + powertransformer.getSvStatus().getMRID() + "\"/>\n";
		}
		if (powertransformer.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: powertransformer.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (powertransformer.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + powertransformer.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (powertransformer.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + powertransformer.getAssets().getMRID() + "\"/>\n";
		}
		if (powertransformer.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + powertransformer.getLocation().getMRID() + "\"/>\n";
		}
		if (powertransformer.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += powertransformer.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (powertransformer.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += powertransformer.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (powertransformer.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += powertransformer.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (powertransformer.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += powertransformer.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (powertransformer.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += powertransformer.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (powertransformer.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += powertransformer.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (powertransformer.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += powertransformer.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (powertransformer.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += powertransformer.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (powertransformer.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += powertransformer.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (powertransformer.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += powertransformer.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (powertransformer.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += powertransformer.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (powertransformer.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += powertransformer.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (powertransformer.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += powertransformer.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (powertransformer.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += powertransformer.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (powertransformer.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += powertransformer.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (powertransformer.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += powertransformer.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (powertransformer.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += powertransformer.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (powertransformer.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += powertransformer.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (powertransformer.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += powertransformer.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (powertransformer.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += powertransformer.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (powertransformer.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += powertransformer.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (powertransformer.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += powertransformer.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (powertransformer.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += powertransformer.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (powertransformer.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += powertransformer.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (powertransformer.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += powertransformer.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (powertransformer.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += powertransformer.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (powertransformer.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += powertransformer.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (powertransformer.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += powertransformer.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (powertransformer.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += powertransformer.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (powertransformer.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += powertransformer.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (powertransformer.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += powertransformer.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (powertransformer.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + powertransformer.getRpnCondition() + "\"/>\n";
		}
		if (powertransformer.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += powertransformer.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (powertransformer.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + powertransformer.getSchemeType() + "\"/>\n";
		}
		if (powertransformer.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + powertransformer.getSeasonType() + "\"/>\n";
		}
		if (powertransformer.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + powertransformer.getSubtaskNumber() + "\"/>\n";
		}
		if (powertransformer.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += powertransformer.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (powertransformer.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += powertransformer.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (powertransformer.getBeforeShCircuitHighestOperatingCurrent() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.beforeShCircuitHighestOperatingCurrent>";
			rdfXmlResource += powertransformer.getBeforeShCircuitHighestOperatingCurrent().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformer.beforeShCircuitHighestOperatingCurrent>\n";
		}
		if (powertransformer.getBeforeShCircuitHighestOperatingVoltage() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.beforeShCircuitHighestOperatingVoltage>";
			rdfXmlResource += powertransformer.getBeforeShCircuitHighestOperatingVoltage().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformer.beforeShCircuitHighestOperatingVoltage>\n";
		}
		if (powertransformer.getBeforeShortCircuitAnglePf() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.beforeShortCircuitAnglePf>";
			rdfXmlResource += powertransformer.getBeforeShortCircuitAnglePf().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformer.beforeShortCircuitAnglePf>\n";
		}
		if (powertransformer.getHighSideMinOperatingU() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.highSideMinOperatingU>";
			rdfXmlResource += powertransformer.getHighSideMinOperatingU().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformer.highSideMinOperatingU>\n";
		}
		if (powertransformer.getIdleCurrent() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.idleCurrent>";
			rdfXmlResource += powertransformer.getIdleCurrent().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.idleCurrent>\n";
		}
		if (powertransformer.getIdlePower() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.idlePower>";
			rdfXmlResource += powertransformer.getIdlePower().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.idlePower>\n";
		}
		if (powertransformer.getIsPartOfGeneratorUnit() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.isPartOfGeneratorUnit>";
			rdfXmlResource += powertransformer.getIsPartOfGeneratorUnit().toString();
			rdfXmlResource += "</cim:PowerTransformer.isPartOfGeneratorUnit>\n";
		}
		if (powertransformer.getOperationalValuesConsidered() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.operationalValuesConsidered>";
			rdfXmlResource += powertransformer.getOperationalValuesConsidered().toString();
			rdfXmlResource += "</cim:PowerTransformer.operationalValuesConsidered>\n";
		}
		if (powertransformer.getPK_HighLow() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.pK_HighLow>";
			rdfXmlResource += powertransformer.getPK_HighLow().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.pK_HighLow>\n";
		}
		if (powertransformer.getPK_HighMiddle() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.pK_HighMiddle>";
			rdfXmlResource += powertransformer.getPK_HighMiddle().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.pK_HighMiddle>\n";
		}
		if (powertransformer.getPK_MiddleLow() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.pK_MiddleLow>";
			rdfXmlResource += powertransformer.getPK_MiddleLow().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.pK_MiddleLow>\n";
		}
		if (powertransformer.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.ratedCurrent>";
			rdfXmlResource += powertransformer.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.ratedCurrent>\n";
		}
		if (powertransformer.getRatedHighVoltage() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.ratedHighVoltage>";
			rdfXmlResource += powertransformer.getRatedHighVoltage().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.ratedHighVoltage>\n";
		}
		if (powertransformer.getRatedLowVoltage() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.ratedLowVoltage>";
			rdfXmlResource += powertransformer.getRatedLowVoltage().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.ratedLowVoltage>\n";
		}
		if (powertransformer.getRatedMiddleVoltage() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.ratedMiddleVoltage>";
			rdfXmlResource += powertransformer.getRatedMiddleVoltage().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.ratedMiddleVoltage>\n";
		}
		if (powertransformer.getRatedS() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.ratedS>";
			rdfXmlResource += powertransformer.getRatedS().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.ratedS>\n";
		}
		if (powertransformer.getType() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.type rdf:resource=\"" + this.baseURI + "#PowerTransformerType." + powertransformer.getType() + "\"/>\n";
		}
		if (powertransformer.getUK_HighLow() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighLow>";
			rdfXmlResource += powertransformer.getUK_HighLow().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighLow>\n";
		}
		if (powertransformer.getUK_HighLow_max() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighLow_max>";
			rdfXmlResource += powertransformer.getUK_HighLow_max().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighLow_max>\n";
		}
		if (powertransformer.getUK_HighLow_min() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighLow_min>";
			rdfXmlResource += powertransformer.getUK_HighLow_min().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighLow_min>\n";
		}
		if (powertransformer.getUK_HighMiddle() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighMiddle>";
			rdfXmlResource += powertransformer.getUK_HighMiddle().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighMiddle>\n";
		}
		if (powertransformer.getUK_HighMiddle_max() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighMiddle_max>";
			rdfXmlResource += powertransformer.getUK_HighMiddle_max().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighMiddle_max>\n";
		}
		if (powertransformer.getUK_HighMiddle_min() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_HighMiddle_min>";
			rdfXmlResource += powertransformer.getUK_HighMiddle_min().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_HighMiddle_min>\n";
		}
		if (powertransformer.getUK_MiddleLow() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_MiddleLow>";
			rdfXmlResource += powertransformer.getUK_MiddleLow().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_MiddleLow>\n";
		}
		if (powertransformer.getUK_MiddleLow_max() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_MiddleLow_max>";
			rdfXmlResource += powertransformer.getUK_MiddleLow_max().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_MiddleLow_max>\n";
		}
		if (powertransformer.getUK_MiddleLow_min() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformer.uK_MiddleLow_min>";
			rdfXmlResource += powertransformer.getUK_MiddleLow_min().getValue().toString();
			rdfXmlResource += "</nti:PowerTransformer.uK_MiddleLow_min>\n";
		}
		if (powertransformer.getVectorGroup() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformer.vectorGroup>";
			rdfXmlResource += powertransformer.getVectorGroup();
			rdfXmlResource += "</cim:PowerTransformer.vectorGroup>\n";
		}
		if (powertransformer.getMRID() != null){
			rdfXmlResource += "\t</cim:PowerTransformer>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.PowerTransformerEnd powertransformerend){
		String rdfXmlResource = "";
		if (powertransformerend.getMRID() != null){
			rdfXmlResource = "\t<cim:PowerTransformerEnd rdf:ID = \"_" + powertransformerend.getMRID() + "\">\n";
		}
		if (powertransformerend.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.BaseVoltage rdf:resource=\"#_" + powertransformerend.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (powertransformerend.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.Terminal rdf:resource=\"#_" + powertransformerend.getTerminal().getMRID() + "\"/>\n";
		}
		if (powertransformerend.getPhaseTapChanger() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.PhaseTapChanger rdf:resource=\"#_" + powertransformerend.getPhaseTapChanger().getMRID() + "\"/>\n";
		}
		if (powertransformerend.getRatioTapChanger() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.RatioTapChanger rdf:resource=\"#_" + powertransformerend.getRatioTapChanger().getMRID() + "\"/>\n";
		}
		if (powertransformerend.getPowerTransformer() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.PowerTransformer rdf:resource=\"#_" + powertransformerend.getPowerTransformer().getMRID() + "\"/>\n";
		}
		if (powertransformerend.getBmagSat() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.bmagSat>";
			rdfXmlResource += powertransformerend.getBmagSat().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.bmagSat>\n";
		}
		if (powertransformerend.getEndNumber() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.endNumber>";
			rdfXmlResource += powertransformerend.getEndNumber().toString();
			rdfXmlResource += "</cim:TransformerEnd.endNumber>\n";
		}
		if (powertransformerend.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.grounded>";
			rdfXmlResource += powertransformerend.getGrounded().toString();
			rdfXmlResource += "</cim:TransformerEnd.grounded>\n";
		}
		if (powertransformerend.getMagBaseU() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.magBaseU>";
			rdfXmlResource += powertransformerend.getMagBaseU().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.magBaseU>\n";
		}
		if (powertransformerend.getMagSatFlux() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.magSatFlux>";
			rdfXmlResource += powertransformerend.getMagSatFlux().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.magSatFlux>\n";
		}
		if (powertransformerend.getRground() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.rground>";
			rdfXmlResource += powertransformerend.getRground().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.rground>\n";
		}
		if (powertransformerend.getXground() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.xground>";
			rdfXmlResource += powertransformerend.getXground().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.xground>\n";
		}
		if (powertransformerend.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += powertransformerend.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (powertransformerend.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += powertransformerend.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (powertransformerend.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += powertransformerend.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (powertransformerend.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += powertransformerend.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (powertransformerend.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += powertransformerend.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (powertransformerend.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + powertransformerend.getRpnCondition() + "\"/>\n";
		}
		if (powertransformerend.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += powertransformerend.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (powertransformerend.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + powertransformerend.getSchemeType() + "\"/>\n";
		}
		if (powertransformerend.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + powertransformerend.getSeasonType() + "\"/>\n";
		}
		if (powertransformerend.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + powertransformerend.getSubtaskNumber() + "\"/>\n";
		}
		if (powertransformerend.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += powertransformerend.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (powertransformerend.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += powertransformerend.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (powertransformerend.getB() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.b>";
			rdfXmlResource += powertransformerend.getB().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.b>\n";
		}
		if (powertransformerend.getB0() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.b0>";
			rdfXmlResource += powertransformerend.getB0().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.b0>\n";
		}
		if (powertransformerend.getConnectionKind() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.connectionKind rdf:resource=\"" + this.baseURI + "#WindingConnection." + powertransformerend.getConnectionKind() + "\"/>\n";
		}
		if (powertransformerend.getG() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.g>";
			rdfXmlResource += powertransformerend.getG().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.g>\n";
		}
		if (powertransformerend.getG0() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.g0>";
			rdfXmlResource += powertransformerend.getG0().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.g0>\n";
		}
		if (powertransformerend.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformerEnd.groundFaultSchemeBranchID>";
			rdfXmlResource += powertransformerend.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:PowerTransformerEnd.groundFaultSchemeBranchID>\n";
		}
		if (powertransformerend.getInternalNodeID() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformerEnd.internalNodeID>";
			rdfXmlResource += powertransformerend.getInternalNodeID();
			rdfXmlResource += "</nti:PowerTransformerEnd.internalNodeID>\n";
		}
		if (powertransformerend.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformerEnd.normalSchemeBranchID>";
			rdfXmlResource += powertransformerend.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:PowerTransformerEnd.normalSchemeBranchID>\n";
		}
		if (powertransformerend.getPhaseAngleClock() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.phaseAngleClock>";
			rdfXmlResource += powertransformerend.getPhaseAngleClock().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.phaseAngleClock>\n";
		}
		if (powertransformerend.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:PowerTransformerEnd.posSeqSchemeBranchID>";
			rdfXmlResource += powertransformerend.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:PowerTransformerEnd.posSeqSchemeBranchID>\n";
		}
		if (powertransformerend.getR() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.r>";
			rdfXmlResource += powertransformerend.getR().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.r>\n";
		}
		if (powertransformerend.getR0() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.r0>";
			rdfXmlResource += powertransformerend.getR0().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.r0>\n";
		}
		if (powertransformerend.getRatedS() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.ratedS>";
			rdfXmlResource += powertransformerend.getRatedS().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.ratedS>\n";
		}
		if (powertransformerend.getRatedU() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.ratedU>";
			rdfXmlResource += powertransformerend.getRatedU().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.ratedU>\n";
		}
		if (powertransformerend.getX() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.x>";
			rdfXmlResource += powertransformerend.getX().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.x>\n";
		}
		if (powertransformerend.getX0() != null){
			rdfXmlResource += "\t\t<cim:PowerTransformerEnd.x0>";
			rdfXmlResource += powertransformerend.getX0().getValue().toString();
			rdfXmlResource += "</cim:PowerTransformerEnd.x0>\n";
		}
		if (powertransformerend.getMRID() != null){
			rdfXmlResource += "\t</cim:PowerTransformerEnd>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ProtectedSwitch protectedswitch){
		String rdfXmlResource = "";
		if (protectedswitch.getMRID() != null){
			rdfXmlResource = "\t<cim:ProtectedSwitch rdf:ID = \"_" + protectedswitch.getMRID() + "\">\n";
		}
		if (protectedswitch.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + protectedswitch.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + protectedswitch.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + protectedswitch.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + protectedswitch.getSvStatus().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: protectedswitch.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (protectedswitch.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + protectedswitch.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + protectedswitch.getAssets().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + protectedswitch.getLocation().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getOperatedByProtectionEquipment() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: protectedswitch.getOperatedByProtectionEquipment()){
				rdfXmlResource += "\t\t<cim:ProtectedSwitch.OperatedByProtectionEquipment rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (protectedswitch.getLN_Base() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.LN_Base rdf:resource=\"#_" + protectedswitch.getLN_Base().getMRID() + "\"/>\n";
		}
		if (protectedswitch.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += protectedswitch.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (protectedswitch.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += protectedswitch.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (protectedswitch.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += protectedswitch.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (protectedswitch.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += protectedswitch.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (protectedswitch.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += protectedswitch.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (protectedswitch.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += protectedswitch.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (protectedswitch.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += protectedswitch.getSwitchOnDate().getYear() + "-" + protectedswitch.getSwitchOnDate().getMonth() + "-" + protectedswitch.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (protectedswitch.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += protectedswitch.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (protectedswitch.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += protectedswitch.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (protectedswitch.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += protectedswitch.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (protectedswitch.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += protectedswitch.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (protectedswitch.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += protectedswitch.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (protectedswitch.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += protectedswitch.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (protectedswitch.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += protectedswitch.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (protectedswitch.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += protectedswitch.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (protectedswitch.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += protectedswitch.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (protectedswitch.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += protectedswitch.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (protectedswitch.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += protectedswitch.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (protectedswitch.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += protectedswitch.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (protectedswitch.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += protectedswitch.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (protectedswitch.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += protectedswitch.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (protectedswitch.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += protectedswitch.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (protectedswitch.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += protectedswitch.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (protectedswitch.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += protectedswitch.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (protectedswitch.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += protectedswitch.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (protectedswitch.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += protectedswitch.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (protectedswitch.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += protectedswitch.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (protectedswitch.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += protectedswitch.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (protectedswitch.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += protectedswitch.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (protectedswitch.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += protectedswitch.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (protectedswitch.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += protectedswitch.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (protectedswitch.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += protectedswitch.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (protectedswitch.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += protectedswitch.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (protectedswitch.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += protectedswitch.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (protectedswitch.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += protectedswitch.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (protectedswitch.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += protectedswitch.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (protectedswitch.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += protectedswitch.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (protectedswitch.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += protectedswitch.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (protectedswitch.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + protectedswitch.getRpnCondition() + "\"/>\n";
		}
		if (protectedswitch.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += protectedswitch.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (protectedswitch.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + protectedswitch.getSchemeType() + "\"/>\n";
		}
		if (protectedswitch.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + protectedswitch.getSeasonType() + "\"/>\n";
		}
		if (protectedswitch.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + protectedswitch.getSubtaskNumber() + "\"/>\n";
		}
		if (protectedswitch.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += protectedswitch.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (protectedswitch.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += protectedswitch.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (protectedswitch.getBreakingCapacity() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.breakingCapacity>";
			rdfXmlResource += protectedswitch.getBreakingCapacity().getValue().toString();
			rdfXmlResource += "</cim:ProtectedSwitch.breakingCapacity>\n";
		}
		if (protectedswitch.getMRID() != null){
			rdfXmlResource += "\t</cim:ProtectedSwitch>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChanger ratiotapchanger){
		String rdfXmlResource = "";
		if (ratiotapchanger.getMRID() != null){
			rdfXmlResource = "\t<cim:RatioTapChanger rdf:ID = \"_" + ratiotapchanger.getMRID() + "\">\n";
		}
		if (ratiotapchanger.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + ratiotapchanger.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + ratiotapchanger.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + ratiotapchanger.getAssets().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + ratiotapchanger.getLocation().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getRatioTapChangerTable() != null){
			rdfXmlResource += "\t\t<cim:RatioTapChanger.RatioTapChangerTable rdf:resource=\"#_" + ratiotapchanger.getRatioTapChangerTable().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getTransformerEnd() != null){
			rdfXmlResource += "\t\t<cim:RatioTapChanger.TransformerEnd rdf:resource=\"#_" + ratiotapchanger.getTransformerEnd().getMRID() + "\"/>\n";
		}
		if (ratiotapchanger.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += ratiotapchanger.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (ratiotapchanger.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += ratiotapchanger.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (ratiotapchanger.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += ratiotapchanger.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (ratiotapchanger.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += ratiotapchanger.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (ratiotapchanger.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += ratiotapchanger.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (ratiotapchanger.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += ratiotapchanger.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (ratiotapchanger.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += ratiotapchanger.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (ratiotapchanger.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += ratiotapchanger.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (ratiotapchanger.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += ratiotapchanger.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (ratiotapchanger.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += ratiotapchanger.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (ratiotapchanger.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += ratiotapchanger.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (ratiotapchanger.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += ratiotapchanger.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (ratiotapchanger.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += ratiotapchanger.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (ratiotapchanger.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += ratiotapchanger.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (ratiotapchanger.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += ratiotapchanger.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (ratiotapchanger.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += ratiotapchanger.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (ratiotapchanger.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += ratiotapchanger.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (ratiotapchanger.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += ratiotapchanger.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (ratiotapchanger.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += ratiotapchanger.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (ratiotapchanger.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += ratiotapchanger.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (ratiotapchanger.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += ratiotapchanger.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (ratiotapchanger.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += ratiotapchanger.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (ratiotapchanger.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += ratiotapchanger.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (ratiotapchanger.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += ratiotapchanger.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (ratiotapchanger.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += ratiotapchanger.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (ratiotapchanger.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += ratiotapchanger.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (ratiotapchanger.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += ratiotapchanger.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (ratiotapchanger.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += ratiotapchanger.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (ratiotapchanger.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += ratiotapchanger.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (ratiotapchanger.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += ratiotapchanger.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (ratiotapchanger.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + ratiotapchanger.getRpnCondition() + "\"/>\n";
		}
		if (ratiotapchanger.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += ratiotapchanger.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (ratiotapchanger.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + ratiotapchanger.getSchemeType() + "\"/>\n";
		}
		if (ratiotapchanger.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + ratiotapchanger.getSeasonType() + "\"/>\n";
		}
		if (ratiotapchanger.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + ratiotapchanger.getSubtaskNumber() + "\"/>\n";
		}
		if (ratiotapchanger.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += ratiotapchanger.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (ratiotapchanger.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += ratiotapchanger.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (ratiotapchanger.getStepVoltageIncrement() != null){
			rdfXmlResource += "\t\t<cim:RatioTapChanger.stepVoltageIncrement>";
			rdfXmlResource += ratiotapchanger.getStepVoltageIncrement().getValue().toString();
			rdfXmlResource += "</cim:RatioTapChanger.stepVoltageIncrement>\n";
		}
		if (ratiotapchanger.getTculControlMode() != null){
			rdfXmlResource += "\t\t<cim:RatioTapChanger.tculControlMode rdf:resource=\"" + this.baseURI + "#TransformerControlMode." + ratiotapchanger.getTculControlMode() + "\"/>\n";
		}
		if (ratiotapchanger.getMRID() != null){
			rdfXmlResource += "\t</cim:RatioTapChanger>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChangerTable ratiotapchangertable){
		String rdfXmlResource = "";
		if (ratiotapchangertable.getMRID() != null){
			rdfXmlResource = "\t<cim:RatioTapChangerTable rdf:ID = \"_" + ratiotapchangertable.getMRID() + "\">\n";
		}
		if (ratiotapchangertable.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += ratiotapchangertable.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (ratiotapchangertable.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += ratiotapchangertable.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (ratiotapchangertable.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += ratiotapchangertable.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (ratiotapchangertable.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += ratiotapchangertable.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (ratiotapchangertable.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += ratiotapchangertable.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (ratiotapchangertable.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + ratiotapchangertable.getRpnCondition() + "\"/>\n";
		}
		if (ratiotapchangertable.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += ratiotapchangertable.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (ratiotapchangertable.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + ratiotapchangertable.getSchemeType() + "\"/>\n";
		}
		if (ratiotapchangertable.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + ratiotapchangertable.getSeasonType() + "\"/>\n";
		}
		if (ratiotapchangertable.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + ratiotapchangertable.getSubtaskNumber() + "\"/>\n";
		}
		if (ratiotapchangertable.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += ratiotapchangertable.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (ratiotapchangertable.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += ratiotapchangertable.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (ratiotapchangertable.getMRID() != null){
			rdfXmlResource += "\t</cim:RatioTapChangerTable>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RatioTapChangerTablePoint ratiotapchangertablepoint){
		String rdfXmlResource = "";
		if (ratiotapchangertablepoint.getMRID() != null){
			rdfXmlResource = "\t<cim:RatioTapChangerTablePoint rdf:ID = \"_" + ratiotapchangertablepoint.getMRID() + "\">\n";
		}
		if (ratiotapchangertablepoint.getRatioTapChangerTable() != null){
			rdfXmlResource += "\t\t<cim:RatioTapChangerTablePoint.RatioTapChangerTable rdf:resource=\"#_" + ratiotapchangertablepoint.getRatioTapChangerTable().getMRID() + "\"/>\n";
		}
		if (ratiotapchangertablepoint.getB() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.b>";
			rdfXmlResource += ratiotapchangertablepoint.getB().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.b>\n";
		}
		if (ratiotapchangertablepoint.getG() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.g>";
			rdfXmlResource += ratiotapchangertablepoint.getG().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.g>\n";
		}
		if (ratiotapchangertablepoint.getR() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.r>";
			rdfXmlResource += ratiotapchangertablepoint.getR().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.r>\n";
		}
		if (ratiotapchangertablepoint.getRatio() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.ratio>";
			rdfXmlResource += ratiotapchangertablepoint.getRatio().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.ratio>\n";
		}
		if (ratiotapchangertablepoint.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.step>";
			rdfXmlResource += ratiotapchangertablepoint.getStep().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.step>\n";
		}
		if (ratiotapchangertablepoint.getX() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.x>";
			rdfXmlResource += ratiotapchangertablepoint.getX().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.x>\n";
		}
		if (ratiotapchangertablepoint.getMRID() != null){
			rdfXmlResource += "\t</cim:RatioTapChangerTablePoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ReactiveCapabilityCurve reactivecapabilitycurve){
		String rdfXmlResource = "";
		if (reactivecapabilitycurve.getMRID() != null){
			rdfXmlResource = "\t<cim:ReactiveCapabilityCurve rdf:ID = \"_" + reactivecapabilitycurve.getMRID() + "\">\n";
		}
		if (reactivecapabilitycurve.getCurveStyle() != null){
			rdfXmlResource += "\t\t<cim:Curve.curveStyle rdf:resource=\"" + this.baseURI + "#CurveStyle." + reactivecapabilitycurve.getCurveStyle() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getXMultiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.xMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + reactivecapabilitycurve.getXMultiplier() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getXUnit() != null){
			rdfXmlResource += "\t\t<cim:Curve.xUnit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + reactivecapabilitycurve.getXUnit() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY1Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + reactivecapabilitycurve.getY1Multiplier() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY1Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y1Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + reactivecapabilitycurve.getY1Unit() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY2Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + reactivecapabilitycurve.getY2Multiplier() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY2Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y2Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + reactivecapabilitycurve.getY2Unit() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY3Multiplier() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Multiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + reactivecapabilitycurve.getY3Multiplier() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getY3Unit() != null){
			rdfXmlResource += "\t\t<cim:Curve.y3Unit rdf:resource=\"" + this.baseURI + "#UnitSymbol." + reactivecapabilitycurve.getY3Unit() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += reactivecapabilitycurve.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (reactivecapabilitycurve.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += reactivecapabilitycurve.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (reactivecapabilitycurve.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += reactivecapabilitycurve.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (reactivecapabilitycurve.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += reactivecapabilitycurve.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (reactivecapabilitycurve.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += reactivecapabilitycurve.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (reactivecapabilitycurve.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + reactivecapabilitycurve.getRpnCondition() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += reactivecapabilitycurve.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (reactivecapabilitycurve.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + reactivecapabilitycurve.getSchemeType() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + reactivecapabilitycurve.getSeasonType() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + reactivecapabilitycurve.getSubtaskNumber() + "\"/>\n";
		}
		if (reactivecapabilitycurve.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += reactivecapabilitycurve.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (reactivecapabilitycurve.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += reactivecapabilitycurve.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (reactivecapabilitycurve.getCoolantTemperature() != null){
			rdfXmlResource += "\t\t<cim:ReactiveCapabilityCurve.coolantTemperature>";
			rdfXmlResource += reactivecapabilitycurve.getCoolantTemperature().getValue().toString();
			rdfXmlResource += "</cim:ReactiveCapabilityCurve.coolantTemperature>\n";
		}
		if (reactivecapabilitycurve.getHydrogenPressure() != null){
			rdfXmlResource += "\t\t<cim:ReactiveCapabilityCurve.hydrogenPressure>";
			rdfXmlResource += reactivecapabilitycurve.getHydrogenPressure().getValue().toString();
			rdfXmlResource += "</cim:ReactiveCapabilityCurve.hydrogenPressure>\n";
		}
		if (reactivecapabilitycurve.getMRID() != null){
			rdfXmlResource += "\t</cim:ReactiveCapabilityCurve>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Recloser recloser){
		String rdfXmlResource = "";
		if (recloser.getMRID() != null){
			rdfXmlResource = "\t<cim:Recloser rdf:ID = \"_" + recloser.getMRID() + "\">\n";
		}
		if (recloser.getOperatedByProtectionEquipment() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: recloser.getOperatedByProtectionEquipment()){
				rdfXmlResource += "\t\t<cim:ProtectedSwitch.OperatedByProtectionEquipment rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (recloser.getLN_Base() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.LN_Base rdf:resource=\"#_" + recloser.getLN_Base().getMRID() + "\"/>\n";
		}
		if (recloser.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + recloser.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (recloser.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + recloser.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (recloser.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + recloser.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (recloser.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + recloser.getSvStatus().getMRID() + "\"/>\n";
		}
		if (recloser.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: recloser.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (recloser.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + recloser.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (recloser.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + recloser.getAssets().getMRID() + "\"/>\n";
		}
		if (recloser.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + recloser.getLocation().getMRID() + "\"/>\n";
		}
		if (recloser.getBreakingCapacity() != null){
			rdfXmlResource += "\t\t<cim:ProtectedSwitch.breakingCapacity>";
			rdfXmlResource += recloser.getBreakingCapacity().getValue().toString();
			rdfXmlResource += "</cim:ProtectedSwitch.breakingCapacity>\n";
		}
		if (recloser.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += recloser.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (recloser.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += recloser.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (recloser.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += recloser.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (recloser.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += recloser.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (recloser.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += recloser.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (recloser.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += recloser.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (recloser.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += recloser.getSwitchOnDate().getYear() + "-" + recloser.getSwitchOnDate().getMonth() + "-" + recloser.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (recloser.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += recloser.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (recloser.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += recloser.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (recloser.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += recloser.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (recloser.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += recloser.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (recloser.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += recloser.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (recloser.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += recloser.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (recloser.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += recloser.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (recloser.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += recloser.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (recloser.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += recloser.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (recloser.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += recloser.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (recloser.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += recloser.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (recloser.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += recloser.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (recloser.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += recloser.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (recloser.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += recloser.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (recloser.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += recloser.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (recloser.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += recloser.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (recloser.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += recloser.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (recloser.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += recloser.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (recloser.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += recloser.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (recloser.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += recloser.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (recloser.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += recloser.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (recloser.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += recloser.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (recloser.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += recloser.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (recloser.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += recloser.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (recloser.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += recloser.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (recloser.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += recloser.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (recloser.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += recloser.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (recloser.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += recloser.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (recloser.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += recloser.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (recloser.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += recloser.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (recloser.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += recloser.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (recloser.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + recloser.getRpnCondition() + "\"/>\n";
		}
		if (recloser.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += recloser.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (recloser.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + recloser.getSchemeType() + "\"/>\n";
		}
		if (recloser.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + recloser.getSeasonType() + "\"/>\n";
		}
		if (recloser.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + recloser.getSubtaskNumber() + "\"/>\n";
		}
		if (recloser.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += recloser.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (recloser.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += recloser.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (recloser.getMRID() != null){
			rdfXmlResource += "\t</cim:Recloser>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RegulatingCondEq regulatingcondeq){
		String rdfXmlResource = "";
		if (regulatingcondeq.getMRID() != null){
			rdfXmlResource = "\t<cim:RegulatingCondEq rdf:ID = \"_" + regulatingcondeq.getMRID() + "\">\n";
		}
		if (regulatingcondeq.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + regulatingcondeq.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + regulatingcondeq.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + regulatingcondeq.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + regulatingcondeq.getSvStatus().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: regulatingcondeq.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (regulatingcondeq.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + regulatingcondeq.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + regulatingcondeq.getAssets().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + regulatingcondeq.getLocation().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + regulatingcondeq.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (regulatingcondeq.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += regulatingcondeq.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (regulatingcondeq.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += regulatingcondeq.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (regulatingcondeq.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += regulatingcondeq.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (regulatingcondeq.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += regulatingcondeq.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (regulatingcondeq.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += regulatingcondeq.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (regulatingcondeq.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += regulatingcondeq.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (regulatingcondeq.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += regulatingcondeq.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (regulatingcondeq.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += regulatingcondeq.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (regulatingcondeq.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += regulatingcondeq.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (regulatingcondeq.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += regulatingcondeq.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (regulatingcondeq.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += regulatingcondeq.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (regulatingcondeq.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += regulatingcondeq.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (regulatingcondeq.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += regulatingcondeq.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (regulatingcondeq.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += regulatingcondeq.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (regulatingcondeq.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += regulatingcondeq.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (regulatingcondeq.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += regulatingcondeq.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (regulatingcondeq.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += regulatingcondeq.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (regulatingcondeq.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += regulatingcondeq.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (regulatingcondeq.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += regulatingcondeq.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (regulatingcondeq.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += regulatingcondeq.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (regulatingcondeq.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += regulatingcondeq.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (regulatingcondeq.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += regulatingcondeq.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (regulatingcondeq.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += regulatingcondeq.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (regulatingcondeq.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += regulatingcondeq.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (regulatingcondeq.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += regulatingcondeq.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (regulatingcondeq.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += regulatingcondeq.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (regulatingcondeq.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += regulatingcondeq.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (regulatingcondeq.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += regulatingcondeq.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (regulatingcondeq.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += regulatingcondeq.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (regulatingcondeq.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += regulatingcondeq.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (regulatingcondeq.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += regulatingcondeq.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (regulatingcondeq.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + regulatingcondeq.getRpnCondition() + "\"/>\n";
		}
		if (regulatingcondeq.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += regulatingcondeq.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (regulatingcondeq.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + regulatingcondeq.getSchemeType() + "\"/>\n";
		}
		if (regulatingcondeq.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + regulatingcondeq.getSeasonType() + "\"/>\n";
		}
		if (regulatingcondeq.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + regulatingcondeq.getSubtaskNumber() + "\"/>\n";
		}
		if (regulatingcondeq.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += regulatingcondeq.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (regulatingcondeq.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += regulatingcondeq.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (regulatingcondeq.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += regulatingcondeq.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (regulatingcondeq.getMRID() != null){
			rdfXmlResource += "\t</cim:RegulatingCondEq>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RegulatingControl regulatingcontrol){
		String rdfXmlResource = "";
		if (regulatingcontrol.getMRID() != null){
			rdfXmlResource = "\t<cim:RegulatingControl rdf:ID = \"_" + regulatingcontrol.getMRID() + "\">\n";
		}
		if (regulatingcontrol.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + regulatingcontrol.getAssets().getMRID() + "\"/>\n";
		}
		if (regulatingcontrol.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + regulatingcontrol.getLocation().getMRID() + "\"/>\n";
		}
		if (regulatingcontrol.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += regulatingcontrol.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (regulatingcontrol.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += regulatingcontrol.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (regulatingcontrol.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += regulatingcontrol.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (regulatingcontrol.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += regulatingcontrol.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (regulatingcontrol.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += regulatingcontrol.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (regulatingcontrol.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += regulatingcontrol.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (regulatingcontrol.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += regulatingcontrol.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (regulatingcontrol.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += regulatingcontrol.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (regulatingcontrol.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += regulatingcontrol.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (regulatingcontrol.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += regulatingcontrol.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (regulatingcontrol.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += regulatingcontrol.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (regulatingcontrol.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += regulatingcontrol.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (regulatingcontrol.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += regulatingcontrol.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (regulatingcontrol.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += regulatingcontrol.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (regulatingcontrol.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += regulatingcontrol.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (regulatingcontrol.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += regulatingcontrol.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (regulatingcontrol.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += regulatingcontrol.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (regulatingcontrol.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += regulatingcontrol.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (regulatingcontrol.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += regulatingcontrol.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (regulatingcontrol.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += regulatingcontrol.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (regulatingcontrol.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + regulatingcontrol.getRpnCondition() + "\"/>\n";
		}
		if (regulatingcontrol.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += regulatingcontrol.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (regulatingcontrol.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + regulatingcontrol.getSchemeType() + "\"/>\n";
		}
		if (regulatingcontrol.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + regulatingcontrol.getSeasonType() + "\"/>\n";
		}
		if (regulatingcontrol.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + regulatingcontrol.getSubtaskNumber() + "\"/>\n";
		}
		if (regulatingcontrol.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += regulatingcontrol.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (regulatingcontrol.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += regulatingcontrol.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (regulatingcontrol.getDiscrete() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.discrete>";
			rdfXmlResource += regulatingcontrol.getDiscrete().toString();
			rdfXmlResource += "</cim:RegulatingControl.discrete>\n";
		}
		if (regulatingcontrol.getEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.enabled>";
			rdfXmlResource += regulatingcontrol.getEnabled().toString();
			rdfXmlResource += "</cim:RegulatingControl.enabled>\n";
		}
		if (regulatingcontrol.getMode() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.mode rdf:resource=\"" + this.baseURI + "#RegulatingControlModeKind." + regulatingcontrol.getMode() + "\"/>\n";
		}
		if (regulatingcontrol.getMonitoredPhase() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.monitoredPhase rdf:resource=\"" + this.baseURI + "#PhaseCode." + regulatingcontrol.getMonitoredPhase() + "\"/>\n";
		}
		if (regulatingcontrol.getTargetDeadband() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetDeadband>";
			rdfXmlResource += regulatingcontrol.getTargetDeadband().toString();
			rdfXmlResource += "</cim:RegulatingControl.targetDeadband>\n";
		}
		if (regulatingcontrol.getTargetValue() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetValue>";
			rdfXmlResource += regulatingcontrol.getTargetValue().toString();
			rdfXmlResource += "</cim:RegulatingControl.targetValue>\n";
		}
		if (regulatingcontrol.getTargetValueUnitMultiplier() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetValueUnitMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + regulatingcontrol.getTargetValueUnitMultiplier() + "\"/>\n";
		}
		if (regulatingcontrol.getMRID() != null){
			rdfXmlResource += "\t</cim:RegulatingControl>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.RotatingMachine rotatingmachine){
		String rdfXmlResource = "";
		if (rotatingmachine.getMRID() != null){
			rdfXmlResource = "\t<cim:RotatingMachine rdf:ID = \"_" + rotatingmachine.getMRID() + "\">\n";
		}
		if (rotatingmachine.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + rotatingmachine.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + rotatingmachine.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + rotatingmachine.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + rotatingmachine.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + rotatingmachine.getSvStatus().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: rotatingmachine.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (rotatingmachine.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + rotatingmachine.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + rotatingmachine.getAssets().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + rotatingmachine.getLocation().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getGeneratingUnit() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.GeneratingUnit rdf:resource=\"#_" + rotatingmachine.getGeneratingUnit().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getHydroPump() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.HydroPump rdf:resource=\"#_" + rotatingmachine.getHydroPump().getMRID() + "\"/>\n";
		}
		if (rotatingmachine.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += rotatingmachine.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (rotatingmachine.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += rotatingmachine.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (rotatingmachine.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += rotatingmachine.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (rotatingmachine.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += rotatingmachine.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (rotatingmachine.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += rotatingmachine.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (rotatingmachine.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += rotatingmachine.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (rotatingmachine.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += rotatingmachine.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (rotatingmachine.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += rotatingmachine.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (rotatingmachine.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += rotatingmachine.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (rotatingmachine.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += rotatingmachine.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (rotatingmachine.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += rotatingmachine.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (rotatingmachine.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += rotatingmachine.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (rotatingmachine.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += rotatingmachine.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (rotatingmachine.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += rotatingmachine.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (rotatingmachine.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += rotatingmachine.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (rotatingmachine.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += rotatingmachine.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (rotatingmachine.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += rotatingmachine.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (rotatingmachine.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += rotatingmachine.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (rotatingmachine.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += rotatingmachine.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (rotatingmachine.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += rotatingmachine.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (rotatingmachine.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += rotatingmachine.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (rotatingmachine.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += rotatingmachine.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (rotatingmachine.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += rotatingmachine.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (rotatingmachine.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += rotatingmachine.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (rotatingmachine.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += rotatingmachine.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (rotatingmachine.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += rotatingmachine.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (rotatingmachine.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += rotatingmachine.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (rotatingmachine.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += rotatingmachine.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (rotatingmachine.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += rotatingmachine.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (rotatingmachine.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += rotatingmachine.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (rotatingmachine.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += rotatingmachine.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (rotatingmachine.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += rotatingmachine.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (rotatingmachine.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + rotatingmachine.getRpnCondition() + "\"/>\n";
		}
		if (rotatingmachine.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += rotatingmachine.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (rotatingmachine.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + rotatingmachine.getSchemeType() + "\"/>\n";
		}
		if (rotatingmachine.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + rotatingmachine.getSeasonType() + "\"/>\n";
		}
		if (rotatingmachine.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + rotatingmachine.getSubtaskNumber() + "\"/>\n";
		}
		if (rotatingmachine.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += rotatingmachine.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (rotatingmachine.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += rotatingmachine.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (rotatingmachine.getConnectionKind() != null){
			rdfXmlResource += "\t\t<nti:RotatingMachine.connectionKind rdf:resource=\"" + this.baseURI + "#WindingConnection." + rotatingmachine.getConnectionKind() + "\"/>\n";
		}
		if (rotatingmachine.getP() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.p>";
			rdfXmlResource += rotatingmachine.getP().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.p>\n";
		}
		if (rotatingmachine.getQ() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.q>";
			rdfXmlResource += rotatingmachine.getQ().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.q>\n";
		}
		if (rotatingmachine.getRatedPowerFactor() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedPowerFactor>";
			rdfXmlResource += rotatingmachine.getRatedPowerFactor().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedPowerFactor>\n";
		}
		if (rotatingmachine.getRatedS() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedS>";
			rdfXmlResource += rotatingmachine.getRatedS().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedS>\n";
		}
		if (rotatingmachine.getRatedU() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedU>";
			rdfXmlResource += rotatingmachine.getRatedU().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedU>\n";
		}
		if (rotatingmachine.getMRID() != null){
			rdfXmlResource += "\t</cim:RotatingMachine>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.SeriesCompensator seriescompensator){
		String rdfXmlResource = "";
		if (seriescompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:SeriesCompensator rdf:ID = \"_" + seriescompensator.getMRID() + "\">\n";
		}
		if (seriescompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + seriescompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + seriescompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + seriescompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + seriescompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: seriescompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (seriescompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + seriescompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + seriescompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + seriescompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (seriescompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += seriescompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (seriescompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += seriescompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (seriescompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += seriescompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (seriescompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += seriescompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (seriescompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += seriescompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (seriescompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += seriescompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (seriescompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += seriescompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (seriescompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += seriescompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (seriescompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += seriescompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (seriescompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += seriescompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (seriescompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += seriescompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (seriescompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += seriescompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (seriescompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += seriescompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (seriescompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += seriescompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (seriescompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += seriescompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (seriescompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += seriescompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (seriescompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += seriescompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (seriescompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += seriescompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (seriescompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += seriescompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (seriescompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += seriescompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (seriescompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += seriescompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (seriescompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += seriescompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (seriescompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += seriescompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (seriescompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += seriescompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (seriescompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += seriescompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (seriescompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += seriescompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (seriescompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += seriescompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (seriescompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += seriescompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (seriescompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += seriescompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (seriescompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += seriescompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (seriescompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += seriescompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (seriescompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + seriescompensator.getRpnCondition() + "\"/>\n";
		}
		if (seriescompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += seriescompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (seriescompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + seriescompensator.getSchemeType() + "\"/>\n";
		}
		if (seriescompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + seriescompensator.getSeasonType() + "\"/>\n";
		}
		if (seriescompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + seriescompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (seriescompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += seriescompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (seriescompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += seriescompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (seriescompensator.getR() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.r>";
			rdfXmlResource += seriescompensator.getR().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.r>\n";
		}
		if (seriescompensator.getR0() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.r0>";
			rdfXmlResource += seriescompensator.getR0().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.r0>\n";
		}
		if (seriescompensator.getVaristorPresent() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.varistorPresent>";
			rdfXmlResource += seriescompensator.getVaristorPresent().toString();
			rdfXmlResource += "</cim:SeriesCompensator.varistorPresent>\n";
		}
		if (seriescompensator.getVaristorRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.varistorRatedCurrent>";
			rdfXmlResource += seriescompensator.getVaristorRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.varistorRatedCurrent>\n";
		}
		if (seriescompensator.getVaristorVoltageThreshold() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.varistorVoltageThreshold>";
			rdfXmlResource += seriescompensator.getVaristorVoltageThreshold().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.varistorVoltageThreshold>\n";
		}
		if (seriescompensator.getX() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.x>";
			rdfXmlResource += seriescompensator.getX().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.x>\n";
		}
		if (seriescompensator.getX0() != null){
			rdfXmlResource += "\t\t<cim:SeriesCompensator.x0>";
			rdfXmlResource += seriescompensator.getX0().getValue().toString();
			rdfXmlResource += "</cim:SeriesCompensator.x0>\n";
		}
		if (seriescompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:SeriesCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ShuntCompensator shuntcompensator){
		String rdfXmlResource = "";
		if (shuntcompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:ShuntCompensator rdf:ID = \"_" + shuntcompensator.getMRID() + "\">\n";
		}
		if (shuntcompensator.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + shuntcompensator.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + shuntcompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + shuntcompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + shuntcompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + shuntcompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: shuntcompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (shuntcompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + shuntcompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + shuntcompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + shuntcompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getSvShuntCompensatorSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.SvShuntCompensatorSections rdf:resource=\"#_" + shuntcompensator.getSvShuntCompensatorSections().getMRID() + "\"/>\n";
		}
		if (shuntcompensator.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += shuntcompensator.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (shuntcompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += shuntcompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (shuntcompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += shuntcompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (shuntcompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += shuntcompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (shuntcompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += shuntcompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (shuntcompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += shuntcompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (shuntcompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += shuntcompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (shuntcompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += shuntcompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (shuntcompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += shuntcompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (shuntcompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += shuntcompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (shuntcompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += shuntcompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (shuntcompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += shuntcompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (shuntcompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += shuntcompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (shuntcompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += shuntcompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (shuntcompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += shuntcompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (shuntcompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += shuntcompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (shuntcompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += shuntcompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (shuntcompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += shuntcompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (shuntcompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += shuntcompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (shuntcompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += shuntcompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (shuntcompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += shuntcompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (shuntcompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += shuntcompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (shuntcompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += shuntcompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (shuntcompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += shuntcompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (shuntcompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += shuntcompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (shuntcompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += shuntcompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (shuntcompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += shuntcompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (shuntcompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += shuntcompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (shuntcompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += shuntcompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (shuntcompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += shuntcompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (shuntcompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += shuntcompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (shuntcompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += shuntcompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (shuntcompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + shuntcompensator.getRpnCondition() + "\"/>\n";
		}
		if (shuntcompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += shuntcompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (shuntcompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + shuntcompensator.getSchemeType() + "\"/>\n";
		}
		if (shuntcompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + shuntcompensator.getSeasonType() + "\"/>\n";
		}
		if (shuntcompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + shuntcompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (shuntcompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += shuntcompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (shuntcompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += shuntcompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (shuntcompensator.getAVRDelay() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.aVRDelay>";
			rdfXmlResource += shuntcompensator.getAVRDelay().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.aVRDelay>\n";
		}
		if (shuntcompensator.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.grounded>";
			rdfXmlResource += shuntcompensator.getGrounded().toString();
			rdfXmlResource += "</cim:ShuntCompensator.grounded>\n";
		}
		if (shuntcompensator.getMaximumSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.maximumSections>";
			rdfXmlResource += shuntcompensator.getMaximumSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.maximumSections>\n";
		}
		if (shuntcompensator.getNomU() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.nomU>";
			rdfXmlResource += shuntcompensator.getNomU().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.nomU>\n";
		}
		if (shuntcompensator.getNormalSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.normalSections>";
			rdfXmlResource += shuntcompensator.getNormalSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.normalSections>\n";
		}
		if (shuntcompensator.getPhaseConnection() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.phaseConnection rdf:resource=\"" + this.baseURI + "#PhaseShuntConnectionKind." + shuntcompensator.getPhaseConnection() + "\"/>\n";
		}
		if (shuntcompensator.getSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.sections>";
			rdfXmlResource += shuntcompensator.getSections().toString();
			rdfXmlResource += "</cim:ShuntCompensator.sections>\n";
		}
		if (shuntcompensator.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnCount>";
			rdfXmlResource += shuntcompensator.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnCount>\n";
		}
		if (shuntcompensator.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.switchOnDate>";
			rdfXmlResource += shuntcompensator.getSwitchOnDate().getYear() + "-" + shuntcompensator.getSwitchOnDate().getMonth() + "-" + shuntcompensator.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:ShuntCompensator.switchOnDate>\n";
		}
		if (shuntcompensator.getVoltageSensitivity() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensator.voltageSensitivity>";
			rdfXmlResource += shuntcompensator.getVoltageSensitivity().getValue().toString();
			rdfXmlResource += "</cim:ShuntCompensator.voltageSensitivity>\n";
		}
		if (shuntcompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:ShuntCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.ShuntCompensatorPhase shuntcompensatorphase){
		String rdfXmlResource = "";
		if (shuntcompensatorphase.getMRID() != null){
			rdfXmlResource = "\t<cim:ShuntCompensatorPhase rdf:ID = \"_" + shuntcompensatorphase.getMRID() + "\">\n";
		}
		if (shuntcompensatorphase.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + shuntcompensatorphase.getAssets().getMRID() + "\"/>\n";
		}
		if (shuntcompensatorphase.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + shuntcompensatorphase.getLocation().getMRID() + "\"/>\n";
		}
		if (shuntcompensatorphase.getShuntCompensator() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensatorPhase.ShuntCompensator rdf:resource=\"#_" + shuntcompensatorphase.getShuntCompensator().getMRID() + "\"/>\n";
		}
		if (shuntcompensatorphase.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += shuntcompensatorphase.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (shuntcompensatorphase.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += shuntcompensatorphase.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (shuntcompensatorphase.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += shuntcompensatorphase.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (shuntcompensatorphase.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += shuntcompensatorphase.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (shuntcompensatorphase.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += shuntcompensatorphase.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (shuntcompensatorphase.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += shuntcompensatorphase.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (shuntcompensatorphase.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += shuntcompensatorphase.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (shuntcompensatorphase.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += shuntcompensatorphase.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (shuntcompensatorphase.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += shuntcompensatorphase.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (shuntcompensatorphase.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += shuntcompensatorphase.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (shuntcompensatorphase.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += shuntcompensatorphase.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (shuntcompensatorphase.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += shuntcompensatorphase.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (shuntcompensatorphase.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += shuntcompensatorphase.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (shuntcompensatorphase.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += shuntcompensatorphase.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (shuntcompensatorphase.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += shuntcompensatorphase.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (shuntcompensatorphase.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += shuntcompensatorphase.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (shuntcompensatorphase.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += shuntcompensatorphase.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (shuntcompensatorphase.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += shuntcompensatorphase.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (shuntcompensatorphase.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += shuntcompensatorphase.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (shuntcompensatorphase.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += shuntcompensatorphase.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (shuntcompensatorphase.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + shuntcompensatorphase.getRpnCondition() + "\"/>\n";
		}
		if (shuntcompensatorphase.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += shuntcompensatorphase.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (shuntcompensatorphase.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + shuntcompensatorphase.getSchemeType() + "\"/>\n";
		}
		if (shuntcompensatorphase.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + shuntcompensatorphase.getSeasonType() + "\"/>\n";
		}
		if (shuntcompensatorphase.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + shuntcompensatorphase.getSubtaskNumber() + "\"/>\n";
		}
		if (shuntcompensatorphase.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += shuntcompensatorphase.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (shuntcompensatorphase.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += shuntcompensatorphase.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (shuntcompensatorphase.getMaximumSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensatorPhase.maximumSections>";
			rdfXmlResource += shuntcompensatorphase.getMaximumSections().toString();
			rdfXmlResource += "</cim:ShuntCompensatorPhase.maximumSections>\n";
		}
		if (shuntcompensatorphase.getNormalSections() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensatorPhase.normalSections>";
			rdfXmlResource += shuntcompensatorphase.getNormalSections().toString();
			rdfXmlResource += "</cim:ShuntCompensatorPhase.normalSections>\n";
		}
		if (shuntcompensatorphase.getPhase() != null){
			rdfXmlResource += "\t\t<cim:ShuntCompensatorPhase.phase rdf:resource=\"" + this.baseURI + "#SinglePhaseKind." + shuntcompensatorphase.getPhase() + "\"/>\n";
		}
		if (shuntcompensatorphase.getMRID() != null){
			rdfXmlResource += "\t</cim:ShuntCompensatorPhase>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.StaticVarCompensator staticvarcompensator){
		String rdfXmlResource = "";
		if (staticvarcompensator.getMRID() != null){
			rdfXmlResource = "\t<cim:StaticVarCompensator rdf:ID = \"_" + staticvarcompensator.getMRID() + "\">\n";
		}
		if (staticvarcompensator.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + staticvarcompensator.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + staticvarcompensator.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + staticvarcompensator.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + staticvarcompensator.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + staticvarcompensator.getSvStatus().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: staticvarcompensator.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (staticvarcompensator.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + staticvarcompensator.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + staticvarcompensator.getAssets().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + staticvarcompensator.getLocation().getMRID() + "\"/>\n";
		}
		if (staticvarcompensator.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += staticvarcompensator.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (staticvarcompensator.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += staticvarcompensator.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (staticvarcompensator.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += staticvarcompensator.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (staticvarcompensator.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += staticvarcompensator.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (staticvarcompensator.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += staticvarcompensator.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (staticvarcompensator.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += staticvarcompensator.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (staticvarcompensator.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += staticvarcompensator.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (staticvarcompensator.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += staticvarcompensator.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (staticvarcompensator.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += staticvarcompensator.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (staticvarcompensator.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += staticvarcompensator.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (staticvarcompensator.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += staticvarcompensator.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (staticvarcompensator.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += staticvarcompensator.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (staticvarcompensator.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += staticvarcompensator.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (staticvarcompensator.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += staticvarcompensator.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (staticvarcompensator.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += staticvarcompensator.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (staticvarcompensator.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += staticvarcompensator.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (staticvarcompensator.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += staticvarcompensator.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (staticvarcompensator.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += staticvarcompensator.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (staticvarcompensator.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += staticvarcompensator.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (staticvarcompensator.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += staticvarcompensator.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (staticvarcompensator.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += staticvarcompensator.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (staticvarcompensator.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += staticvarcompensator.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (staticvarcompensator.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += staticvarcompensator.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (staticvarcompensator.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += staticvarcompensator.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (staticvarcompensator.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += staticvarcompensator.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (staticvarcompensator.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += staticvarcompensator.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (staticvarcompensator.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += staticvarcompensator.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (staticvarcompensator.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += staticvarcompensator.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (staticvarcompensator.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += staticvarcompensator.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (staticvarcompensator.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += staticvarcompensator.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (staticvarcompensator.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += staticvarcompensator.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (staticvarcompensator.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += staticvarcompensator.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (staticvarcompensator.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + staticvarcompensator.getRpnCondition() + "\"/>\n";
		}
		if (staticvarcompensator.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += staticvarcompensator.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (staticvarcompensator.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + staticvarcompensator.getSchemeType() + "\"/>\n";
		}
		if (staticvarcompensator.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + staticvarcompensator.getSeasonType() + "\"/>\n";
		}
		if (staticvarcompensator.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + staticvarcompensator.getSubtaskNumber() + "\"/>\n";
		}
		if (staticvarcompensator.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += staticvarcompensator.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (staticvarcompensator.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += staticvarcompensator.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (staticvarcompensator.getCapacitiveRating() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.capacitiveRating>";
			rdfXmlResource += staticvarcompensator.getCapacitiveRating().getValue().toString();
			rdfXmlResource += "</cim:StaticVarCompensator.capacitiveRating>\n";
		}
		if (staticvarcompensator.getInductiveRating() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.inductiveRating>";
			rdfXmlResource += staticvarcompensator.getInductiveRating().getValue().toString();
			rdfXmlResource += "</cim:StaticVarCompensator.inductiveRating>\n";
		}
		if (staticvarcompensator.getQ() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.q>";
			rdfXmlResource += staticvarcompensator.getQ().getValue().toString();
			rdfXmlResource += "</cim:StaticVarCompensator.q>\n";
		}
		if (staticvarcompensator.getSlope() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.slope>";
			rdfXmlResource += staticvarcompensator.getSlope().getValue().toString();
			rdfXmlResource += "</cim:StaticVarCompensator.slope>\n";
		}
		if (staticvarcompensator.getSVCControlMode() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.sVCControlMode rdf:resource=\"" + this.baseURI + "#SVCControlMode." + staticvarcompensator.getSVCControlMode() + "\"/>\n";
		}
		if (staticvarcompensator.getVoltageSetPoint() != null){
			rdfXmlResource += "\t\t<cim:StaticVarCompensator.voltageSetPoint>";
			rdfXmlResource += staticvarcompensator.getVoltageSetPoint().getValue().toString();
			rdfXmlResource += "</cim:StaticVarCompensator.voltageSetPoint>\n";
		}
		if (staticvarcompensator.getMRID() != null){
			rdfXmlResource += "\t</cim:StaticVarCompensator>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.Switch cim_switch){
		String rdfXmlResource = "";
		if (cim_switch.getMRID() != null){
			rdfXmlResource = "\t<cim:Switch rdf:ID = \"_" + cim_switch.getMRID() + "\">\n";
		}
		if (cim_switch.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + cim_switch.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (cim_switch.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + cim_switch.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (cim_switch.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + cim_switch.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (cim_switch.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + cim_switch.getSvStatus().getMRID() + "\"/>\n";
		}
		if (cim_switch.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: cim_switch.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (cim_switch.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + cim_switch.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (cim_switch.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + cim_switch.getAssets().getMRID() + "\"/>\n";
		}
		if (cim_switch.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + cim_switch.getLocation().getMRID() + "\"/>\n";
		}
		if (cim_switch.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += cim_switch.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (cim_switch.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += cim_switch.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (cim_switch.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += cim_switch.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (cim_switch.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += cim_switch.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (cim_switch.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += cim_switch.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (cim_switch.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += cim_switch.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (cim_switch.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += cim_switch.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (cim_switch.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += cim_switch.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (cim_switch.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += cim_switch.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (cim_switch.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += cim_switch.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (cim_switch.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += cim_switch.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (cim_switch.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += cim_switch.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (cim_switch.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += cim_switch.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (cim_switch.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += cim_switch.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (cim_switch.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += cim_switch.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (cim_switch.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += cim_switch.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (cim_switch.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += cim_switch.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (cim_switch.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += cim_switch.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (cim_switch.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += cim_switch.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (cim_switch.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += cim_switch.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (cim_switch.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += cim_switch.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (cim_switch.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += cim_switch.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (cim_switch.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += cim_switch.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (cim_switch.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += cim_switch.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (cim_switch.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += cim_switch.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (cim_switch.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += cim_switch.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (cim_switch.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += cim_switch.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (cim_switch.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += cim_switch.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (cim_switch.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += cim_switch.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (cim_switch.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += cim_switch.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (cim_switch.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += cim_switch.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (cim_switch.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + cim_switch.getRpnCondition() + "\"/>\n";
		}
		if (cim_switch.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += cim_switch.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (cim_switch.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + cim_switch.getSchemeType() + "\"/>\n";
		}
		if (cim_switch.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + cim_switch.getSeasonType() + "\"/>\n";
		}
		if (cim_switch.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + cim_switch.getSubtaskNumber() + "\"/>\n";
		}
		if (cim_switch.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += cim_switch.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (cim_switch.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += cim_switch.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (cim_switch.getNormalOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.normalOpen>";
			rdfXmlResource += cim_switch.getNormalOpen().toString();
			rdfXmlResource += "</cim:Switch.normalOpen>\n";
		}
		if (cim_switch.getOpen() != null){
			rdfXmlResource += "\t\t<cim:Switch.open>";
			rdfXmlResource += cim_switch.getOpen().toString();
			rdfXmlResource += "</cim:Switch.open>\n";
		}
		if (cim_switch.getRatedCurrent() != null){
			rdfXmlResource += "\t\t<cim:Switch.ratedCurrent>";
			rdfXmlResource += cim_switch.getRatedCurrent().getValue().toString();
			rdfXmlResource += "</cim:Switch.ratedCurrent>\n";
		}
		if (cim_switch.getRatedVoltage() != null){
			rdfXmlResource += "\t\t<nti:Switch.ratedVoltage>";
			rdfXmlResource += cim_switch.getRatedVoltage().getValue().toString();
			rdfXmlResource += "</nti:Switch.ratedVoltage>\n";
		}
		if (cim_switch.getRetained() != null){
			rdfXmlResource += "\t\t<cim:Switch.retained>";
			rdfXmlResource += cim_switch.getRetained().toString();
			rdfXmlResource += "</cim:Switch.retained>\n";
		}
		if (cim_switch.getSwitchOnCount() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnCount>";
			rdfXmlResource += cim_switch.getSwitchOnCount().toString();
			rdfXmlResource += "</cim:Switch.switchOnCount>\n";
		}
		if (cim_switch.getSwitchOnDate() != null){
			rdfXmlResource += "\t\t<cim:Switch.switchOnDate>";
			rdfXmlResource += cim_switch.getSwitchOnDate().getYear() + "-" + cim_switch.getSwitchOnDate().getMonth() + "-" + cim_switch.getSwitchOnDate().getDate();
			rdfXmlResource += "</cim:Switch.switchOnDate>\n";
		}
		if (cim_switch.getMRID() != null){
			rdfXmlResource += "\t</cim:Switch>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.SynchronousMachine synchronousmachine){
		String rdfXmlResource = "";
		if (synchronousmachine.getMRID() != null){
			rdfXmlResource = "\t<cim:SynchronousMachine rdf:ID = \"_" + synchronousmachine.getMRID() + "\">\n";
		}
		if (synchronousmachine.getGeneratingUnit() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.GeneratingUnit rdf:resource=\"#_" + synchronousmachine.getGeneratingUnit().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getHydroPump() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.HydroPump rdf:resource=\"#_" + synchronousmachine.getHydroPump().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getRegulatingControl() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.RegulatingControl rdf:resource=\"#_" + synchronousmachine.getRegulatingControl().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.BaseVoltage rdf:resource=\"#_" + synchronousmachine.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getTopologicalIsland() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIsland rdf:resource=\"#_" + synchronousmachine.getTopologicalIsland().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getTopologicalIslandHavingInrernalNodes() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.TopologicalIslandHavingInrernalNodes rdf:resource=\"#_" + synchronousmachine.getTopologicalIslandHavingInrernalNodes().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getSvStatus() != null){
			rdfXmlResource += "\t\t<cim:ConductingEquipment.SvStatus rdf:resource=\"#_" + synchronousmachine.getSvStatus().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getProtectionEquipments() != null){
			for (ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject ProtectionEquipment: synchronousmachine.getProtectionEquipments()){
				rdfXmlResource += "\t\t<cim:ConductingEquipment.ProtectionEquipments rdf:resource=\"#_" + ProtectionEquipment.getMRID() + "\"/>\n";
			}
		}
		if (synchronousmachine.getEquipmentContainer() != null){
			rdfXmlResource += "\t\t<cim:Equipment.EquipmentContainer rdf:resource=\"#_" + synchronousmachine.getEquipmentContainer().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + synchronousmachine.getAssets().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + synchronousmachine.getLocation().getMRID() + "\"/>\n";
		}
		if (synchronousmachine.getConnectionKind() != null){
			rdfXmlResource += "\t\t<nti:RotatingMachine.connectionKind rdf:resource=\"" + this.baseURI + "#WindingConnection." + synchronousmachine.getConnectionKind() + "\"/>\n";
		}
		if (synchronousmachine.getP() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.p>";
			rdfXmlResource += synchronousmachine.getP().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.p>\n";
		}
		if (synchronousmachine.getQ() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.q>";
			rdfXmlResource += synchronousmachine.getQ().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.q>\n";
		}
		if (synchronousmachine.getRatedPowerFactor() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedPowerFactor>";
			rdfXmlResource += synchronousmachine.getRatedPowerFactor().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedPowerFactor>\n";
		}
		if (synchronousmachine.getRatedS() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedS>";
			rdfXmlResource += synchronousmachine.getRatedS().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedS>\n";
		}
		if (synchronousmachine.getRatedU() != null){
			rdfXmlResource += "\t\t<cim:RotatingMachine.ratedU>";
			rdfXmlResource += synchronousmachine.getRatedU().getValue().toString();
			rdfXmlResource += "</cim:RotatingMachine.ratedU>\n";
		}
		if (synchronousmachine.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingCondEq.controlEnabled>";
			rdfXmlResource += synchronousmachine.getControlEnabled().toString();
			rdfXmlResource += "</cim:RegulatingCondEq.controlEnabled>\n";
		}
		if (synchronousmachine.getCurrentNegSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentNegSeq>";
			rdfXmlResource += synchronousmachine.getCurrentNegSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentNegSeq>\n";
		}
		if (synchronousmachine.getCurrentZeroSeq() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.currentZeroSeq>";
			rdfXmlResource += synchronousmachine.getCurrentZeroSeq().toString();
			rdfXmlResource += "</nti:ConductingEquipment.currentZeroSeq>\n";
		}
		if (synchronousmachine.getGroundFaultSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.groundFaultSchemeBranchID>";
			rdfXmlResource += synchronousmachine.getGroundFaultSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.groundFaultSchemeBranchID>\n";
		}
		if (synchronousmachine.getIsEquipmentAvailableForOptimization() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.isEquipmentAvailableForOptimization>";
			rdfXmlResource += synchronousmachine.getIsEquipmentAvailableForOptimization().toString();
			rdfXmlResource += "</nti:ConductingEquipment.isEquipmentAvailableForOptimization>\n";
		}
		if (synchronousmachine.getNormalSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeBranchID>";
			rdfXmlResource += synchronousmachine.getNormalSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeBranchID>\n";
		}
		if (synchronousmachine.getNormalSchemeNodeID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.normalSchemeNodeID>";
			rdfXmlResource += synchronousmachine.getNormalSchemeNodeID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.normalSchemeNodeID>\n";
		}
		if (synchronousmachine.getPosSeqSchemeBranchID() != null){
			rdfXmlResource += "\t\t<nti:ConductingEquipment.posSeqSchemeBranchID>";
			rdfXmlResource += synchronousmachine.getPosSeqSchemeBranchID().toString();
			rdfXmlResource += "</nti:ConductingEquipment.posSeqSchemeBranchID>\n";
		}
		if (synchronousmachine.getAggregate() != null){
			rdfXmlResource += "\t\t<cim:Equipment.aggregate>";
			rdfXmlResource += synchronousmachine.getAggregate().toString();
			rdfXmlResource += "</cim:Equipment.aggregate>\n";
		}
		if (synchronousmachine.getFailureFlow() != null){
			rdfXmlResource += "\t\t<nti:Equipment.failureFlow>";
			rdfXmlResource += synchronousmachine.getFailureFlow().toString();
			rdfXmlResource += "</nti:Equipment.failureFlow>\n";
		}
		if (synchronousmachine.getNormallyInService() != null){
			rdfXmlResource += "\t\t<cim:Equipment.normallyInService>";
			rdfXmlResource += synchronousmachine.getNormallyInService().toString();
			rdfXmlResource += "</cim:Equipment.normallyInService>\n";
		}
		if (synchronousmachine.getRecoveryTime() != null){
			rdfXmlResource += "\t\t<nti:Equipment.recoveryTime>";
			rdfXmlResource += synchronousmachine.getRecoveryTime().toString();
			rdfXmlResource += "</nti:Equipment.recoveryTime>\n";
		}
		if (synchronousmachine.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += synchronousmachine.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (synchronousmachine.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += synchronousmachine.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (synchronousmachine.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += synchronousmachine.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (synchronousmachine.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += synchronousmachine.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (synchronousmachine.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += synchronousmachine.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (synchronousmachine.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += synchronousmachine.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (synchronousmachine.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += synchronousmachine.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (synchronousmachine.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += synchronousmachine.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (synchronousmachine.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += synchronousmachine.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (synchronousmachine.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += synchronousmachine.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (synchronousmachine.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += synchronousmachine.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (synchronousmachine.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += synchronousmachine.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (synchronousmachine.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += synchronousmachine.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (synchronousmachine.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += synchronousmachine.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (synchronousmachine.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += synchronousmachine.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (synchronousmachine.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += synchronousmachine.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (synchronousmachine.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += synchronousmachine.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (synchronousmachine.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += synchronousmachine.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (synchronousmachine.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += synchronousmachine.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (synchronousmachine.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += synchronousmachine.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (synchronousmachine.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + synchronousmachine.getRpnCondition() + "\"/>\n";
		}
		if (synchronousmachine.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += synchronousmachine.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (synchronousmachine.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + synchronousmachine.getSchemeType() + "\"/>\n";
		}
		if (synchronousmachine.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + synchronousmachine.getSeasonType() + "\"/>\n";
		}
		if (synchronousmachine.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + synchronousmachine.getSubtaskNumber() + "\"/>\n";
		}
		if (synchronousmachine.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += synchronousmachine.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (synchronousmachine.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += synchronousmachine.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (synchronousmachine.getAVRToManualLag() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.aVRToManualLag>";
			rdfXmlResource += synchronousmachine.getAVRToManualLag().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.aVRToManualLag>\n";
		}
		if (synchronousmachine.getAVRToManualLead() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.aVRToManualLead>";
			rdfXmlResource += synchronousmachine.getAVRToManualLead().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.aVRToManualLead>\n";
		}
		if (synchronousmachine.getBaseQ() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.baseQ>";
			rdfXmlResource += synchronousmachine.getBaseQ().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.baseQ>\n";
		}
		if (synchronousmachine.getCondenserP() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.condenserP>";
			rdfXmlResource += synchronousmachine.getCondenserP().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.condenserP>\n";
		}
		if (synchronousmachine.getCoolantCondition() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.coolantCondition>";
			rdfXmlResource += synchronousmachine.getCoolantCondition().toString();
			rdfXmlResource += "</cim:SynchronousMachine.coolantCondition>\n";
		}
		if (synchronousmachine.getCoolantType() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.coolantType rdf:resource=\"" + this.baseURI + "#CoolantType." + synchronousmachine.getCoolantType() + "\"/>\n";
		}
		if (synchronousmachine.getEarthing() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.earthing>";
			rdfXmlResource += synchronousmachine.getEarthing().toString();
			rdfXmlResource += "</cim:SynchronousMachine.earthing>\n";
		}
		if (synchronousmachine.getEarthingStarPointR() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.earthingStarPointR>";
			rdfXmlResource += synchronousmachine.getEarthingStarPointR().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.earthingStarPointR>\n";
		}
		if (synchronousmachine.getEarthingStarPointX() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.earthingStarPointX>";
			rdfXmlResource += synchronousmachine.getEarthingStarPointX().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.earthingStarPointX>\n";
		}
		if (synchronousmachine.getIkk() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.ikk>";
			rdfXmlResource += synchronousmachine.getIkk().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.ikk>\n";
		}
		if (synchronousmachine.getManualToAVR() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.manualToAVR>";
			rdfXmlResource += synchronousmachine.getManualToAVR().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.manualToAVR>\n";
		}
		if (synchronousmachine.getMaxQ() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.maxQ>";
			rdfXmlResource += synchronousmachine.getMaxQ().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.maxQ>\n";
		}
		if (synchronousmachine.getMaxU() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.maxU>";
			rdfXmlResource += synchronousmachine.getMaxU().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.maxU>\n";
		}
		if (synchronousmachine.getMinQ() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.minQ>";
			rdfXmlResource += synchronousmachine.getMinQ().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.minQ>\n";
		}
		if (synchronousmachine.getMinU() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.minU>";
			rdfXmlResource += synchronousmachine.getMinU().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.minU>\n";
		}
		if (synchronousmachine.getMu() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.mu>";
			rdfXmlResource += synchronousmachine.getMu().toString();
			rdfXmlResource += "</cim:SynchronousMachine.mu>\n";
		}
		if (synchronousmachine.getOperatingMode() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.operatingMode rdf:resource=\"" + this.baseURI + "#SynchronousMachineOperatingMode." + synchronousmachine.getOperatingMode() + "\"/>\n";
		}
		if (synchronousmachine.getQPercent() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.qPercent>";
			rdfXmlResource += synchronousmachine.getQPercent().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.qPercent>\n";
		}
		if (synchronousmachine.getR() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.r>";
			rdfXmlResource += synchronousmachine.getR().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.r>\n";
		}
		if (synchronousmachine.getR0() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.r0>";
			rdfXmlResource += synchronousmachine.getR0().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.r0>\n";
		}
		if (synchronousmachine.getR2() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.r2>";
			rdfXmlResource += synchronousmachine.getR2().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.r2>\n";
		}
		if (synchronousmachine.getReferencePriority() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.referencePriority>";
			rdfXmlResource += synchronousmachine.getReferencePriority().toString();
			rdfXmlResource += "</cim:SynchronousMachine.referencePriority>\n";
		}
		if (synchronousmachine.getSatDirectSubtransX() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.satDirectSubtransX>";
			rdfXmlResource += synchronousmachine.getSatDirectSubtransX().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.satDirectSubtransX>\n";
		}
		if (synchronousmachine.getSatDirectSyncX() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.satDirectSyncX>";
			rdfXmlResource += synchronousmachine.getSatDirectSyncX().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.satDirectSyncX>\n";
		}
		if (synchronousmachine.getSatDirectTransX() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.satDirectTransX>";
			rdfXmlResource += synchronousmachine.getSatDirectTransX().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.satDirectTransX>\n";
		}
		if (synchronousmachine.getShortCircuitRotorType() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.shortCircuitRotorType rdf:resource=\"" + this.baseURI + "#ShortCircuitRotorKind." + synchronousmachine.getShortCircuitRotorType() + "\"/>\n";
		}
		if (synchronousmachine.getType() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.type rdf:resource=\"" + this.baseURI + "#SynchronousMachineKind." + synchronousmachine.getType() + "\"/>\n";
		}
		if (synchronousmachine.getVoltageRegulationRange() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.voltageRegulationRange>";
			rdfXmlResource += synchronousmachine.getVoltageRegulationRange().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.voltageRegulationRange>\n";
		}
		if (synchronousmachine.getX0() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.x0>";
			rdfXmlResource += synchronousmachine.getX0().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.x0>\n";
		}
		if (synchronousmachine.getX2() != null){
			rdfXmlResource += "\t\t<cim:SynchronousMachine.x2>";
			rdfXmlResource += synchronousmachine.getX2().getValue().toString();
			rdfXmlResource += "</cim:SynchronousMachine.x2>\n";
		}
		if (synchronousmachine.getMRID() != null){
			rdfXmlResource += "\t</cim:SynchronousMachine>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChanger tapchanger){
		String rdfXmlResource = "";
		if (tapchanger.getMRID() != null){
			rdfXmlResource = "\t<cim:TapChanger rdf:ID = \"_" + tapchanger.getMRID() + "\">\n";
		}
		if (tapchanger.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + tapchanger.getAssets().getMRID() + "\"/>\n";
		}
		if (tapchanger.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + tapchanger.getLocation().getMRID() + "\"/>\n";
		}
		if (tapchanger.getSvTapStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.SvTapStep rdf:resource=\"#_" + tapchanger.getSvTapStep().getMRID() + "\"/>\n";
		}
		if (tapchanger.getTapChangerControl() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.TapChangerControl rdf:resource=\"#_" + tapchanger.getTapChangerControl().getMRID() + "\"/>\n";
		}
		if (tapchanger.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += tapchanger.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (tapchanger.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += tapchanger.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (tapchanger.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += tapchanger.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (tapchanger.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += tapchanger.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (tapchanger.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += tapchanger.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (tapchanger.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += tapchanger.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (tapchanger.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += tapchanger.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (tapchanger.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += tapchanger.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (tapchanger.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += tapchanger.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (tapchanger.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += tapchanger.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (tapchanger.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += tapchanger.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (tapchanger.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += tapchanger.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (tapchanger.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += tapchanger.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (tapchanger.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += tapchanger.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (tapchanger.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += tapchanger.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (tapchanger.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += tapchanger.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (tapchanger.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += tapchanger.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (tapchanger.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += tapchanger.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (tapchanger.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += tapchanger.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (tapchanger.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += tapchanger.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (tapchanger.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + tapchanger.getRpnCondition() + "\"/>\n";
		}
		if (tapchanger.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += tapchanger.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (tapchanger.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + tapchanger.getSchemeType() + "\"/>\n";
		}
		if (tapchanger.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + tapchanger.getSeasonType() + "\"/>\n";
		}
		if (tapchanger.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + tapchanger.getSubtaskNumber() + "\"/>\n";
		}
		if (tapchanger.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += tapchanger.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (tapchanger.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += tapchanger.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (tapchanger.getControlEnabled() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.controlEnabled>";
			rdfXmlResource += tapchanger.getControlEnabled().toString();
			rdfXmlResource += "</cim:TapChanger.controlEnabled>\n";
		}
		if (tapchanger.getHighStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.highStep>";
			rdfXmlResource += tapchanger.getHighStep().toString();
			rdfXmlResource += "</cim:TapChanger.highStep>\n";
		}
		if (tapchanger.getInitialDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.initialDelay>";
			rdfXmlResource += tapchanger.getInitialDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.initialDelay>\n";
		}
		if (tapchanger.getLowStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.lowStep>";
			rdfXmlResource += tapchanger.getLowStep().toString();
			rdfXmlResource += "</cim:TapChanger.lowStep>\n";
		}
		if (tapchanger.getLtcFlag() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.ltcFlag>";
			rdfXmlResource += tapchanger.getLtcFlag().toString();
			rdfXmlResource += "</cim:TapChanger.ltcFlag>\n";
		}
		if (tapchanger.getNeutralStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralStep>";
			rdfXmlResource += tapchanger.getNeutralStep().toString();
			rdfXmlResource += "</cim:TapChanger.neutralStep>\n";
		}
		if (tapchanger.getNeutralU() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.neutralU>";
			rdfXmlResource += tapchanger.getNeutralU().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.neutralU>\n";
		}
		if (tapchanger.getNormalStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.normalStep>";
			rdfXmlResource += tapchanger.getNormalStep().toString();
			rdfXmlResource += "</cim:TapChanger.normalStep>\n";
		}
		if (tapchanger.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.step>";
			rdfXmlResource += tapchanger.getStep().toString();
			rdfXmlResource += "</cim:TapChanger.step>\n";
		}
		if (tapchanger.getSubsequentDelay() != null){
			rdfXmlResource += "\t\t<cim:TapChanger.subsequentDelay>";
			rdfXmlResource += tapchanger.getSubsequentDelay().getValue().toString();
			rdfXmlResource += "</cim:TapChanger.subsequentDelay>\n";
		}
		if (tapchanger.getMRID() != null){
			rdfXmlResource += "\t</cim:TapChanger>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChangerControl tapchangercontrol){
		String rdfXmlResource = "";
		if (tapchangercontrol.getMRID() != null){
			rdfXmlResource = "\t<cim:TapChangerControl rdf:ID = \"_" + tapchangercontrol.getMRID() + "\">\n";
		}
		if (tapchangercontrol.getAssets() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Assets rdf:resource=\"#_" + tapchangercontrol.getAssets().getMRID() + "\"/>\n";
		}
		if (tapchangercontrol.getLocation() != null){
			rdfXmlResource += "\t\t<cim:PowerSystemResource.Location rdf:resource=\"#_" + tapchangercontrol.getLocation().getMRID() + "\"/>\n";
		}
		if (tapchangercontrol.getDiscrete() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.discrete>";
			rdfXmlResource += tapchangercontrol.getDiscrete().toString();
			rdfXmlResource += "</cim:RegulatingControl.discrete>\n";
		}
		if (tapchangercontrol.getEnabled() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.enabled>";
			rdfXmlResource += tapchangercontrol.getEnabled().toString();
			rdfXmlResource += "</cim:RegulatingControl.enabled>\n";
		}
		if (tapchangercontrol.getMode() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.mode rdf:resource=\"" + this.baseURI + "#RegulatingControlModeKind." + tapchangercontrol.getMode() + "\"/>\n";
		}
		if (tapchangercontrol.getMonitoredPhase() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.monitoredPhase rdf:resource=\"" + this.baseURI + "#PhaseCode." + tapchangercontrol.getMonitoredPhase() + "\"/>\n";
		}
		if (tapchangercontrol.getTargetDeadband() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetDeadband>";
			rdfXmlResource += tapchangercontrol.getTargetDeadband().toString();
			rdfXmlResource += "</cim:RegulatingControl.targetDeadband>\n";
		}
		if (tapchangercontrol.getTargetValue() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetValue>";
			rdfXmlResource += tapchangercontrol.getTargetValue().toString();
			rdfXmlResource += "</cim:RegulatingControl.targetValue>\n";
		}
		if (tapchangercontrol.getTargetValueUnitMultiplier() != null){
			rdfXmlResource += "\t\t<cim:RegulatingControl.targetValueUnitMultiplier rdf:resource=\"" + this.baseURI + "#UnitMultiplier." + tapchangercontrol.getTargetValueUnitMultiplier() + "\"/>\n";
		}
		if (tapchangercontrol.getBrand() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.brand>";
			rdfXmlResource += tapchangercontrol.getBrand();
			rdfXmlResource += "</nti:PowerSystemResource.brand>\n";
		}
		if (tapchangercontrol.getBuildingSquare() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.buildingSquare>";
			rdfXmlResource += tapchangercontrol.getBuildingSquare().toString();
			rdfXmlResource += "</nti:PowerSystemResource.buildingSquare>\n";
		}
		if (tapchangercontrol.getCapex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.capex>";
			rdfXmlResource += tapchangercontrol.getCapex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.capex>\n";
		}
		if (tapchangercontrol.getFactorTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.factorTech>";
			rdfXmlResource += tapchangercontrol.getFactorTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.factorTech>\n";
		}
		if (tapchangercontrol.getIsHighSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isHighSideAvailable>";
			rdfXmlResource += tapchangercontrol.getIsHighSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isHighSideAvailable>\n";
		}
		if (tapchangercontrol.getIsLowSideAvailable() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isLowSideAvailable>";
			rdfXmlResource += tapchangercontrol.getIsLowSideAvailable().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isLowSideAvailable>\n";
		}
		if (tapchangercontrol.getIsOverLoaded() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.isOverLoaded>";
			rdfXmlResource += tapchangercontrol.getIsOverLoaded().toString();
			rdfXmlResource += "</nti:PowerSystemResource.isOverLoaded>\n";
		}
		if (tapchangercontrol.getLatitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.latitude>";
			rdfXmlResource += tapchangercontrol.getLatitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.latitude>\n";
		}
		if (tapchangercontrol.getLongitude() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.longitude>";
			rdfXmlResource += tapchangercontrol.getLongitude().toString();
			rdfXmlResource += "</nti:PowerSystemResource.longitude>\n";
		}
		if (tapchangercontrol.getOpex() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.opex>";
			rdfXmlResource += tapchangercontrol.getOpex().getValue().toString();
			rdfXmlResource += "</nti:PowerSystemResource.opex>\n";
		}
		if (tapchangercontrol.getPriceAdditional() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceAdditional>";
			rdfXmlResource += tapchangercontrol.getPriceAdditional().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceAdditional>\n";
		}
		if (tapchangercontrol.getPriceBase() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceBase>";
			rdfXmlResource += tapchangercontrol.getPriceBase().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceBase>\n";
		}
		if (tapchangercontrol.getPriceOper() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceOper>";
			rdfXmlResource += tapchangercontrol.getPriceOper().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceOper>\n";
		}
		if (tapchangercontrol.getPriceTech() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.priceTech>";
			rdfXmlResource += tapchangercontrol.getPriceTech().toString();
			rdfXmlResource += "</nti:PowerSystemResource.priceTech>\n";
		}
		if (tapchangercontrol.getProjectPrice() != null){
			rdfXmlResource += "\t\t<nti:PowerSystemResource.projectPrice>";
			rdfXmlResource += tapchangercontrol.getProjectPrice().toString();
			rdfXmlResource += "</nti:PowerSystemResource.projectPrice>\n";
		}
		if (tapchangercontrol.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += tapchangercontrol.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (tapchangercontrol.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += tapchangercontrol.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (tapchangercontrol.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += tapchangercontrol.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (tapchangercontrol.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += tapchangercontrol.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (tapchangercontrol.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += tapchangercontrol.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (tapchangercontrol.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + tapchangercontrol.getRpnCondition() + "\"/>\n";
		}
		if (tapchangercontrol.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += tapchangercontrol.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (tapchangercontrol.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + tapchangercontrol.getSchemeType() + "\"/>\n";
		}
		if (tapchangercontrol.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + tapchangercontrol.getSeasonType() + "\"/>\n";
		}
		if (tapchangercontrol.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + tapchangercontrol.getSubtaskNumber() + "\"/>\n";
		}
		if (tapchangercontrol.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += tapchangercontrol.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (tapchangercontrol.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += tapchangercontrol.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (tapchangercontrol.getLimitVoltage() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.limitVoltage>";
			rdfXmlResource += tapchangercontrol.getLimitVoltage().getValue().toString();
			rdfXmlResource += "</cim:TapChangerControl.limitVoltage>\n";
		}
		if (tapchangercontrol.getLineDropCompensation() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.lineDropCompensation>";
			rdfXmlResource += tapchangercontrol.getLineDropCompensation().toString();
			rdfXmlResource += "</cim:TapChangerControl.lineDropCompensation>\n";
		}
		if (tapchangercontrol.getLineDropR() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.lineDropR>";
			rdfXmlResource += tapchangercontrol.getLineDropR().getValue().toString();
			rdfXmlResource += "</cim:TapChangerControl.lineDropR>\n";
		}
		if (tapchangercontrol.getLineDropX() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.lineDropX>";
			rdfXmlResource += tapchangercontrol.getLineDropX().getValue().toString();
			rdfXmlResource += "</cim:TapChangerControl.lineDropX>\n";
		}
		if (tapchangercontrol.getReverseLineDropR() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.reverseLineDropR>";
			rdfXmlResource += tapchangercontrol.getReverseLineDropR().getValue().toString();
			rdfXmlResource += "</cim:TapChangerControl.reverseLineDropR>\n";
		}
		if (tapchangercontrol.getReverseLineDropX() != null){
			rdfXmlResource += "\t\t<cim:TapChangerControl.reverseLineDropX>";
			rdfXmlResource += tapchangercontrol.getReverseLineDropX().getValue().toString();
			rdfXmlResource += "</cim:TapChangerControl.reverseLineDropX>\n";
		}
		if (tapchangercontrol.getMRID() != null){
			rdfXmlResource += "\t</cim:TapChangerControl>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TapChangerTablePoint tapchangertablepoint){
		String rdfXmlResource = "";
		if (tapchangertablepoint.getMRID() != null){
			rdfXmlResource = "\t<cim:TapChangerTablePoint rdf:ID = \"_" + tapchangertablepoint.getMRID() + "\">\n";
		}
		if (tapchangertablepoint.getB() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.b>";
			rdfXmlResource += tapchangertablepoint.getB().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.b>\n";
		}
		if (tapchangertablepoint.getG() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.g>";
			rdfXmlResource += tapchangertablepoint.getG().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.g>\n";
		}
		if (tapchangertablepoint.getR() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.r>";
			rdfXmlResource += tapchangertablepoint.getR().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.r>\n";
		}
		if (tapchangertablepoint.getRatio() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.ratio>";
			rdfXmlResource += tapchangertablepoint.getRatio().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.ratio>\n";
		}
		if (tapchangertablepoint.getStep() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.step>";
			rdfXmlResource += tapchangertablepoint.getStep().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.step>\n";
		}
		if (tapchangertablepoint.getX() != null){
			rdfXmlResource += "\t\t<cim:TapChangerTablePoint.x>";
			rdfXmlResource += tapchangertablepoint.getX().getValue().toString();
			rdfXmlResource += "</cim:TapChangerTablePoint.x>\n";
		}
		if (tapchangertablepoint.getMRID() != null){
			rdfXmlResource += "\t</cim:TapChangerTablePoint>\n";
		}
		return rdfXmlResource;
	}

	private String createResource(ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TransformerEnd transformerend){
		String rdfXmlResource = "";
		if (transformerend.getMRID() != null){
			rdfXmlResource = "\t<cim:TransformerEnd rdf:ID = \"_" + transformerend.getMRID() + "\">\n";
		}
		if (transformerend.getBaseVoltage() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.BaseVoltage rdf:resource=\"#_" + transformerend.getBaseVoltage().getMRID() + "\"/>\n";
		}
		if (transformerend.getTerminal() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.Terminal rdf:resource=\"#_" + transformerend.getTerminal().getMRID() + "\"/>\n";
		}
		if (transformerend.getPhaseTapChanger() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.PhaseTapChanger rdf:resource=\"#_" + transformerend.getPhaseTapChanger().getMRID() + "\"/>\n";
		}
		if (transformerend.getRatioTapChanger() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.RatioTapChanger rdf:resource=\"#_" + transformerend.getRatioTapChanger().getMRID() + "\"/>\n";
		}
		if (transformerend.getAliasName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.aliasName>";
			rdfXmlResource += transformerend.getAliasName();
			rdfXmlResource += "</cim:IdentifiedObject.aliasName>\n";
		}
		if (transformerend.getDescription() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.description>";
			rdfXmlResource += transformerend.getDescription();
			rdfXmlResource += "</cim:IdentifiedObject.description>\n";
		}
		if (transformerend.getMRID() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.mRID>";
			rdfXmlResource += transformerend.getMRID();
			rdfXmlResource += "</cim:IdentifiedObject.mRID>\n";
		}
		if (transformerend.getName() != null){
			rdfXmlResource += "\t\t<cim:IdentifiedObject.name>";
			rdfXmlResource += transformerend.getName();
			rdfXmlResource += "</cim:IdentifiedObject.name>\n";
		}
		if (transformerend.getProjectID() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.projectID>";
			rdfXmlResource += transformerend.getProjectID();
			rdfXmlResource += "</nti:IdentifiedObject.projectID>\n";
		}
		if (transformerend.getRpnCondition() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.rpnCondition rdf:resource=\"" + this.baseURI + "#RpnCondition." + transformerend.getRpnCondition() + "\"/>\n";
		}
		if (transformerend.getSchemaScenarioNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemaScenarioNumber>";
			rdfXmlResource += transformerend.getSchemaScenarioNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.schemaScenarioNumber>\n";
		}
		if (transformerend.getSchemeType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.schemeType rdf:resource=\"" + this.baseURI + "#SchemeType." + transformerend.getSchemeType() + "\"/>\n";
		}
		if (transformerend.getSeasonType() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.seasonType rdf:resource=\"" + this.baseURI + "#SeasonType." + transformerend.getSeasonType() + "\"/>\n";
		}
		if (transformerend.getSubtaskNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.subtaskNumber rdf:resource=\"" + this.baseURI + "#SubtaskNumber." + transformerend.getSubtaskNumber() + "\"/>\n";
		}
		if (transformerend.getSynthesizedSchemeNumber() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.synthesizedSchemeNumber>";
			rdfXmlResource += transformerend.getSynthesizedSchemeNumber().toString();
			rdfXmlResource += "</nti:IdentifiedObject.synthesizedSchemeNumber>\n";
		}
		if (transformerend.getWasObjectSynthesized() != null){
			rdfXmlResource += "\t\t<nti:IdentifiedObject.wasObjectSynthesized>";
			rdfXmlResource += transformerend.getWasObjectSynthesized().toString();
			rdfXmlResource += "</nti:IdentifiedObject.wasObjectSynthesized>\n";
		}
		if (transformerend.getBmagSat() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.bmagSat>";
			rdfXmlResource += transformerend.getBmagSat().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.bmagSat>\n";
		}
		if (transformerend.getEndNumber() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.endNumber>";
			rdfXmlResource += transformerend.getEndNumber().toString();
			rdfXmlResource += "</cim:TransformerEnd.endNumber>\n";
		}
		if (transformerend.getGrounded() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.grounded>";
			rdfXmlResource += transformerend.getGrounded().toString();
			rdfXmlResource += "</cim:TransformerEnd.grounded>\n";
		}
		if (transformerend.getMagBaseU() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.magBaseU>";
			rdfXmlResource += transformerend.getMagBaseU().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.magBaseU>\n";
		}
		if (transformerend.getMagSatFlux() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.magSatFlux>";
			rdfXmlResource += transformerend.getMagSatFlux().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.magSatFlux>\n";
		}
		if (transformerend.getRground() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.rground>";
			rdfXmlResource += transformerend.getRground().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.rground>\n";
		}
		if (transformerend.getXground() != null){
			rdfXmlResource += "\t\t<cim:TransformerEnd.xground>";
			rdfXmlResource += transformerend.getXground().getValue().toString();
			rdfXmlResource += "</cim:TransformerEnd.xground>\n";
		}
		if (transformerend.getMRID() != null){
			rdfXmlResource += "\t</cim:TransformerEnd>\n";
		}
		return rdfXmlResource;
	}


}
