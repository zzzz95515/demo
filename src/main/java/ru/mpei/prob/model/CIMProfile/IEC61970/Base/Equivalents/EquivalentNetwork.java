package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConnectivityNodeContainer;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * A class that represents an external meshed network that has been reduced 
 * to an electrically equivalent model. The ConnectivityNodes contained in 
 * the equivalent are intended to reflect internal nodes of the equivalent. 
 * The boundary Connectivity nodes where the equivalent connects outside itself 
 * are NOT contained by the equivalent.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "equivalentnetwork")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class EquivalentNetwork extends ConnectivityNodeContainer {

	/**
	 * The equivalent where the reduced model belongs.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "EquivalentNetwork")
	private List<EquivalentEquipment> EquivalentEquipments;

	@JsonIgnore
	public List<EquivalentEquipment> getEquivalentEquipments(){
		return this.EquivalentEquipments;
	}

	@AssociationSetter(fieldName = "EquivalentNetwork.EquivalentEquipments", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentEquipment", cardinality = "many")
	public void setEquivalentEquipments(List<EquivalentEquipment> EquivalentEquipments){
		this.EquivalentEquipments = EquivalentEquipments;
	}

	public EquivalentNetwork(){

	}

}
