package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61968.Assets.Asset;
import ru.mpei.prob.model.CIMProfile.IEC61968.Common.Location;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Money;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * A power system resource can be an item of equipment such as a switch, an 
 * equipment container containing many individual items of equipment such 
 * as a substation, or an organisational entity such as sub-control area. 
 * Power system resources can have measurements associated.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "powersystemresource")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class PowerSystemResource extends IdentifiedObject {
	/**
	 * Марка оборудования
	 */
	@Column(name="brand", nullable = true)
	private String brand;
	/**
	 * Площадь здания, м^2
	 */
	@Column(name="buildingSquare", nullable = true)
	private Float buildingSquare;
	/**
	 * Капитальные затраты на оборудование
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="capex_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="capex_unit")),
		@AttributeOverride(name="value", column=@Column(name="capex_value")),
	})
	private Money capex;
	/**
	 * Коэф., учитывающий сложность технических работ обслуживаемого объекта 
	 */
	@Column(name="factorTech", nullable = true)
	private Float factorTech;
	/**
	 * Доступна ли ПС для подключения со стороны ВН
	 */
	@Column(name="isHighSideAvailable", nullable = true)
	private Boolean isHighSideAvailable;
	/**
	 * Доступна ли ПС для подключения со стороны НН
	 */
	@Column(name="isLowSideAvailable", nullable = true)
	private Boolean isLowSideAvailable;
	/**
	 * Перегружена ли подстанция, трансформатор или другое оборудование?
	 */
	@Column(name="isOverLoaded", nullable = true)
	private Boolean isOverLoaded;
	/**
	 * Широта
	 */
	@Column(name="latitude", nullable = true)
	private Float latitude;
	/**
	 * Долгота
	 */
	@Column(name="longitude", nullable = true)
	private Float longitude;
	/**
	 * Операционные затраты на оборудование
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="opex_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="opex_unit")),
		@AttributeOverride(name="value", column=@Column(name="opex_value")),
	})
	private Money opex;
	/**
	 * Прочие затраты
	 */
	@Column(name="priceAdditional", nullable = true)
	private Float priceAdditional;
	/**
	 * Капиталовложения в строительство ПС
	 */
	@Column(name="priceBase", nullable = true)
	private Float priceBase;
	/**
	 * Удельные операционные затраты
	 */
	@Column(name="priceOper", nullable = true)
	private Float priceOper;
	/**
	 * Удельная стоимость технических работ
	 */
	@Column(name="priceTech", nullable = true)
	private Float priceTech;
	/**
	 * Стоимость проектно-изыскательных работ, руб
	 */
	@Column(name="projectPrice", nullable = true)
	private Float projectPrice;

	/**
	 * All power system resources used to electrically model this asset. For example, 
	 * transformer asset is electrically modelled with a transformer and its windings 
	 * and tap changer.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assets_mrid")
	@JoinColumn(name = "assets_projectid")
	@JoinColumn(name = "assets_synthesizedschemenumber")
	@JoinColumn(name = "assets_schemascenarionumber")
	private Asset Assets;
	/**
	 * All power system resources at this location.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_mrid")
	@JoinColumn(name = "location_projectid")
	@JoinColumn(name = "location_synthesizedschemenumber")
	@JoinColumn(name = "location_schemascenarionumber")
	private Location Location;

	public String getBrand(){
		return this.brand;
	}

	@FieldSetter(fieldName = "PowerSystemResource.brand", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setBrand(String brand){
		this.brand = brand;
	}

	public Float getBuildingSquare(){
		return this.buildingSquare;
	}

	@FieldSetter(fieldName = "PowerSystemResource.buildingSquare", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setBuildingSquare(Float buildingSquare){
		this.buildingSquare = buildingSquare;
	}

	public Money getCapex(){
		return this.capex;
	}

	@FieldSetter(fieldName = "PowerSystemResource.capex", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "nti")
	public void setCapex(Money capex){
		this.capex = capex;
	}

	public Float getFactorTech(){
		return this.factorTech;
	}

	@FieldSetter(fieldName = "PowerSystemResource.factorTech", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setFactorTech(Float factorTech){
		this.factorTech = factorTech;
	}

	public Boolean getIsHighSideAvailable(){
		return this.isHighSideAvailable;
	}

	@FieldSetter(fieldName = "PowerSystemResource.isHighSideAvailable", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setIsHighSideAvailable(Boolean isHighSideAvailable){
		this.isHighSideAvailable = isHighSideAvailable;
	}

	public Boolean getIsLowSideAvailable(){
		return this.isLowSideAvailable;
	}

	@FieldSetter(fieldName = "PowerSystemResource.isLowSideAvailable", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setIsLowSideAvailable(Boolean isLowSideAvailable){
		this.isLowSideAvailable = isLowSideAvailable;
	}

	public Boolean getIsOverLoaded(){
		return this.isOverLoaded;
	}

	@FieldSetter(fieldName = "PowerSystemResource.isOverLoaded", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setIsOverLoaded(Boolean isOverLoaded){
		this.isOverLoaded = isOverLoaded;
	}

	public Float getLatitude(){
		return this.latitude;
	}

	@FieldSetter(fieldName = "PowerSystemResource.latitude", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setLatitude(Float latitude){
		this.latitude = latitude;
	}

	public Float getLongitude(){
		return this.longitude;
	}

	@FieldSetter(fieldName = "PowerSystemResource.longitude", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setLongitude(Float longitude){
		this.longitude = longitude;
	}

	public Money getOpex(){
		return this.opex;
	}

	@FieldSetter(fieldName = "PowerSystemResource.opex", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "nti")
	public void setOpex(Money opex){
		this.opex = opex;
	}

	public Float getPriceAdditional(){
		return this.priceAdditional;
	}

	@FieldSetter(fieldName = "PowerSystemResource.priceAdditional", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setPriceAdditional(Float priceAdditional){
		this.priceAdditional = priceAdditional;
	}

	public Float getPriceBase(){
		return this.priceBase;
	}

	@FieldSetter(fieldName = "PowerSystemResource.priceBase", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setPriceBase(Float priceBase){
		this.priceBase = priceBase;
	}

	public Float getPriceOper(){
		return this.priceOper;
	}

	@FieldSetter(fieldName = "PowerSystemResource.priceOper", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setPriceOper(Float priceOper){
		this.priceOper = priceOper;
	}

	public Float getPriceTech(){
		return this.priceTech;
	}

	@FieldSetter(fieldName = "PowerSystemResource.priceTech", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setPriceTech(Float priceTech){
		this.priceTech = priceTech;
	}

	public Float getProjectPrice(){
		return this.projectPrice;
	}

	@FieldSetter(fieldName = "PowerSystemResource.projectPrice", fieldTypeStereotype = "Primitive", fieldStereotype = "nti")
	public void setProjectPrice(Float projectPrice){
		this.projectPrice = projectPrice;
	}

	public Asset getAssets(){
		return this.Assets;
	}

	@AssociationSetter(fieldName = "PowerSystemResource.Assets", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61968.Assets.Asset", cardinality = "one")
	public void setAssets(Asset Assets){
		this.Assets = Assets;
	}

	public Location getLocation(){
		return this.Location;
	}

	@AssociationSetter(fieldName = "PowerSystemResource.Location", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61968.Common.Location", cardinality = "one")
	public void setLocation(Location Location){
		this.Location = Location;
	}

	public PowerSystemResource(){

	}

}
