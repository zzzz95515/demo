package ru.mpei.prob.model.CIMProfile.NTI.Sequences;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * Контейнер для данных о токах КЗ разных последовательностей
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Embeddable
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ShortCircuitSequencesOfCurrents {
	/**
	 * Однофазное КЗ
	 */
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name="angNeg.multiplier", column=@Column(name="p1angNegmultiplier")),
		@AttributeOverride(name="angNeg.unit", column=@Column(name="p1angNegunit")),
		@AttributeOverride(name="angNeg.value", column=@Column(name="p1angNegvalue")),
		@AttributeOverride(name="angPo.multiplier", column=@Column(name="p1angPomultiplier")),
		@AttributeOverride(name="angPo.unit", column=@Column(name="p1angPounit")),
		@AttributeOverride(name="angPo.value", column=@Column(name="p1angPovalue")),
		@AttributeOverride(name="angZero.multiplier", column=@Column(name="p1angZeromultiplier")),
		@AttributeOverride(name="angZero.unit", column=@Column(name="p1angZerounit")),
		@AttributeOverride(name="angZero.value", column=@Column(name="p1angZerovalue")),
		@AttributeOverride(name="neg.multiplier", column=@Column(name="p1negmultiplier")),
		@AttributeOverride(name="neg.unit", column=@Column(name="p1negunit")),
		@AttributeOverride(name="neg.value", column=@Column(name="p1negvalue")),
		@AttributeOverride(name="pos.multiplier", column=@Column(name="p1posmultiplier")),
		@AttributeOverride(name="pos.unit", column=@Column(name="p1posunit")),
		@AttributeOverride(name="pos.value", column=@Column(name="p1posvalue")),
		@AttributeOverride(name="zero.multiplier", column=@Column(name="p1zeromultiplier")),
		@AttributeOverride(name="zero.unit", column=@Column(name="p1zerounit")),
		@AttributeOverride(name="zero.value", column=@Column(name="p1zerovalue"))
	})
	private CurrentSequences p1;
	/**
	 * Двухфазное КЗ на землю
	 */
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name="angNeg.multiplier", column=@Column(name="p1_1angNegmultiplier")),
		@AttributeOverride(name="angNeg.unit", column=@Column(name="p1_1angNegunit")),
		@AttributeOverride(name="angNeg.value", column=@Column(name="p1_1angNegvalue")),
		@AttributeOverride(name="angPo.multiplier", column=@Column(name="p1_1angPomultiplier")),
		@AttributeOverride(name="angPo.unit", column=@Column(name="p1_1angPounit")),
		@AttributeOverride(name="angPo.value", column=@Column(name="p1_1angPovalue")),
		@AttributeOverride(name="angZero.multiplier", column=@Column(name="p1_1angZeromultiplier")),
		@AttributeOverride(name="angZero.unit", column=@Column(name="p1_1angZerounit")),
		@AttributeOverride(name="angZero.value", column=@Column(name="p1_1angZerovalue")),
		@AttributeOverride(name="neg.multiplier", column=@Column(name="p1_1negmultiplier")),
		@AttributeOverride(name="neg.unit", column=@Column(name="p1_1negunit")),
		@AttributeOverride(name="neg.value", column=@Column(name="p1_1negvalue")),
		@AttributeOverride(name="pos.multiplier", column=@Column(name="p1_1posmultiplier")),
		@AttributeOverride(name="pos.unit", column=@Column(name="p1_1posunit")),
		@AttributeOverride(name="pos.value", column=@Column(name="p1_1posvalue")),
		@AttributeOverride(name="zero.multiplier", column=@Column(name="p1_1zeromultiplier")),
		@AttributeOverride(name="zero.unit", column=@Column(name="p1_1zerounit")),
		@AttributeOverride(name="zero.value", column=@Column(name="p1_1zerovalue"))
	})
	private CurrentSequences p1_1;
	/**
	 * Двухфазное КЗ
	 */
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name="angNeg.multiplier", column=@Column(name="p2angNegmultiplier")),
		@AttributeOverride(name="angNeg.unit", column=@Column(name="p2angNegunit")),
		@AttributeOverride(name="angNeg.value", column=@Column(name="p2angNegvalue")),
		@AttributeOverride(name="angPo.multiplier", column=@Column(name="p2angPomultiplier")),
		@AttributeOverride(name="angPo.unit", column=@Column(name="p2angPounit")),
		@AttributeOverride(name="angPo.value", column=@Column(name="p2angPovalue")),
		@AttributeOverride(name="angZero.multiplier", column=@Column(name="p2angZeromultiplier")),
		@AttributeOverride(name="angZero.unit", column=@Column(name="p2angZerounit")),
		@AttributeOverride(name="angZero.value", column=@Column(name="p2angZerovalue")),
		@AttributeOverride(name="neg.multiplier", column=@Column(name="p2negmultiplier")),
		@AttributeOverride(name="neg.unit", column=@Column(name="p2negunit")),
		@AttributeOverride(name="neg.value", column=@Column(name="p2negvalue")),
		@AttributeOverride(name="pos.multiplier", column=@Column(name="p2posmultiplier")),
		@AttributeOverride(name="pos.unit", column=@Column(name="p2posunit")),
		@AttributeOverride(name="pos.value", column=@Column(name="p2posvalue")),
		@AttributeOverride(name="zero.multiplier", column=@Column(name="p2zeromultiplier")),
		@AttributeOverride(name="zero.unit", column=@Column(name="p2zerounit")),
		@AttributeOverride(name="zero.value", column=@Column(name="p2zerovalue"))
	})
	private CurrentSequences p2;
	/**
	 * Трехфазное КЗ
	 */
	@Embedded
	@AttributeOverrides({
		@AttributeOverride(name="angNeg.multiplier", column=@Column(name="p3angNegmultiplier")),
		@AttributeOverride(name="angNeg.unit", column=@Column(name="p3angNegunit")),
		@AttributeOverride(name="angNeg.value", column=@Column(name="p3angNegvalue")),
		@AttributeOverride(name="angPo.multiplier", column=@Column(name="p3angPomultiplier")),
		@AttributeOverride(name="angPo.unit", column=@Column(name="p3angPounit")),
		@AttributeOverride(name="angPo.value", column=@Column(name="p3angPovalue")),
		@AttributeOverride(name="angZero.multiplier", column=@Column(name="p3angZeromultiplier")),
		@AttributeOverride(name="angZero.unit", column=@Column(name="p3angZerounit")),
		@AttributeOverride(name="angZero.value", column=@Column(name="p3angZerovalue")),
		@AttributeOverride(name="neg.multiplier", column=@Column(name="p3negmultiplier")),
		@AttributeOverride(name="neg.unit", column=@Column(name="p3negunit")),
		@AttributeOverride(name="neg.value", column=@Column(name="p3negvalue")),
		@AttributeOverride(name="pos.multiplier", column=@Column(name="p3posmultiplier")),
		@AttributeOverride(name="pos.unit", column=@Column(name="p3posunit")),
		@AttributeOverride(name="pos.value", column=@Column(name="p3posvalue")),
		@AttributeOverride(name="zero.multiplier", column=@Column(name="p3zeromultiplier")),
		@AttributeOverride(name="zero.unit", column=@Column(name="p3zerounit")),
		@AttributeOverride(name="zero.value", column=@Column(name="p3zerovalue"))
	})
	private CurrentSequences p3;


	public CurrentSequences getP1(){
		return this.p1;
	}

	@FieldSetter(fieldName = "ShortCircuitSequencesOfCurrents.p1", fieldTypeStereotype = "Embeddable", fieldStereotype = "nti")
	public void setP1(CurrentSequences p1){
		this.p1 = p1;
	}

	public CurrentSequences getP1_1(){
		return this.p1_1;
	}

	@FieldSetter(fieldName = "ShortCircuitSequencesOfCurrents.p1_1", fieldTypeStereotype = "Embeddable", fieldStereotype = "nti")
	public void setP1_1(CurrentSequences p1_1){
		this.p1_1 = p1_1;
	}

	public CurrentSequences getP2(){
		return this.p2;
	}

	@FieldSetter(fieldName = "ShortCircuitSequencesOfCurrents.p2", fieldTypeStereotype = "Embeddable", fieldStereotype = "nti")
	public void setP2(CurrentSequences p2){
		this.p2 = p2;
	}

	public CurrentSequences getP3(){
		return this.p3;
	}

	@FieldSetter(fieldName = "ShortCircuitSequencesOfCurrents.p3", fieldTypeStereotype = "Embeddable", fieldStereotype = "nti")
	public void setP3(CurrentSequences p3){
		this.p3 = p3;
	}

	public ShortCircuitSequencesOfCurrents(){

	}

}
