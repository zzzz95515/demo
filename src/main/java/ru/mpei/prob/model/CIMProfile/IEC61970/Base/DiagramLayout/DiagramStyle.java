package ru.mpei.prob.model.CIMProfile.IEC61970.Base.DiagramLayout;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * The diagram style refer to a style used by the originating system for a 
 * diagram.  A diagram style describes information such as schematic, geographic, 
 * bus-branch etc.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "diagramstyle")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DiagramStyle extends IdentifiedObject {

	/**
	 * A Diagram may have a DiagramStyle.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "DiagramStyle")
	private List<Diagram> Diagram;

	@JsonIgnore
	public List<Diagram> getDiagram(){
		return this.Diagram;
	}

	@AssociationSetter(fieldName = "DiagramStyle.Diagram", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.DiagramLayout.Diagram", cardinality = "many")
	public void setDiagram(List<Diagram> Diagram){
		this.Diagram = Diagram;
	}

	public DiagramStyle(){

	}

}
