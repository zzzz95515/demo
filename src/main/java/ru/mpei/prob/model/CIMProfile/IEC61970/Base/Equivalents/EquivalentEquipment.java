package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.ConductingEquipment;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * The class represents equivalent objects that are the result of a network 
 * reduction. The class is the base for equivalent objects of different types.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "equivalentequipment")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class EquivalentEquipment extends ConductingEquipment {

	/**
	 * The associated reduced equivalents.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "equivalentnetwork_mrid")
	@JoinColumn(name = "equivalentnetwork_projectid")
	@JoinColumn(name = "equivalentnetwork_synthesizedschemenumber")
	@JoinColumn(name = "equivalentnetwork_schemascenarionumber")
	private EquivalentNetwork EquivalentNetwork;

	public EquivalentNetwork getEquivalentNetwork(){
		return this.EquivalentNetwork;
	}

	@AssociationSetter(fieldName = "EquivalentEquipment.EquivalentNetwork", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Equivalents.EquivalentNetwork", cardinality = "one")
	public void setEquivalentNetwork(EquivalentNetwork EquivalentNetwork){
		this.EquivalentNetwork = EquivalentNetwork;
	}

	public EquivalentEquipment(){

	}

}
