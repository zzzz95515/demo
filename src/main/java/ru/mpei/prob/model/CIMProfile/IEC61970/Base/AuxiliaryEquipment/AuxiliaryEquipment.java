package ru.mpei.prob.model.CIMProfile.IEC61970.Base.AuxiliaryEquipment;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Equipment;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.Terminal;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * AuxiliaryEquipment describe equipment that is not performing any primary 
 * functions but support for the equipment performing the primary function.AuxiliaryEquipment 
 * is attached to primary eqipment via an association with Terminal.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "auxiliaryequipment")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class AuxiliaryEquipment extends Equipment {

	/**
	 * The auxiliary equipment connected to the terminal.
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "terminal_mrid")
	@JoinColumn(name = "terminal_projectid")
	@JoinColumn(name = "terminal_synthesizedschemenumber")
	@JoinColumn(name = "terminal_schemascenarionumber")
	private Terminal Terminal;

	public Terminal getTerminal(){
		return this.Terminal;
	}

	@AssociationSetter(fieldName = "AuxiliaryEquipment.Terminal", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.Terminal", cardinality = "one")
	public void setTerminal(Terminal Terminal){
		this.Terminal = Terminal;
	}

	public AuxiliaryEquipment(){

	}

}
