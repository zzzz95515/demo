package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Voltage;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Wires.TransformerEnd;
import ru.mpei.prob.model.CIMProfile.NTI.Cluster;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * Defines a system base voltage which is referenced. 
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "basevoltage")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class BaseVoltage extends IdentifiedObject {
	/**
	 * The power system resource's base voltage.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="nominalVoltage_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="nominalVoltage_unit")),
		@AttributeOverride(name="value", column=@Column(name="nominalVoltage_value")),
	})
	private Voltage nominalVoltage;

	/**
	 * Кластеры элементов, в которых данное базовое напряжение является максимальным
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "MaxBaseVoltage")
	private List<Cluster> Cluster;
	/**
	 * Base voltage of this conducting equipment.  Use only when there is no voltage 
	 * level container used and only one base voltage applies.  For example, not 
	 * used for transformers.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "BaseVoltage")
	private List<ConductingEquipment> ConductingEquipment;
	/**
	 * The base voltage of the topologocial node.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "BaseVoltage")
	private List<TopologicalNode> TopologicalNode;
	/**
	 * Base voltage of the transformer end.  This is essential for PU calculation.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "BaseVoltage")
	private List<TransformerEnd> TransformerEnds;
	/**
	 * The base voltage used for all equipment within the voltage level.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "BaseVoltage")
	private List<VoltageLevel> VoltageLevel;

	public Voltage getNominalVoltage(){
		return this.nominalVoltage;
	}

	@FieldSetter(fieldName = "BaseVoltage.nominalVoltage", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setNominalVoltage(Voltage nominalVoltage){
		this.nominalVoltage = nominalVoltage;
	}

	@JsonIgnore
	public List<Cluster> getCluster(){
		return this.Cluster;
	}

	@AssociationSetter(fieldName = "BaseVoltage.Cluster", assocType = "ru.mpei.ltdb.model.CIMProfile.NTI.Cluster", cardinality = "many")
	public void setCluster(List<Cluster> Cluster){
		this.Cluster = Cluster;
	}

	@JsonIgnore
	public List<ConductingEquipment> getConductingEquipment(){
		return this.ConductingEquipment;
	}

	@AssociationSetter(fieldName = "BaseVoltage.ConductingEquipment", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.ConductingEquipment", cardinality = "many")
	public void setConductingEquipment(List<ConductingEquipment> ConductingEquipment){
		this.ConductingEquipment = ConductingEquipment;
	}

	@JsonIgnore
	public List<TopologicalNode> getTopologicalNode(){
		return this.TopologicalNode;
	}

	@AssociationSetter(fieldName = "BaseVoltage.TopologicalNode", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode", cardinality = "many")
	public void setTopologicalNode(List<TopologicalNode> TopologicalNode){
		this.TopologicalNode = TopologicalNode;
	}

	@JsonIgnore
	public List<TransformerEnd> getTransformerEnds(){
		return this.TransformerEnds;
	}

	@AssociationSetter(fieldName = "BaseVoltage.TransformerEnds", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Wires.TransformerEnd", cardinality = "many")
	public void setTransformerEnds(List<TransformerEnd> TransformerEnds){
		this.TransformerEnds = TransformerEnds;
	}

	@JsonIgnore
	public List<VoltageLevel> getVoltageLevel(){
		return this.VoltageLevel;
	}

	@AssociationSetter(fieldName = "BaseVoltage.VoltageLevel", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.VoltageLevel", cardinality = "many")
	public void setVoltageLevel(List<VoltageLevel> VoltageLevel){
		this.VoltageLevel = VoltageLevel;
	}

	public BaseVoltage(){

	}

}
