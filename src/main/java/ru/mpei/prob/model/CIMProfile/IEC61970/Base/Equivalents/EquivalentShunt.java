package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Equivalents;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Conductance;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Susceptance;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * The class represents equivalent shunts.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "equivalentshunt")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class EquivalentShunt extends EquivalentEquipment {
	/**
	 * Positive sequence shunt susceptance.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="b_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="b_unit")),
		@AttributeOverride(name="value", column=@Column(name="b_value")),
	})
	private Susceptance b;
	/**
	 * Positive sequence shunt conductance.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="g_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="g_unit")),
		@AttributeOverride(name="value", column=@Column(name="g_value")),
	})
	private Conductance g;


	public Susceptance getB(){
		return this.b;
	}

	@FieldSetter(fieldName = "EquivalentShunt.b", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setB(Susceptance b){
		this.b = b;
	}

	public Conductance getG(){
		return this.g;
	}

	@FieldSetter(fieldName = "EquivalentShunt.g", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setG(Conductance g){
		this.g = g;
	}

	public EquivalentShunt(){

	}

}
