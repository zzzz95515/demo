package ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * A base class for all objects that may contain connectivity nodes or topological 
 * nodes.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "connectivitynodecontainer")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ConnectivityNodeContainer extends PowerSystemResource {

	/**
	 * Container of this connectivity node.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "ConnectivityNodeContainer")
	private List<ConnectivityNode> ConnectivityNodes;
	/**
	 * The connectivity node container to which the toplogical node belongs.
	 */
	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "ConnectivityNodeContainer")
	private List<TopologicalNode> TopologicalNode;

	@JsonIgnore
	public List<ConnectivityNode> getConnectivityNodes(){
		return this.ConnectivityNodes;
	}

	@AssociationSetter(fieldName = "ConnectivityNodeContainer.ConnectivityNodes", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Core.ConnectivityNode", cardinality = "many")
	public void setConnectivityNodes(List<ConnectivityNode> ConnectivityNodes){
		this.ConnectivityNodes = ConnectivityNodes;
	}

	@JsonIgnore
	public List<TopologicalNode> getTopologicalNode(){
		return this.TopologicalNode;
	}

	@AssociationSetter(fieldName = "ConnectivityNodeContainer.TopologicalNode", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Topology.TopologicalNode", cardinality = "many")
	public void setTopologicalNode(List<TopologicalNode> TopologicalNode){
		this.TopologicalNode = TopologicalNode;
	}

	public ConnectivityNodeContainer(){

	}

}
