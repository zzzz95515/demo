package ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Capacitance;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Resistance;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Domain.Voltage;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;

/**
 * A shunt device within the DC system, typically used for filtering.  Needed 
 * for transient and short circuit studies.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "dcshunt")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DCShunt extends DCConductingEquipment {
	/**
	 * Capacitance of the DC shunt.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="capacitance_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="capacitance_unit")),
		@AttributeOverride(name="value", column=@Column(name="capacitance_value")),
	})
	private Capacitance capacitance;
	/**
	 * Rated DC device voltage. Converter configuration data used in power flow.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="ratedUdc_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="ratedUdc_unit")),
		@AttributeOverride(name="value", column=@Column(name="ratedUdc_value")),
	})
	private Voltage ratedUdc;
	/**
	 * Resistance of the DC device.
	 */
	@AttributeOverrides({
		@AttributeOverride(name="multiplier", column=@Column(name="resistance_multiplier")),
		@AttributeOverride(name="unit", column=@Column(name="resistance_unit")),
		@AttributeOverride(name="value", column=@Column(name="resistance_value")),
	})
	private Resistance resistance;


	public Capacitance getCapacitance(){
		return this.capacitance;
	}

	@FieldSetter(fieldName = "DCShunt.capacitance", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setCapacitance(Capacitance capacitance){
		this.capacitance = capacitance;
	}

	public Voltage getRatedUdc(){
		return this.ratedUdc;
	}

	@FieldSetter(fieldName = "DCShunt.ratedUdc", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setRatedUdc(Voltage ratedUdc){
		this.ratedUdc = ratedUdc;
	}

	public Resistance getResistance(){
		return this.resistance;
	}

	@FieldSetter(fieldName = "DCShunt.resistance", fieldTypeStereotype = "CIMDatatype", fieldStereotype = "none")
	public void setResistance(Resistance resistance){
		this.resistance = resistance;
	}

	public DCShunt(){

	}

}
