package ru.mpei.prob.model.CIMProfile.IEC61968.Common;

import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * Street details, in the context of address.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:50 MSK 2020
 */

@Entity
@Table(name = "streetdetail")
@JsonInclude(JsonInclude.Include.NON_NULL)
// surrogate inheritance
public class StreetDetail extends IdentifiedObject{
	/**
	 * Additional address information, for example a mailstop.
	 */
	@Column(name="addressGeneral", nullable = true)
	private String addressGeneral;
	/**
	 * (if applicable) In certain cases the physical location of the place of 
	 * interest does not have a direct point of entry from the street, but may 
	 * be located inside a larger structure such as a building, complex, office 
	 * block, apartment, etc.
	 */
	@Column(name="buildingName", nullable = true)
	private String buildingName;
	/**
	 * (if applicable) Utilities often make use of external reference systems, 
	 * such as those of the town-planner's department or surveyor general's mapping 
	 * system, that allocate global reference codes to streets.
	 */
	@Column(name="code", nullable = true)
	private String code;
	/**
	 * Name of the street.
	 */
	@Column(name="name", nullable = true)
	private String name;
	/**
	 * Designator of the specific location on the street.
	 */
	@Column(name="number", nullable = true)
	private String number;
	/**
	 * Prefix to the street name. For example: North, South, East, West.
	 */
	@Column(name="prefix", nullable = true)
	private String prefix;
	/**
	 * Suffix to the street name. For example: North, South, East, West.
	 */
	@Column(name="suffix", nullable = true)
	private String suffix;
	/**
	 * Number of the apartment or suite.
	 */
	@Column(name="suiteNumber", nullable = true)
	private String suiteNumber;
	/**
	 * Type of street. Examples include: street, circle, boulevard, avenue, road, 
	 * drive, etc.
	 */
	@Column(name="type", nullable = true)
	private String type;
	/**
	 * True if this street is within the legal geographical boundaries of the 
	 * specified town (default).
	 */
	@Column(name="withinTownLimits", nullable = true)
	private Boolean withinTownLimits;


	public String getAddressGeneral(){
		return this.addressGeneral;
	}

	@FieldSetter(fieldName = "StreetDetail.addressGeneral", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setAddressGeneral(String addressGeneral){
		this.addressGeneral = addressGeneral;
	}

	public String getBuildingName(){
		return this.buildingName;
	}

	@FieldSetter(fieldName = "StreetDetail.buildingName", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setBuildingName(String buildingName){
		this.buildingName = buildingName;
	}

	public String getCode(){
		return this.code;
	}

	@FieldSetter(fieldName = "StreetDetail.code", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setCode(String code){
		this.code = code;
	}

	public String getName(){
		return this.name;
	}

	@FieldSetter(fieldName = "StreetDetail.name", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setName(String name){
		this.name = name;
	}

	public String getNumber(){
		return this.number;
	}

	@FieldSetter(fieldName = "StreetDetail.number", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setNumber(String number){
		this.number = number;
	}

	public String getPrefix(){
		return this.prefix;
	}

	@FieldSetter(fieldName = "StreetDetail.prefix", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setPrefix(String prefix){
		this.prefix = prefix;
	}

	public String getSuffix(){
		return this.suffix;
	}

	@FieldSetter(fieldName = "StreetDetail.suffix", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setSuffix(String suffix){
		this.suffix = suffix;
	}

	public String getSuiteNumber(){
		return this.suiteNumber;
	}

	@FieldSetter(fieldName = "StreetDetail.suiteNumber", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setSuiteNumber(String suiteNumber){
		this.suiteNumber = suiteNumber;
	}

	public String getType(){
		return this.type;
	}

	@FieldSetter(fieldName = "StreetDetail.type", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setType(String type){
		this.type = type;
	}

	public Boolean getWithinTownLimits(){
		return this.withinTownLimits;
	}

	@FieldSetter(fieldName = "StreetDetail.withinTownLimits", fieldTypeStereotype = "Primitive", fieldStereotype = "none")
	public void setWithinTownLimits(Boolean withinTownLimits){
		this.withinTownLimits = withinTownLimits;
	}

	public StreetDetail(){

	}

}
