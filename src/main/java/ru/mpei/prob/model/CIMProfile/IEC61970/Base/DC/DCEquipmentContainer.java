package ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.EquipmentContainer;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * A modeling construct to provide a root class for containment of DC as well 
 * as AC equipment. The class differ from the EquipmentContaner for AC in 
 * that it may also contain DCNodes. Hence it can contain both AC and DC equipment.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "dcequipmentcontainer")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DCEquipmentContainer extends EquipmentContainer {

	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "DCEquipmentContainer")
	private List<DCNode> DCNodes;

	@JsonIgnore
	public List<DCNode> getDCNodes(){
		return this.DCNodes;
	}

	@AssociationSetter(fieldName = "DCEquipmentContainer.DCNodes", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.DC.DCNode", cardinality = "many")
	public void setDCNodes(List<DCNode> DCNodes){
		this.DCNodes = DCNodes;
	}

	public DCEquipmentContainer(){

	}

}
