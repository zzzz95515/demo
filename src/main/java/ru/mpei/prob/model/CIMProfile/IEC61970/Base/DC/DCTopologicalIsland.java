package ru.mpei.prob.model.CIMProfile.IEC61970.Base.DC;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Core.IdentifiedObject;
import ru.mpei.prob.model.CIMProfile.IEC61970.Base.Topology.DCTopologicalNode;
import ru.mpei.prob.model.CIMProfile.ResourceAnnotations.*;

import javax.persistence.*;
import java.util.List;

/**
 * An electrically connected subset of the network. DC topological islands 
 * can change as the current network state changes: e.g. due to - disconnect 
 * switches or breakers change state in a SCADA/EMS- manual creation, change 
 * or deletion of topological nodes in a planning tool.
 * Generated by "JavaBeansGenerator" project.
 * @author Said Nukhulov  (nukhulovsm@yandex.ru)
 * @created Sat Dec 05 15:18:51 MSK 2020
 */

@Entity
@Table(name = "dctopologicalisland")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DCTopologicalIsland extends IdentifiedObject {

	@OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, fetch = FetchType.LAZY, mappedBy = "DCTopologicalIsland")
	private List<DCTopologicalNode> DCTopologicalNodes;

	@JsonIgnore
	public List<DCTopologicalNode> getDCTopologicalNodes(){
		return this.DCTopologicalNodes;
	}

	@AssociationSetter(fieldName = "DCTopologicalIsland.DCTopologicalNodes", assocType = "ru.mpei.ltdb.model.CIMProfile.IEC61970.Base.Topology.DCTopologicalNode", cardinality = "many")
	public void setDCTopologicalNodes(List<DCTopologicalNode> DCTopologicalNodes){
		this.DCTopologicalNodes = DCTopologicalNodes;
	}

	public DCTopologicalIsland(){

	}

}
